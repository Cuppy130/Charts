<Mods LoadCommand = "%xero(function(self)
	if not P1 or not P2 then
		backToSongWheel('Two Player Mode Required')
		return
	end

	-- judgment / combo proxies
	for pn = 1, 2 do
		setupJudgeProxy(PJ[pn], P[pn]:GetChild('Judgment'), pn)
		setupJudgeProxy(PC[pn], P[pn]:GetChild('Combo'), pn)
	end
	-- player proxies
	for pn = 1, #PP do
		PP[pn]:SetTarget(P[pn])
		P[pn]:hidden(1)
	end
	-- your code goes here here:
func{0,function(self)
  for pn=3,8 do
    if P[pn] then
      P[pn]:GetChild('Combo'):hidden(1)
      P[pn]:GetChild('Judgment'):hidden(1)
    end
  end
end}
	func { 0, function()
    for pn=3,4 do
        local p = P[pn]
        p:SetInputPlayer(math.mod(pn-1, 2))
    end
end }
	definemod{'pixelatesprite',function(amt)
  pixelatesprite:GetShader():uniform1f('amount',amt)
end}
pixelatesprite:SetTexture(pixelateaft:GetTexture())
	setdefault {2.15, 'xmod', 100, 'overhead', 100, 'dizzyholds', 100, 'modtimer', 10000, 'pixelatesprite'}
P3:SetAwake(true)
P3:hidden(0)
P3:GetChild('Judgment'):hidden(1)
	local background = SCREENMAN:GetTopScreen():GetChild('SongBackground')
	setdefault { SCREEN_LEFT_X, 'bgx', SCREEN_TOP_Y, 'bgy' }
	definemod { 'bgx', function(p)
  background:x(p)
end }
definemod { 'bgy', function(p)
  background:y(p)
end }
definemod { 'bgz', function(p)
  background:z(p)
end }
--start of beginning--
	P1:x(scx)
	P2:x(scx)
	P3:x(scx)
	set {0, 100, 'stealthpastreceptors', plr = 3}
	set {0, 100, 'stealthpastreceptors', plr = 4}

	ease {0, 0.5, outExpo, 100, 'dark', plr = 3}
	ease {0, 0.5, outExpo, 100, 'hidenoteflash', plr = 3}
	ease {0, 0.5, outExpo, 100, 'stealth', plr = 3}
	for i=0,7.25,1.25 do
ease {i, 0.25, outExpo, 20, 'reverse0'}
ease {i+0.25, 0.25, outExpo, 0, 'reverse0'}
end
	for i=0.25,7.25,1.25 do
ease {i, 0.25, outExpo, 20, 'reverse1'}
ease {i+0.25, 0.25, outExpo, 0, 'reverse1'}
end
	for i=0.5,7.25,1.25 do
ease {i, 0.25, outExpo, 20, 'reverse2'}
ease {i+0.25, 0.25, outExpo, 0, 'reverse2'}
end
	for i=0.75,7.25,1.25 do
ease {i, 0.25, outExpo, 20, 'reverse3'}
ease {i+0.25, 0.25, outExpo, 0, 'reverse3'}
end
--20reverse with 0,2 and 1,3 column
	for i=8,15,1 do
ease {i, 0.25, outExpo, 10, 'reverse0'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse0'}
ease {i, 0.25, outExpo, 10, 'reverse2'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse2'}
end
	for i=8,15,1 do
ease {i, 0.25, outExpo, -10, 'reverse1'}
ease {i+0.5, 0.25, outExpo, 10, 'reverse1'}
ease {i, 0.25, outExpo, -10, 'reverse3'}
ease {i+0.5, 0.25, outExpo, 10, 'reverse3'}
end
--15th beat reset--
ease {16, 0.5, outExpo, 0, 'reverse0'}
ease {16, 0.5, outExpo, 0, 'reverse1'}
ease {16, 0.5, outExpo, 0, 'reverse2'}
ease {16, 0.5, outExpo, 0, 'reverse3'}
ease {16, 0.5, outExpo, 50, 'stealth'}
ease {16.5, 0.75, outExpo, 0, 'stealth'}
--ready for player 1 and 2 and context swap--
	for i=16,24,0.5 do
ease {i, 0.25, outExpo, 500, 'beat'}
ease {i, 0.25, outExpo, 30, 'tornado'}
ease {i, 0.25, outExpo, 40, 'twirl'}
ease {i+0.25, 0.25, outExpo, -40, 'twirl'}
ease {i, 0.25, outExpo, 100, 'zigzag'}
ease {i+0.5, 0.25, outExpo, -100, 'zigzag'}
end
ease {24.5, 2.5, outExpo, 100, 'hidenoteflash'}
ease {24.5, 2.5, outExpo, 100, 'dark'}
ease {24.5, 1.5, outExpo, 100, 'stealth'}
--context switch at the backgroud--
	ease {26, 0.5, outExpo, 100, 'stealthpastreceptors'}
	ease {26, 0.5, outExpo, -50, 'flip'}
	ease {26, 0.5, outExpo, 100, 'drunk'}
	ease {26, 0.5, outExpo, 100, 'tipsy'}
	ease {26, 0.5, outExpo, 100, 'reverse'}
	ease {23.5, 0.5, outExpo, 1.9, 'xmod', plr = 3}
	ease {23.5, 0.5, outExpo, -50, 'flip', plr = 3}
	ease {23.5, 0.5, outExpo, 100, 'drunk', plr = 3}
	ease {23.5, 0.5, outExpo, 100, 'tipsy', plr = 3}
	ease {23.5, 0.5, outExpo, 100, 'reverse', plr = 3}
	ease {24, 2.5, outExpo, 80, 'dark', plr = 3}
	ease {24, 0.01, outExpo, 0, 'hidenoteflash', plr = 3}
	ease {24, 1.5, outExpo, 15, 'stealth', plr = 3}
--back to player 1 and 2--
	ease {32, 0.5, outExpo, 0, 'flip'}
	ease {32, 0.5, outExpo, 0, 'drunk'}
	ease {32, 0.5, outExpo, 0, 'tipsy'}
	ease {31.8, 0.5, outExpo, 0, 'reverse'}
	ease {32, 0.1, outExpo, 0, 'flip', plr = 3}
	ease {32, 0.1, outExpo, 0, 'drunk', plr = 3}
	ease {32, 0.1, outExpo, 0, 'tipsy', plr = 3}
	ease {32, 2.5, outExpo, 100, 'dark', plr = 3}
	ease {32, 2.5, outExpo, 100, 'hidenoteflash', plr = 3}
	ease {32, 1.5, outExpo, 100, 'stealth', plr = 3}
ease {32, 0.0001, outExpo, 0, 'hidenoteflash'}
ease {32, 2.5, outExpo, 0, 'dark'}
ease {32, 2.5, outExpo, 0, 'stealth'}
ease {40, 0.25, outExpo, -100, 'mini'}
ease {40, 0.25, outExpo, 0, 'reverse', plr = 3}
ease {40.25, 1.5, outExpo, 0, 'mini'}
ease {43.25, 0.5, outExpo, -300, 'mini'}
ease {43.5, 2.5, outExpo, 0, 'mini'}
--mini scar gimmick--
ease {44, 0.25, outExpo, 100, 'reverse0'}
ease {44.5, 0.25, outExpo, 100, 'reverse1'}
ease {45, 0.25, outExpo, 100, 'reverse2'}
ease {45.5, 0.25, outExpo, 100, 'reverse3'}
ease {46, 0.25, outExpo, 0, 'reverse0'}
ease {46.5, 0.25, outExpo, 0, 'reverse1'}
ease {47, 0.25, outExpo, 0, 'reverse2'}
ease {47.5, 0.25, outExpo, 0, 'reverse3'}
--20reverse with 0,2 and 1,3 column....2!--
ease {48, 2.5, outExpo, 0, 'beat'}
ease {48, 2.5, outExpo, 0, 'tornado'}
ease {48, 2.5, outExpo, 0, 'zigzag'}
ease {48, 2.5, outExpo, 0, 'twirl'}
ease {48, 0.5, outExpo, 50, 'stealth'}
ease {48.5, 1.5, outExpo, 0, 'stealth'}
	for i=48,63,1 do
ease {i, 0.25, outExpo, 12.5, 'reverse0'}
ease {i+0.5, 0.25, outExpo, -12.5, 'reverse0'}
ease {i, 0.25, outExpo, 12.5, 'reverse2'}
ease {i+0.5, 0.25, outExpo, -12.5, 'reverse2'}
end
	for i=48,63,1 do
ease {i, 0.25, outExpo, -12.5, 'reverse1'}
ease {i+0.5, 0.25, outExpo, 12.5, 'reverse1'}
ease {i, 0.25, outExpo, -12.5, 'reverse3'}
ease {i+0.5, 0.25, outExpo, 12.5, 'reverse3'}
end
--64th beat reset--
ease {64, 0.5, outExpo, 0, 'reverse0'}
ease {64, 0.5, outExpo, 0, 'reverse1'}
ease {64, 0.5, outExpo, 0, 'reverse2'}
ease {64, 0.5, outExpo, 0, 'reverse3'}
ease {64, 0.5, outExpo, 50, 'stealth'}
ease {64.5, 0.75, outExpo, 0, 'stealth'}
--ready for player 1 and 2 and context swap--
	for i=64,72.5,0.5 do
ease {i, 0.25, outExpo, 500, 'beat'}
ease {i, 0.25, outExpo, 25, 'tornado'}
ease {i, 0.25, outExpo, 45, 'twirl'}
ease {i+0.25, 0.25, outExpo, -45, 'twirl'}
ease {i, 0.25, outExpo, -100, 'zigzag'}
ease {i+0.5, 0.25, outExpo, 100, 'zigzag'}
end
ease {72.5, 2.5, outExpo, 100, 'hidenoteflash'}
ease {72.5, 2.5, outExpo, 100, 'dark'}
ease {72.5, 1.5, outExpo, 100, 'stealth'}
--context switch at the backgroud--
	ease {71, 0.5, outExpo, 0, 'beat'}
	ease {72, 0.5, outExpo, -50, 'flip', plr = 3}
	ease {72, 0.5, outExpo, 100, 'drunk', plr = 3}
	ease {72, 0.5, outExpo, 100, 'tipsy', plr = 3}
	ease {72, 0.5, outExpo, 100, 'reverse', plr = 3}
	ease {72, 1.5, outExpo, 80, 'dark', plr = 3}
	ease {72, 1.5, outExpo, 0, 'hidenoteflash', plr = 3}
	ease {72, 1, outExpo, 15, 'stealth', plr = 3}
	ease {78, 1, outExpo, 100, 'stealth', plr = 3}
	ease {78, 1, outExpo, -200, 'flip', plr = 3}
	ease {78, 2.5, outExpo, 100, 'hidenoteflash', plr = 3}
	ease {78, 2.5, outExpo, 100, 'dark', plr = 3}
--back to player 1 and 2--
ease {78.5, 2.5, outExpo, -50, 'flip'}
ease {79.5, 2, outExpo, 0, 'flip'}
ease {79.5, 2.5, outExpo, 0, 'hidenoteflash'}
ease {79.5, 2.5, outExpo, 0, 'dark'}
ease {79.5, 1.5, outExpo, 0, 'stealth'}
func{80,function()
   P3:hidden(1)
end}
	for i=80,92,0.5 do
ease {i, 0.25, outExpo, 500, 'beat'}
ease {i, 0.25, outExpo, 25, 'tornado'}
ease {i, 0.25, outExpo, 45, 'twirl'}
ease {i+0.25, 0.25, outExpo, -45, 'twirl'}
ease {i, 0.25, outExpo, -100, 'zigzag'}
ease {i+0.5, 0.25, outExpo, 100, 'zigzag'}
end
--start gimmick and rotationz--
ease {93.25, 0.25, outExpo, 0, 'beat'}
ease {93.25, 0.25, outExpo, 0, 'tornado'}
ease {93.25, 0.25, outExpo, 0, 'twirl'}
ease {93.25, 0.25, outExpo, 0, 'twirl'}
ease {93.25, 0.25, outExpo, 0, 'zigzag'}
ease {93.25, 0.25, outExpo, -400, 'mini'}
ease {93.25, 0.25, outExpo, 50, 'flip'}
ease {93.5, 2, outExpo, 0, 'mini'}	
ease {93.55, 2, outExpo, 0, 'flip'}
set {94, 15, 'rotationz'}
set {94.5, -15, 'rotationz'}
set {95, 15, 'rotationz'}
set {95.5, -15, 'rotationz'}
set {96, 35, 'rotationz'}
set {96, -35, 'mini'}
set {96, 35, 'rotationz'}
set {96, -35, 'mini'}
set {96.75, -50, 'rotationz'}
set {96.75, -50, 'mini'}
set {97.5, 70, 'rotationz'}
set {97.5, -70, 'mini'}
ease {97.51, 0.01, outExpo, 0, 'rotationz'}
ease {97.51, 2, outExpo, 0, 'mini'}
--flicker rolls--
set {101, 50, 'stealth'}
set {101, 100, 'invert'}
set {101.125, 0, 'invert'}
set {101.125, 100, 'flip'}
set {101.250, 75, 'flip'}
set {101.250, 75, 'invert'}
set {101.375, 0, 'invert'}
set {101.375, 0, 'flip'}
set {101.500, -25, 'flip'}
set {101.500, 75, 'invert'}
set {101.625, 0, 'invert'}
set {101.625, 100, 'flip'}
set {101.750, 0, 'flip'}
set {101.750, 0, 'stealth'}
--dizzy--
set {101.750, 500, 'bumpy'}
set {105.750, 0, 'bumpy'}
ease {105.750, 0.25, outExpo, -400, 'mini'}
ease {106, 2, outExpo, 0, 'mini'}
ease {107, 7, outExpo, 1000, 'dizzy'}
--scar--
ease {108, 0.25, outExpo, 100, 'reverse0'}
ease {108.5, 0.25, outExpo, 100, 'reverse1'}
ease {109, 0.25, outExpo, 100, 'reverse2'}
ease {109.5, 0.25, outExpo, 100, 'reverse3'}
ease {110, 0.25, outExpo, 0, 'reverse0'}
ease {110.5, 0.25, outExpo, 0, 'reverse1'}
ease {111, 0.25, outExpo, 0, 'reverse2'}
ease {111.5, 0.25, outExpo, 0, 'reverse3'}
ease {112, 0.25, outExpo, 100, 'reverse0'}
ease {112.5, 0.25, outExpo, 100, 'reverse1'}
ease {113, 0.25, outExpo, 100, 'reverse2'}
ease {113.5, 0.25, outExpo, 100, 'reverse3'}
ease {114, 0.25, outExpo, 0, 'reverse0'}
ease {114.5, 0.25, outExpo, 0, 'reverse1'}
ease {115, 0.25, outExpo, 0, 'reverse2'}
ease {115.5, 0.25, outExpo, 0, 'reverse3'}
ease {116, 0.25, outExpo, 100, 'reverse0'}
for b = 116,122,1 do
	ease {b, 0.25, outExpo, 100, 'reverse0'}
	ease {b+0.25, 0.25, outExpo, 0, 'reverse0'}
	ease {b+0.25, 0.25, outExpo, 100, 'reverse1'}
	ease {b+0.5, 0.25, outExpo, 0, 'reverse1'}
	ease {b+0.5, 0.25, outExpo, 100, 'reverse2'}
	ease {b+0.75, 0.25, outExpo, 0, 'reverse2'}
	ease {b+0.75, 0.25, outExpo, 100, 'reverse3'}
	ease {b+1, 0.25, outExpo, 0, 'reverse3'}
end
ease {122, 1, outExpo, 0, 'dizzy'}
--reverse with left, right--
ease {128, 1, outExpo, 100, 'reverse3'}
ease {128, 1, outExpo, 100, 'reverse2'}
ease {128.25, 1, outExpo, 100, 'reverse0'}
ease {128.25, 1, outExpo, 100, 'reverse1'}
ease {128.75, 1, outExpo, 0, 'reverse3'}
ease {128.75, 1, outExpo, 0, 'reverse2'}
ease {129.25, 1, outExpo, 0, 'reverse0'}
ease {129.25, 1, outExpo, 0, 'reverse1'}
ease {129.5, 1, outExpo, 100, 'reverse3'}
ease {129.5, 1, outExpo, 100, 'reverse2'}
ease {130, 1, outExpo, 100, 'reverse0'}
ease {130, 1, outExpo, 100, 'reverse1'}
ease {130.5, 0.5, outExpo, 0, 'reverse2'}
ease {130.5, 0.5, outExpo, 0, 'reverse3'}
ease {131, 0.5, outExpo, 0, 'reverse0'}
ease {131, 0.5, outExpo, 0, 'reverse1'}
--guitar-
ease {132, 0.3, outExpo, 500, 'noteskewx0'}
ease {132.3, 0.3, outExpo, 0, 'noteskewx0'}
ease {132.75, 0.3, outExpo, 500, 'noteskewx3'}
ease {133.05, 0.3, outExpo, 0, 'noteskewx3'}
ease {133.5, 0.3, outExpo, 500, 'noteskewx0'}
ease {133.8, 0.3, outExpo, 0, 'noteskewx0'}
ease {134.25, 0.3, outExpo, 500, 'noteskewx1'}
ease {134.55, 0.3, outExpo, 0, 'noteskewx1'}
ease {135, 0.3, outExpo, 500, 'noteskewx0'}
ease {135.3, 0.3, outExpo, 0, 'noteskewx0'}	
ease {135.5, 0.3, outExpo, -500, 'noteskewx3'}
ease {135.8, 0.3, outExpo, 0, 'noteskewx3'}	
ease {136, 0.3, outExpo, -500, 'noteskewx0'}
ease {136.3, 0.3, outExpo, 0, 'noteskewx0'}	
ease {136.75, 0.3, outExpo, -100, 'noteskewx2'}
ease {137.05, 0.3, outExpo, 0, 'noteskewx2'}	
ease {137.5, 0.3, outExpo, -500, 'noteskewx1'}
ease {137.8, 0.3, outExpo, 0, 'noteskewx1'}	
ease {138.25, 0.3, outExpo, -500, 'noteskewx3'}
ease {138.55, 0.3, outExpo, 0, 'noteskewx3'}	
ease {139, 0.3, outExpo, -500, 'noteskewx0'}
ease {139.3, 0.3, outExpo, 0, 'noteskewx0'}	
ease {140, 0.3, outExpo, 500, 'noteskewx3'}
ease {140.3, 0.3, outExpo, 0, 'noteskewx3'}
ease {140.75, 0.3, outExpo, 500, 'noteskewx0'}
ease {141.05, 0.3, outExpo, 0, 'noteskewx0'}
ease {141.5, 0.3, outExpo, 500, 'noteskewx1'}
ease {141.8, 0.3, outExpo, 0, 'noteskewx1'}
ease {142.25, 0.3, outExpo, 500, 'noteskewx2'}
ease {142.55, 0.3, outExpo, 0, 'noteskewx2'}
ease {143, 0.3, outExpo, 500, 'noteskewx3'}
ease {143.3, 0.3, outExpo, 0, 'noteskewx3'}	
ease {143.5, 0.3, outExpo, -500, 'noteskewx1'}
ease {143.8, 0.3, outExpo, 0, 'noteskewx1'}
ease {144, 0.3, outExpo, -500, 'noteskewx3'}
ease {144.3, 0.3, outExpo, 0, 'noteskewx3'}
ease {144.75, 0.3, outExpo, -500, 'noteskewx0'}
ease {145.05, 0.3, outExpo, 0, 'noteskewx0'}
ease {145.5, 0.3, outExpo, -500, 'noteskewx3'}
ease {145.8, 0.3, outExpo, 0, 'noteskewx3'}
ease {140, 0.3, outExpo, -500, 'noteskewx3'}
ease {146, 0.5, outExpo, -100, 'mini'}
ease {146, 0.5, outExpo, -40, 'rotationz'}
ease {147, 0.5, outExpo, -200, 'mini'}
ease {147, 0.5, outExpo, 40, 'rotationz'}
ease {148, 0.4, outExpo, -300, 'mini'}
ease {148, 0.4, outExpo, -40, 'rotationz'}
ease {148.1, 2, outExpo, 0, 'mini'}
ease {148.1, 2, outExpo, 0, 'rotationz'}
--drum--
ease {149, 0.25, outExpo, 50, 'reverse1'}
ease {149.25, 0.25, outExpo, 0, 'reverse1'}
ease {149.75, 0.25, outExpo, 50, 'reverse3'}
ease {150, 0.25, outExpo, 0, 'reverse3'}
ease {150.25, 0.25, outExpo, 50, 'reverse0'}
ease {150.5, 0.25, outExpo, 0, 'reverse0'}
ease {151, 0.25, outExpo, 50, 'reverse1'}
ease {151.25, 0.25, outExpo, 0, 'reverse1'}
ease {152, 0.25, outExpo, 50, 'reverse2'}
ease {152.25, 0.25, outExpo, 0, 'reverse2'}
ease {152.5, 0.25, outExpo, 50, 'reverse3'}
ease {152.75, 0.25, outExpo, 0, 'reverse3'}
ease {153, 0.25, outExpo, 50, 'reverse1'}
ease {153.25, 0.25, outExpo, 0, 'reverse1'}
ease {153.5, 0.25, outExpo, 50, 'reverse2'}
ease {153.75, 0.25, outExpo, 0, 'reverse2'}
ease {154, 0.25, outExpo, 50, 'reverse0'}
ease {154.25, 0.25, outExpo, 0, 'reverse0'}
ease {155, 0.5, outExpo, 50, 'stealth'}
ease {155.5, 0.5, outExpo, 0, 'stealth'}
ease {156, 0.5, outExpo, -200, 'mini'}
ease {156.25, 2, outExpo, 0, 'mini'}
ease {157, 0.25, outExpo, 50, 'reverse1'}
ease {157.25, 0.25, outExpo, 0, 'reverse1'}
ease {157.75, 0.25, outExpo, 50, 'reverse0'}
ease {158, 0.25, outExpo, 0, 'reverse0'}
ease {158.25, 0.25, outExpo, 50, 'reverse3'}
ease {158.5, 0.25, outExpo, 0, 'reverse3'}
ease {159, 0.25, outExpo, 50, 'reverse1'}
ease {159.25, 0.25, outExpo, 0, 'reverse1'}
ease {160, 0.25, outExpo, 50, 'reverse2'}
ease {160.25, 0.25, outExpo, 0, 'reverse2'}
ease {160.5, 0.25, outExpo, 50, 'reverse0'}
ease {160.75, 0.25, outExpo, 0, 'reverse0'}
ease {161, 0.25, outExpo, 50, 'reverse1'}
ease {161.25, 0.25, outExpo, 0, 'reverse1'}
ease {161.5, 0.25, outExpo, 50, 'reverse2'}
ease {161.75, 0.25, outExpo, 0, 'reverse2'}
ease {162, 0.5, outExpo, -100, 'mini'}
ease {162, 0.5, outExpo, 40, 'rotationz'}
ease {163, 0.5, outExpo, -200, 'mini'}
ease {163, 0.5, outExpo, -40, 'rotationz'}
ease {164, 0.4, outExpo, -300, 'mini'}
ease {164, 0.4, outExpo, 40, 'rotationz'}
ease {164.1, 2, outExpo, 0, 'mini'}
ease {164.1, 2, outExpo, 0, 'rotationz'}
--short scar--
ease {165, 0.25, outExpo, -100, 'mini'}
ease {165.25, 0.25, outExpo, -200, 'mini'}
ease {165.75, 1.25, outExpo, 0, 'mini'}
ease {165, 0.25, outExpo, -50, 'tornado'}
ease {167, 2, outExpo, 100, 'reverse0'}
ease {167.5, 2, outExpo, 100, 'reverse1'}
ease {168, 2, outExpo, 100, 'reverse2'}
ease {168.5, 2, outExpo, 100, 'reverse3'}
ease {170, 2, outExpo, 0, 'reverse3'}
ease {170.5, 2, outExpo, 0, 'reverse1'}
ease {171, 2, outExpo, 0, 'reverse2'}
ease {171.5, 2, outExpo, 0, 'reverse0'}
--skew nonsense with the drums and guitar
for i=136,139.75,0.5 do
  ease {i,0.25,outCubic,100,'skewx'}
  ease {i+0.25,0.25,outCubic,-100,'skewx'}
end
ease {140, 0.25, outExpo, 0, 'skewx'}
for i=144,145.75,0.5 do
  ease {i,0.25,outCubic,100,'skewx'}
  ease {i+0.25,0.25,outCubic,-100,'skewx'}
end
ease {146, 0.25, outExpo, 0, 'skewx'}
for i=152,154.75,0.5 do
  ease {i,0.25,outCubic,100,'skewx'}
  ease {i+0.25,0.25,outCubic,-100,'skewx'}
end
ease {155, 0.25, outExpo, 0, 'skewx'}
for i=160,161.75,0.5 do
  ease {i,0.25,outCubic,100,'skewx'}
  ease {i+0.25,0.25,outCubic,-100,'skewx'}
end
ease {162, 0.25, outExpo, 0, 'skewx'}
--short flip--
ease {168.75, 0.5, outExpo, 50, 'flip'}
ease {169.25, 0.5, outExpo, 0, 'flip'}
ease {169.75, 0.5, outExpo, 50, 'flip'}
ease {170.25, 0.5, outExpo, 0, 'flip'}
--flicker rolls--
set {173.5, 50, 'stealth'}
set {173.5, 100, 'invert'}
set {173.625, 0, 'invert'}
set {173.625, 100, 'flip'}
set {173.750, 75, 'flip'}
set {173.750, 75, 'invert'}
set {173.875, 0, 'invert'}
set {173.875, 0, 'flip'}
set {174, -25, 'flip'}
set {174, 75, 'invert'}
set {174.125, 0, 'invert'}
set {174.125, 100, 'flip'}
set {174.250, 0, 'flip'}
set {174.250, 0, 'stealth'}
--flicker rolls section P2----
set {176, 50, 'stealth'}
set {176, 100, 'invert'}
set {176.125, 0, 'invert'}
set {176.125, 100, 'flip'}
set {176.25, 75, 'flip'}
set {176.25, 75, 'invert'}
set {176.375, 0, 'invert'}
set {176.375, 0, 'flip'}
set {176.5, -25, 'flip'}
set {176.5, 75, 'invert'}
set {176.625, 0, 'invert'}
set {176.625, 0, 'flip'}
set {176.625, 0, 'stealth'}
--flicker rolls section P3----
set {180.75, 50, 'stealth'}
set {180.75, 100, 'invert'}
set {181, 0, 'invert'}
set {181, 100, 'flip'}
set {181.125, 75, 'flip'}
set {181.125, 75, 'invert'}
set {181.250, 0, 'invert'}
set {181.250, 0, 'flip'}
set {181.5, -25, 'flip'}
set {181.5, 75, 'invert'}
set {181.625, 0, 'invert'}
set {181.625, 100, 'flip'}
set {181.750, 0, 'flip'}
set {181.750, 0, 'stealth'}
--flicker rolls section P4----
set {181.75, 50, 'stealth'}
set {181.75, 100, 'invert'}
set {181.925, 0, 'invert'}
set {181.925, 100, 'flip'}
set {182, 75, 'flip'}
set {182, 75, 'invert'}
set {182.125, 0, 'invert'}
set {182.125, 0, 'flip'}
set {182.25, -25, 'flip'}
set {182.25, 75, 'invert'}
set {182.5, 0, 'flip'}
set {182.5, 0, 'invert'}
set {182.5, 0, 'stealth'}
--flicker rolls section P5----
set {192.75, 50, 'stealth'}
set {192.75, 100, 'invert'}
set {192.925, 0, 'invert'}
set {192.925, 100, 'flip'}
set {193, 75, 'flip'}
set {193, 75, 'invert'}
set {193.125, 0, 'invert'}
set {193.125, 0, 'flip'}
set {193.25, -25, 'flip'}
set {193.25, 75, 'invert'}
set {193.5, 0, 'invert'}
set {193.5, 0, 'flip'}
set {193.5, 0, 'stealth'}
--50stealth before shader-
ease {203, 1, outExpo, 50, 'stealth'}
ease {204, 1, outExpo, 0, 'stealth'}
ease {204.5, 1, outExpo, 50, 'stealth'}
ease {205.5, 1, outExpo, 0, 'stealth'}
ease {205, 1, outExpo, 50, 'stealth'}
ease {206, 1, outExpo, 0, 'stealth'}
ease {207, 1, outExpo, 50, 'stealth'}
ease {208, 1, outExpo, 0, 'stealth'}
--tornado yay--
ease {172, 0.5, outExpo, 0, 'reverse0'}
ease {172, 0.5, outExpo, 0, 'reverse1'}
ease {172.75, 0.5, outExpo, 0, 'reverse2'}
ease {172.75, 0.5, outExpo, 0, 'reverse3'}
ease {185.5, 7, outExpo, 100, 'tornado'}
set {200, 0, 'tornado'}
--rolling up--
set {200, 50, 'roll'}
ease {206.5, 2, outExpo, 0, 'roll'}
--pixallated with stutter driven drop-
ease {205, 5, outExpo, 95, 'pixelatesprite'}
	for i=8,15,1 do
ease {i, 0.25, outExpo, 10, 'reverse0'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse0'}
ease {i, 0.25, outExpo, 10, 'reverse2'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse2'}
end
	for i=212,239,1 do
ease {i, 0.25, outExpo, -10, 'reverse1'}
ease {i+0.5, 0.25, outExpo, 10, 'reverse1'}
ease {i, 0.25, outExpo, -10, 'reverse3'}
ease {i+0.5, 0.25, outExpo, 10, 'reverse3'}
end
	for i=212,239,1 do
ease {i, 0.25, outExpo, 10, 'reverse0'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse0'}
ease {i, 0.25, outExpo, 10, 'reverse2'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse2'}
end
	for i=212,239,1 do
ease {i, 0.25, outExpo, 10, 'reverse0'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse0'}
ease {i, 0.25, outExpo, 10, 'reverse2'}
ease {i+0.5, 0.25, outExpo, -10, 'reverse2'}
end
ease {210, 0.2, outExpo, 100, 'dark', plr = 1}
ease {210, 0.2, outExpo, 100, 'hidenoteflash', plr = 1}
ease {210, 0.2, outExpo, 100, 'stealth', plr = 2}
ease {210, 0.2, outExpo, 100, 'stealthpastreceptors', plr = 2}
for b = 210,240 do
    ease { b, 1, linear, 2.15 * 100, 'centered2', plr = 1 }
    set { b+1, 0, 'centered2', plr = 1 }
end
ease {228, 0.5, outExpo, 50, 'stealth', plr = 1 }
ease {228.5, 0.5, outExpo, 0, 'stealth', plr = 1 }
ease {229.5, 0.5, outExpo, math.pi * 200, 'confusionoffset'}
ease {230.5, 0.5, outExpo, math.pi * -200, 'confusionoffset'}
ease {231.5, 0.5, outExpo, math.pi * 200, 'confusionoffset'}
ease {232.5, 0.5, outExpo, math.pi * -200, 'confusionoffset'}
ease {233.5, 0.5, outExpo, math.pi * 200, 'confusionoffset'}
ease {234.5, 0.5, outExpo, math.pi * -200, 'confusionoffset'}
ease {235.5, 0.5, outExpo, math.pi * 200, 'confusionoffset'}
ease {236.5, 0.5, outExpo, math.pi * -200, 'confusionoffset'}
ease {237.5, 0.5, outExpo, math.pi * 200, 'confusionoffset'}
ease {238.5, 0.5, outExpo, math.pi * -200, 'confusionoffset'}
ease {239.5, 0.5, outExpo, math.pi * 0, 'confusionoffset'}
--white flash transition--
func { 240, function()
pixelatesprite:hidden(1)
end }
func { 240.1, function()
    whiteFlash:hidden(0)
whiteFlash:stretchto(0,0,SCREEN_WIDTH,SCREEN_HEIGHT)
whiteFlash:diffusealpha(1)
whiteFlash:linear(1)
whiteFlash:diffusealpha(0)
end }
--240th beat reset--
ease {239.95, 0.5, outExpo, -300, 'mini'}
ease {240, 6, outExpo, 0, 'mini'}
ease {240, 0.5, outExpo, 0, 'reverse0'}
ease {240, 0.5, outExpo, 0, 'reverse1'}
ease {240, 0.5, outExpo, 0, 'reverse2'}
ease {240, 0.5, outExpo, 0, 'reverse3'}
ease {241, 0.5, outExpo, 50, 'stealth'}
ease {241.5, 0.75, outExpo, 0, 'stealth'}
--reverse20 with column 0,2 and 1,3--
	for i=248,255.5,1 do
ease {i, 0.25, outExpo, 20, 'reverse0'}
ease {i+0.5, 0.25, outExpo, -20, 'reverse0'}
ease {i, 0.25, outExpo, 20, 'reverse2'}
ease {i+0.5, 0.25, outExpo, -20, 'reverse2'}
end
	for i=248,255.5,1 do
ease {i, 0.25, outExpo, -20, 'reverse1'}
ease {i+0.5, 0.25, outExpo, 20, 'reverse1'}
ease {i, 0.25, outExpo, -20, 'reverse3'}
ease {i+0.5, 0.25, outExpo, 20, 'reverse3'}
end
--256th beat reset--
ease {256, 0.5, outExpo, 0, 'reverse0'}
ease {256, 0.5, outExpo, 0, 'reverse1'}
ease {256, 0.5, outExpo, 0, 'reverse2'}
ease {256, 0.5, outExpo, 0, 'reverse3'}
ease {256, 0.5, outExpo, 0, 'stealth'}
--rotationz--
set {258, -100, 'mini'}
set {258, 35, 'rotationz'}
set {258.5, -150, 'mini'}
set {258.5, -50, 'rotationz'}
set {259, -200, 'mini'}
set {259, 70, 'rotationz'}
set {259.5, -250, 'mini'}
ease {259.51, 0.01, outExpo, 0, 'rotationz'}
ease {259.51, 2, outExpo, 0, 'mini'}
--roll with tornado--
ease {260, 1, outExpo, 500, 'beat'}
ease {260, 1, outExpo, 50, 'tornado'}
ease {260, 1, outExpo, 100, 'zigzag'}
ease {260, 1, outExpo, 20, 'roll'}
ease {260, 1, outExpo, -10, 'flip'}
--flicker rolls--
set {261.75, 50, 'stealth'}
set {261.75, 100, 'invert'}
set {261.875, 0, 'invert'}
set {261.875, 100, 'flip'}
set {262, 75, 'flip'}
set {262, 75, 'invert'}
set {262.125, 0, 'invert'}
set {262.125, 0, 'flip'}
set {262.25, -25, 'flip'}
set {262.25, 75, 'invert'}
set {262.375, 0, 'invert'}
set {262.375, 100, 'flip'}
set {262.5, 0, 'flip'}
set {262.5, 0, 'stealth'}
ease {266, 1, outExpo, 0, 'beat'}
ease {266, 1, outExpo, 0, 'tornado'}
ease {266, 1, outExpo, 0, 'zigzag'}
ease {266, 1, outExpo, 0, 'roll'}
ease {266, 1, outExpo, 0, 'flip'}
--context switch--
	ease {266, 1.5, outExpo, 100, 'stealth'}
	ease {266, 1.5, outExpo, 100, 'hidenoteflash'}
	ease {266, 1.5, outExpo, 100, 'stealthpastreceptors'}
	ease {266, 1.5, outExpo, 100, 'dark'}
	ease {263, 0.5, outExpo, -50, 'flip', plr = 3}
	ease {263, 0.5, outExpo, 100, 'drunk', plr = 3}
	ease {263, 0.5, outExpo, 100, 'tipsy', plr = 3}
	ease {263, 0.5, outExpo, 100, 'reverse', plr = 3}
	ease {264.5, 2.5, outExpo, 80, 'dark', plr = 3}
	ease {264.5, 2.5, outExpo, 0, 'hidenoteflash', plr = 3}
	ease {265.5, 1.5, outExpo, 15, 'stealth', plr = 3}
func{266.5,function()
   P3:hidden(0)
end}
--back to player 1 and 2--
func{279.5,function()
   P3:hidden(1)
end}
	ease {276.5, 0.5, outExpo, 100, 'dark', plr = 3}
	ease {276.5, 0.5, outExpo, 100, 'hidenoteflash', plr = 3}
	ease {276.5, 0.5, outExpo, 100, 'stealth', plr = 3}
	ease {276.5, 0.5, outExpo, -200, 'flip', plr = 3}
	ease {277.75, 1.5, outExpo, 0, 'stealth'}
	ease {277.75, 1.5, outExpo, 0, 'hidenoteflash'}
	ease {277.75, 1.5, outExpo, 0, 'stealthpastreceptors'}
	ease {277.75, 1.5, outExpo, 0, 'dark'}
	ease {277, 1.5, outExpo, -200, 'flip'}
	ease {277.75, 1.5, outExpo, 0, 'flip'}
ease {279.5, 0.0001, outExpo, 0, 'beat'}
ease {279.5, 0.0001, outExpo, 0, 'tornado'}
ease {279.5, 0.0001, outExpo, 0, 'zigzag'}
ease {279.5, 0.0001, outExpo, 0, 'roll'}
ease {279.5, 0.0001, outExpo, 0, 'flip'}
	ease {279.5, 1.5, outExpo, 35, 'rotationz'}
	ease {279.5, 1.5, outExpo, -70, 'mini'}
	ease {280, 1.5, outExpo, -35, 'rotationz'}
	ease {280, 1.5, outExpo, -120, 'mini'}
	ease {280.5, 1.5, outExpo, 0, 'rotationz'}
	ease {280.5, 1.5, outExpo, 0, 'mini'}
	for i=279.5, 289 ,0.5 do
ease {i, 0.25, outExpo, 500, 'beat'}
ease {i, 0.25, outExpo, 30, 'tornado'}
ease {i, 0.25, outExpo, 40, 'twirl'}
ease {i+0.25, 0.25, outExpo, -40, 'twirl'}
ease {i, 0.25, outExpo, 100, 'zigzag'}
ease {i+0.5, 0.25, outExpo, -100, 'zigzag'}
end
ease {289.75, 0.25, outExpo, 0, 'beat'}
ease {289.75, 0.25, outExpo, 0, 'tornado'}
ease {289.75, 0.25, outExpo, 0, 'twirl'}
ease {289.75, 0.25, outExpo, 0, 'twirl'}
ease {289.75, 0.25, outExpo, 0, 'zigzag'}
	ease {288.75, 0.75, outExpo, -300, 'mini'}
	ease {289.5, 1.75, outExpo, 0, 'mini'}
--extra 271 mod--
ease {271.25, 0.25, outExpo, 200, 'zigzag', plr = 3}
ease {271.5, 0.25, outExpo, -200, 'zigzag', plr = 3}
ease {271.75, 0.25, outExpo, 200, 'zigzag', plr = 3}
ease {272, 0.25, outExpo, -200, 'zigzag', plr = 3}
ease {272.5, 0.25, outExpo, 200, 'zigzag', plr = 3}
ease {272.75, 0.25, outExpo, -200, 'zigzag', plr = 3}
ease {273.25, 0.25, outExpo, 200, 'zigzag', plr = 3}
ease {273.5, 0.25, outExpo, -200, 'zigzag', plr = 3}
ease {274.5, 0.25, outExpo, 200, 'zigzag', plr = 3}
ease {275, 0.25, outExpo, -200, 'zigzag', plr = 3}
ease {275.5, 0.25, outExpo, 200, 'zigzag', plr = 3}
ease {276, 0.25, outExpo, -200, 'zigzag', plr = 3}
ease {276.5, 0.25, outExpo, 0, 'zigzag', plr = 3}

--mini scar--
ease {290, 0.5, outExpo, 100, 'reverse0'}
ease {290.5, 0.5, outExpo, 100, 'reverse3'}
ease {291, 0.5, outExpo, 100, 'reverse1'}
ease {291.5, 0.5, outExpo, 100, 'reverse2'}
ease {292, 1, outExpo, 100, 'dark'}
set {293, 0, 'reverse0'}
set {293, 0, 'reverse1'}
set {293, 0, 'reverse2'}
set {293, 0, 'reverse3'}
set {296, 0, 'dark'}
--final verse!--
	ease {296, 0.5, outExpo, -100, 'mini'}
	ease {296.5, 0.5, outExpo, -200, 'mini'}
	ease {297, 0.5, outExpo, -300, 'mini'}
	ease {297.75, 0.5, outExpo, -400, 'mini'}
	ease {298.25, 2.5, outExpo, 0, 'mini'}
	for i=298.5,315,1 do
ease {i, 0.25, outExpo, 15, 'reverse0'}
ease {i+0.5, 0.25, outExpo, -15, 'reverse0'}
ease {i, 0.25, outExpo, 15, 'reverse2'}
ease {i+0.5, 0.25, outExpo, -15, 'reverse2'}
end
	for i=298.5,315,1 do
ease {i, 0.25, outExpo, -15, 'reverse1'}
ease {i+0.5, 0.25, outExpo, 15, 'reverse1'}
ease {i, 0.25, outExpo, -15, 'reverse3'}
ease {i+0.5, 0.25, outExpo, 15, 'reverse3'}
end
	ease {315.5, 0.5, outExpo, 0, 'reverse0'}
		ease {315.5, 0.5, outExpo, 0, 'reverse1'}
			ease {315.5, 0.5, outExpo, 0, 'reverse2'}
				ease {315.5, 0.5, outExpo, 0, 'reverse3'}
	for i=316,331.5,1 do
ease {i, 0.25, outExpo, 20, 'reverse0'}
ease {i, 0.25, outExpo, 30, 'stealth0'}
ease {i+0.5, 0.25, outExpo, -20, 'reverse0'}
ease {i+0.5, 0.25, outExpo, 0, 'stealth0'}
ease {i, 0.25, outExpo, 20, 'reverse2'}
ease {i, 0.25, outExpo, 30, 'stealth2'}
ease {i+0.5, 0.25, outExpo, -20, 'reverse2'}
ease {i+0.5, 0.25, outExpo, 0, 'stealth2'}
end
	for i=316,331.5,1 do
ease {i, 0.25, outExpo, -20, 'reverse1'}
ease {i, 0.25, outExpo, 0, 'stealth1'}
ease {i+0.5, 0.25, outExpo, 20, 'reverse1'}
ease {i+0.5, 0.25, outExpo, 30, 'stealth1'}
ease {i, 0.25, outExpo, -20, 'reverse3'}
ease {i, 0.25, outExpo, 0, 'stealth3'}
ease {i+0.5, 0.25, outExpo, 20, 'reverse3'}
ease {i+0.5, 0.25, outExpo, 30, 'stealth3'}
end
	ease {331.5, 0.25, outExpo, 100, 'stealth'}
	ease {331.5, 0.25, outExpo, 100, 'dark'}
	ease {331.5, 0.25, outExpo, 0, 'reverse0'}
	ease {331.5, 0.25, outExpo, 0, 'reverse1'}
	ease {331.5, 0.25, outExpo, 0, 'reverse2'}
	ease {331.5, 0.25, outExpo, 0, 'reverse3'}
--final attack--
set {331.9, 100, 'stealthpastreceptors'}
set {332, 50, 'mini'}
set {332, 50, 'stealth'}
set {332, 150, 'dark'}
set {332, 100, 'flip'}
set {332, 100, 'reverse'}

	ease {332.5, 0.5, outExpo, 100, 'stealth'}
	ease {332.1, 0.5, outExpo, 0, 'dark'}

set {332.75, 0, 'mini'}
set {332.75, 25, 'stealth'}
set {332.75, 150, 'dark'}
set {332.75, 0, 'flip'}
set {332.75, 100, 'invert'}
set {332.75, 0, 'reverse'}

	ease {333, 0.5, outExpo, 100, 'stealth'}
	ease {333, 0.5, outExpo, 0, 'dark'}

set {333.5, -50, 'mini'}
set {333.5, 10, 'stealth'}
set {333.5, 150, 'dark'}
set {333.5, 25, 'flip'}
set {333.5, -75, 'invert'}
set {333.5, 100, 'reverse'}


	ease {333.6, 0.3, outExpo, 100, 'stealth'}
	ease {333.6, 0.3, outExpo, 0, 'dark'}
	ease {333.5, 0.0005, outExpo, 0, 'flip'}
	ease {333.5, 0.0005, outExpo, 0, 'invert'}
	
	ease {334, 0.01, outExpo, 0, 'stealth'}
	ease {334.25, 0.01, outExpo, 0, 'dark'}
	ease {334.25, 0.25, outExpo, -1000, 'mini'}
	ease {334.25, 0.25, outExpo, 100, 'centered'}
	ease {334.25, 0.25, outExpo, 50, 'flip'}
	ease {334.5, 0.25, outExpo, -2000, 'mini'}
	ease {334.75, 0.25, outExpo, 100, 'dark'}
--disable mines--
set {330, 100, 'hidemines'}
set {336.5, 100, 'disablemines'}
end)"

Type = "ActorFrame"
><children>
	<Layer Type = "ActorProxy" Name = "PC[1]" />
	<Layer Type = "ActorProxy" Name = "PC[2]" />
	<Layer Type = "ActorProxy" Name = "PJ[1]" />
	<Layer Type = "ActorProxy" Name = "PJ[2]" />
	<Layer Type = "ActorProxy" Name = "PP[1]" />
	<Layer Type = "ActorProxy" Name = "PP[2]" />
	<Layer Type="Quad"
       Name="whiteFlash"
       InitCommand="%function(self)
    self:hidden(1)
	self:diffuse(1,1,1,1)
end" />
	<Layer Type="ActorFrameTexture" InitCommand="%xero.aft" Name="pixelateaft"/>
	<Layer Type="Sprite" InitCommand="%xero.sprite" Name="pixelatesprite" Frag="/shader/pixelate.frag"/>
</children></Mods>
