<Mods LoadCommand = "%xero(function(self)
	if not P1 or not P2 then
		backToSongWheel('Two Player Mode Required')
		return
	end

	function play_sound(str)
		local folder = GAMESTATE:GetCurrentSong():GetSongDir()
		SOUND:PlayOnce(folder..'lua/chara/'..str..'.ogg')
	end

----------------------------------
------ Judgment / Combo Proxies --
----------------------------------
	for pn = 1, 2 do
		setupJudgeProxy(PJ[pn], P[pn]:GetChild('Judgment'), pn)
		setupJudgeProxy(PC[pn], P[pn]:GetChild('Combo'), pn)
	end

------------------------
------ Player Proxies --
------------------------
	for pn = 1, #PP do
		PP[pn]:SetTarget(P[pn])
		P[pn]:hidden(1)
	end


--------------------
------ Begin Mods --
--------------------
	-- set the base Mods
	set {0,

		  2.5, 'xmod',
		100.0, 'overhead',
		100.0, 'dizzyholds',
		100.0, 'spiralholds',
		100.0, 'stealthpastreceptors',
		100.0, 'stealthtype',
		100.0, 'bumpyxperiod',
		 50.0, 'bumpyxoffset',
		100.0, 'cover',

		-- sorry but i kinda need this
		150.0, 'drawsize'
	}

	-- by this point, we can revert to normal drawsize
	{14, 0, 'drawsize'}


	func {0, function()
		-- xero y u put the judgements and combo so close to each other?
		local socialDistancing = 10

		for pn = 1, 2 do
			PJ[pn]:addy( -socialDistancing )
			PC[pn]:addy(  socialDistancing )
		end
		
		if P[3] then
			P[3]:SetAwake(true)
			P[3]:hidden(0)
		end
		if P[4] then
			P[4]:SetAwake(true)
			P[4]:hidden(0)
		end
			
	end}


	local function CymbolsGallop(beat)
		ease
		{beat + 0.25, 0.25, outCirc,
			100, 'invert', 50, 'stealth',

			math.rad( 90) * -100, 'confusionoffset0',
			math.rad(-90) * -100, 'confusionoffset1',
			math.rad(-90) * -100, 'confusionoffset2',
			math.rad( 90) * -100, 'confusionoffset3',
		}
		{beat + 0.50, 0.25, outCirc,
			0, 'invert', 0, 'stealth',

			0, 'confusionoffset0',
			0, 'confusionoffset1',
			0, 'confusionoffset2',
			0, 'confusionoffset3',
		}
	end

	CymbolsGallop(123)
	CymbolsGallop(124)
	CymbolsGallop(125)

	CymbolsGallop(151)
	CymbolsGallop(152)
	CymbolsGallop(153)
	CymbolsGallop(154)


	function modBlacklist(t,n)
		for i=1,table.getn(t) do
			if t[i] == n then
				return true
			end
		end
		return false
	end


	local function IDKWhatThisSoundIsCalled(beat, hideReceptors)
		set {beat, 50, 'stealth', 50, 'dark'}
		ease {beat, 0.5, linear, 100, 'stealth'}

		if hideReceptors then
			ease {beat, 0.5, linear, 100, 'dark'}
		end
	end

	IDKWhatThisSoundIsCalled(42.0, true)
	IDKWhatThisSoundIsCalled(43.0, true)
	IDKWhatThisSoundIsCalled(44.5, true)
	IDKWhatThisSoundIsCalled(45.0, true)
	IDKWhatThisSoundIsCalled(45.5, true)
	IDKWhatThisSoundIsCalled(46.5, true)
	IDKWhatThisSoundIsCalled(48.0, true)
	IDKWhatThisSoundIsCalled(48.5, true)
	IDKWhatThisSoundIsCalled(49.0, true)
	IDKWhatThisSoundIsCalled(50.0, true)
	IDKWhatThisSoundIsCalled(51.5, true)
	IDKWhatThisSoundIsCalled(52.0, true)
	IDKWhatThisSoundIsCalled(52.5, true)
	IDKWhatThisSoundIsCalled(53.5, true)
	IDKWhatThisSoundIsCalled(55.0, false)

	IDKWhatThisSoundIsCalled(84.0, true)
	IDKWhatThisSoundIsCalled(85.0, true)
	IDKWhatThisSoundIsCalled(86.5, true)
	IDKWhatThisSoundIsCalled(87.0, true)
	IDKWhatThisSoundIsCalled(87.5, true)
	IDKWhatThisSoundIsCalled(88.5, true)
	IDKWhatThisSoundIsCalled(90.0, true)
	IDKWhatThisSoundIsCalled(90.5, true)
	IDKWhatThisSoundIsCalled(91.0, true)
	IDKWhatThisSoundIsCalled(92.0, true)
	IDKWhatThisSoundIsCalled(93.5, true)
	IDKWhatThisSoundIsCalled(94.0, true)
	IDKWhatThisSoundIsCalled(94.5, true)
	IDKWhatThisSoundIsCalled(95.5, true)

	IDKWhatThisSoundIsCalled(147.0, true)
	IDKWhatThisSoundIsCalled(148.5, true)
	IDKWhatThisSoundIsCalled(150.0, true)

----------------------------------------------------------------------

	-- haha funny 7/8 time signature
	for b = 0, 94.5, 3.5 do
		ease
		{b + 1.50, 0.5, outCirc,100, 'mini'}
		{b + 3.25, 0.5, outCirc,  0, 'mini'}

		if not modBlacklist({10.5, 42, 45.5, 49, 52.5, 80.5, 84, 87.5, 91, 94.5}, b) then
			ease
			{b + 3.0, 0.5, outExpo, 100, 'invert'}
			{b + 3.5, 0.5, outExpo,   0, 'invert'}

			{b + 0.0, 0.5, pop,  200, 'bumpyx'}
			{b + 1.0, 0.5, pop, -200, 'bumpyx'}
			{b + 2.0, 0.5, pop,  200, 'bumpyx'}
			{b + 3.0, 0.5, pop, -200, 'bumpyx'}

			{b + 0.75, 1, popElastic,  70, 'zoomy'}
			{b + 2.50, 1, popElastic, 130, 'zoomy'}
		end
	end

	-- set{0, 100, 'arrowpath'}

	-- hi this is dumb
	for b = 10.5, 12.5 do
		ease
		{b + 0.00 + 0.00, 0.25, inOutCirc, 100, 'brake0'}
		{b + 0.25 + 0.00, 0.25, inOutCirc,   0, 'brake0'}
		
		{b + 0.00 + 0.25, 0.25, inOutCirc, 100, 'brake1'}
		{b + 0.25 + 0.25, 0.25, inOutCirc,   0, 'brake1'}
		
		{b + 0.00 + 0.50, 0.25, inOutCirc, 100, 'brake2'}
		{b + 0.25 + 0.50, 0.25, inOutCirc,   0, 'brake2'}
		
		{b + 0.00 + 0.75, 0.25, inOutCirc, 100, 'brake3'}
		{b + 0.25 + 0.75, 0.25, inOutCirc,   0, 'brake3'}
	end

	ease
	{40, 2, linear, 1.0, 'xmod'}
	{55, 1, linear, 2.5, 'xmod'}

	{82, 2, linear, 1.0, 'xmod'}

	
	{55.5, 0.5, linear, 0, 'stealth'}
	{97.0, 1.0, linear, 0, 'stealth', 0, 'dark'}


	set {97, 2.5, 'xmod'}

----------------------------------------------------------------------

	-- wait, so are we in 7/4 now?
	ease
	{145, 2, linear, 1.0, 'xmod'}

	for b = 98, 140, 7 do
		ease 
		{b + 0.0, 0.5, outExpo,  50, 'mini'}
		{b + 0.5, 0.5, outExpo,   0, 'mini'}
		{b + 1.0, 0.5, outExpo,  50, 'mini'}
		{b + 1.5, 0.5, outExpo,   0, 'mini'}
		{b + 2.5, 0.5, outExpo,  50, 'mini'}
		{b + 3.0, 0.5, outExpo,   0, 'mini'}
		{b + 3.5, 0.5, outExpo,  50, 'mini'}
		{b + 4.0, 1.0, outExpo, -50, 'mini'}
		{b + 5.0, 1.0, outExpo,   0, 'mini'}
		{b + 6.0, 0.5, outExpo, 100, 'mini'}
		{b + 6.5, 0.5, outExpo,   0, 'mini'}

		{b + 0.0, 0.5, pop,  200, 'bumpyx'}
		{b + 1.0, 0.5, pop, -200, 'bumpyx'}
		{b + 2.0, 0.5, pop,  200, 'bumpyx'}
		{b + 3.0, 0.5, pop, -200, 'bumpyx'}
		{b + 4.0, 0.5, pop,  200, 'bumpyx'}
		{b + 5.0, 0.5, pop, -200, 'bumpyx'}
		{b + 6.0, 0.5, pop,  200, 'bumpyx'}
	end

----------------------------------------------------------------------

	-- ok we in 4/4, good
	
	ease
	{150.5, 0.5, linear, 0, 'stealth', 0, 'dark'}

	{151.25 + 0, 0.5, outBack.params(10), 1.375, 'xmod'}
	{151.25 + 1, 0.5, outBack.params(10), 1.750, 'xmod'}
	{151.25 + 2, 0.5, outBack.params(10), 2.125, 'xmod'}
	{151.25 + 3, 0.5, outBack.params(10), 2.500, 'xmod'}


	for b = 155, 179, 8 do
		ease 
		{b + 0.0, 0.5, outExpo,  50, 'mini'}
		{b + 0.5, 0.5, outExpo,   0, 'mini'}
		{b + 1.0, 0.5, outExpo,  50, 'mini'}
		{b + 1.5, 0.5, outExpo,   0, 'mini'}
		{b + 2.5, 0.5, outExpo,  50, 'mini'}
		{b + 3.0, 0.5, outExpo,   0, 'mini'}
		{b + 3.5, 0.5, outExpo,  50, 'mini'}
		{b + 4.0, 1.0, outExpo, -50, 'mini'}
		{b + 5.0, 1.0, outExpo,   0, 'mini'}
		{b + 6.0, 0.5, outExpo, 100, 'mini'}
		{b + 6.5, 0.5, outExpo,   0, 'mini'}
		{b + 7.0, 0.5, outExpo, 100, 'mini'}
		{b + 7.5, 0.5, outExpo,   0, 'mini'}

		{b + 0.0, 0.5, pop,  200, 'bumpyx'}
		{b + 1.0, 0.5, pop, -200, 'bumpyx'}
		{b + 2.0, 0.5, pop,  200, 'bumpyx'}
		{b + 3.0, 0.5, pop, -200, 'bumpyx'}
		{b + 4.0, 0.5, pop,  200, 'bumpyx'}
		{b + 5.0, 0.5, pop, -200, 'bumpyx'}
		{b + 6.0, 0.5, pop,  200, 'bumpyx'}
		{b + 7.0, 0.5, pop, -200, 'bumpyx'}

		{b + 2.5, 0.5, outExpo, 100, 'invert'}
		{b + 3.0, 0.5, outExpo,   0, 'invert'}
		{b + 3.5, 0.5, outExpo, 100, 'invert'}
		{b + 5.0, 0.5, outExpo,   0, 'invert'}
		{b + 6.5, 0.5, outExpo, 100, 'invert'}
		{b + 7.0, 0.5, outExpo,   0, 'invert'}
		{b + 7.5, 0.5, outExpo, 100, 'invert'}
		{b + 9.0, 0.5, outExpo,   0, 'invert'}
	end

	for b = 187, 211, 4 do
		ease
		{b + 0.0, 0.5, pop,  200, 'bumpyx'}
		{b + 1.0, 0.5, pop, -200, 'bumpyx'}
		{b + 2.0, 0.5, pop,  200, 'bumpyx'}
		{b + 3.0, 0.5, pop, -200, 'bumpyx'}

		{b + 3.5, 0.5, outExpo, 100, 'invert'}
		{b + 5.0, 0.5, outExpo,   0, 'invert'}
	end


	set
	{148.0, 100, 'invert'}
	{149.5,   0, 'invert'}


	ease
	{201, 1, linear, 100, 'stealth', 100, 'dark', plr = 1}
	{201, 1, linear, 100, 'stealth', 100, 'dark', plr = 2}

	{203, 1, outExpo, 0, 'stealth', 0, 'dark', plr = 1}
	{203, 1, outExpo, 0, 'stealth', 0, 'dark', plr = 2}


	set
	{0,
		-100, 'mini', 1.7, 'xmod', 100, 'hidenoteflashes', 25, 'flip',
		 100, 'sudden', 100, 'suddenoffset', 100, 'blind', 100, 'dark',
		  50, 'movex0', -50, 'movex1', 50, 'movex2', -50, 'movex3',
	plr = 3}
	{0,
		-100, 'mini', 1.7, 'xmod', 100, 'hidenoteflashes', 25, 'flip',
		 100, 'sudden', 100, 'suddenoffset', 100, 'blind', 100, 'dark',
		  50, 'movex0', -50, 'movex1', 50, 'movex2', -50, 'movex3',
	plr = 4}
	func {0, function()
		for pn = 1, 2 do
			if P[pn] and P[pn + 2] then
				P[pn + 2]:x( P[pn]:GetX() )
			end
		end
	end}


	ease {214.5, 0.5, outCirc, 0, 'zoomy'}

	-- dumb hidden regions
	hide
	{202.5, 1, col = {0, 1, 2, 3}, plr = 1}
	{202.5, 1, col = {0, 1, 2, 3}, plr = 2}

	{000.0, 202.5, col = {0, 1, 2, 3}, plr = 3}
	{203.5, 100.0, col = {0, 1, 2, 3}, plr = 3}
	{000.0, 202.5, col = {0, 1, 2, 3}, plr = 4}
	{203.5, 100.0, col = {0, 1, 2, 3}, plr = 4}

--------------------
------- End Mods ---
--------------------

-------------------------------------------------

--------------------------
------ Begin spellcards --
--------------------------

	card {  0,  98, 'haha funny 7/8 time signature', 3, {0, 0.0, 1.0, 1}}
	card { 98, 147, 'wait, so are we in 7/4 now?',   4, {0, 0.5, 0.5, 1}}
	card {147, 219, 'ok we in 4/4, good',            5, {0, 1.0, 0.0, 1}}

--------------------------
------- End spellcards ---
--------------------------
	
end);"
Type = "ActorFrame"
><children>

	<Layer Type = "ActorProxy" Name = "PC[1]" />
	<Layer Type = "ActorProxy" Name = "PC[2]" />
	<Layer Type = "ActorProxy" Name = "PJ[1]" />
	<Layer Type = "ActorProxy" Name = "PJ[2]" />
	<Layer Type = "ActorProxy" Name = "PP[1]" />
	<Layer Type = "ActorProxy" Name = "PP[2]" />

</children></Mods>
