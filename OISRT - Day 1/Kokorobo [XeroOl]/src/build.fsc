# vi: ft=scopes

let gsub = string.gsub
let read filename =
    'read (io.open filename) "*a"

let _G.readlua filename =
    gsub (read ("build/" .. filename)) "\"" "\'"

# inputs into the template

let _G.wrap str =
    "do end (function()\n" .. str .. "\nend)()\n"

# template reader
let build infile outfile =
    io.output (io.open outfile :w)
    let code = ->
        "%}" .. read infile .. "{%"
        gsub "\t" "  "
        gsub "%%%}\n?" "io.write([=["
        gsub "[\t ]*%{%%" "]=])"
        gsub "%}%}" ")..[=["
        gsub "%{%{" "]=]..("
        gsub "io%.write%(%[=%[%]=%]%)" ""
        loadstring
        assert
    code;

build "src/mods.xml.in" "lua/mods.xml"
build "src/splines.xml.in" "plugins/swap-except-there-are-splines.xml"
