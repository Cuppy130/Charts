<ActorFrame
InitCommand="%function(self)

	songName = GAMESTATE:GetCurrentSong():GetSongDir();
	
	sw = SCREEN_WIDTH
	sh = SCREEN_HEIGHT --shortcuts
	
	if FUCK_EXE then
		dw = DISPLAY:GetDisplayWidth()
		dh = DISPLAY:GetDisplayHeight()
	end
	
	function poly_npot(val)
		local out = 2
		while out < val do
			out = out*2
		end
		return out
	end
	
	
	
	slumpo = false
	for pn=1,2 do
		if GAMESTATE:IsPlayerEnabled(pn-1) then
			if GAMESTATE:GetCurrentSteps(pn-1):GetDifficulty() == 5 then
				slumpo = true
			end
		end
	end
	
	function Plr(pn)
		return _G['P'..pn]
	end
	function GetJud(pn)
		return _G['jud'..pn]
	end
	function GetCom(pn)
		return _G['com'..pn]
	end
	
	function mod_do(str,pn)
		GAMESTATE:ApplyGameCommand('mod,'..str,pn)
	end
	
	function taro_Sound(str)
		local met = GAMESTATE:GetCurrentSong():GetSongDir();
		SOUND:PlayOnce(met..'lua/'..str..'.ogg');
	end
	
	faf_aspect = PREFSMAN:GetPreference('DisplayAspectRatio')
	
	function tween_easeInOutQuad(t)
		local b = 0
		local c = 1
		local d = 1
		t = t/(d/2);
		if (t < 1) then return c/2*t*t + b; end
		t = t-1;
		return -c/2 * (t*(t-2) - 1) + b;
	end
	
	faf_embers = {}
	faf_eptr = 1
	function faf_getember()
		local a = faf_embers[faf_eptr]
		faf_eptr = faf_eptr+1
		if faf_eptr > table.getn(faf_embers) then
			faf_eptr = 1
		end
		return a
	end
	
	faf_shards = {}
	
end"
><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,1000"
	/>
	
	<Layer File="easing.xml" />
	<Layer File="potations.xml" />
	<Layer File="max_burning.xml" />
	<Layer File="modhelpers.xml" />
	<Layer File="spellcard.xml" />
	
	<Layer
		Type="Quad"
		OnCommand="hidden,1"
		InitCommand="%function(self)
		
			checked = false; P1=nil;P2=nil;P3=nil;P4=nil;jud1=nil;com1=nil;jud2=nil;com2=nil;jud3=nil;com3=nil;
		
			---------------------------------------------------------
			---------DOCUMENTATION-----------------------------------
			---------------------------------------------------------
			
			--function perframe( beat, endBeat )
				--return true if the current beat is between 'beat' and 'endBeat'
			
			--function mod_shader(beat,key,which)
				--turn on shader key at specified beat (up to 10 keys available, defined by 'which' = 0-9
				
			--function mod_insert(beat,len,mod,len_or_end,pn)
				--insert mod into beat mods table
			--function mod_insert2(time,len,mod,len_or_end,pn)
				--insert mod into time mods table
				
			--function mod_message(beat,msg,persistent)
				--insert something into the actions table.
				--msg can also be a function. If string, a message gets broadcast at that beat
				--if 'persistent' is true, message will run even if editor starts at a beat past it
				
			--function mod_blacklist(t,n)
				--check if number n occurs in table t
				--useful for doing 'every beat EXCEPT the contents of t'
				
			--function simple_m0d(beat,strength,mult,mod)
			--function simple_m0d2(beat,strength,mult,mod,pn)
			--function simple_m0d3(beat,strength,duration,bpm,mod,pn)
				--activate mods at specific beat but also deactivate them
				
			--function mod_wiggle(beat,num,div,amt,speed,mod,pn,first)
				--alternates a mod back and forth before resetting to 0
				
			--function mod_springt(time,strength,dur,mod,pn)
				--time-based per-frame alternating mod that decreases based on how much time is left.
					--think doorstopper
			
			--function mod_springt2(time,strength,dur,mod,pn)
				--time-based per-frame alternating mod
			
			--function mod_onebeat(beat,strength,pn)
				--turns on beat for the beat specified, at the desired strength	
			
			--function switcheroo_add(beat,which,speed,len,pn)
				--adds a column swap at the desired beat
			--[[	switcheroos = {normal = {0,0}, ldur = {0,0}, reset = {0,0},
					flip = {100,0}, rudl = {100,0}, invert = {0,100}, dlru = {0,100},
					ludr = {25,-75}, rdul = {75,75}, drlu = {25,125}, ulrd = {75,-125}, urld = {100,-100}}
			]]
			
			--use a variable called 'switcheroo_width' to change how much space is between each column
			--e.g. switcheroo_width = 2 for ayakashi
			
			--function mod_sugarkiller(beat,duration,speed,minstealth,maxstealth,pn)
				--portable version of the effect from sugarkill X
				
			--function doSpline(spd, axis, path, col)
				--draws spline 'path' in specified axis, for specific col. Offsets are *10000, but positions use *spd
				
			--function doSplineAll(spd, axis, path)
				--same as above, but for all columns
				--(faster performance than using doSpline 4 times due to more efficient concat)
			
			--function mindf_rotateAndCounter(xDegrees, yDegrees, zDegrees, player)
				--counteract euler rotations after rotating player in multiple axes, using a TON of math.
			
			
			---------------------------------------------------------
			--------END DOCUMENTATION--------------------------------
			---------------------------------------------------------
			
			local m = mod_insert
			local m2 = mod_message
			
			
			local l = 'len'
			local e = 'end'
			
			
			
			
			
			
			
			init_modsp1 = '';
			init_modsp2 = '';
			
			mod_plr = {};
			
			mod_firstSeenBeat = GAMESTATE:GetSongBeat(); --necessary to prevent long freezes
			
			
			
			
			
			
			
			
			
---------------------------------------------------------------------------------------
----------------------Begin tables 'n stuff--------------------------------------------
---------------------------------------------------------------------------------------

			--beat based mods
			--{beat_start, beat_end, mods, len_or_end, player_number}
			mods = {
				{0,9999,'*2 2x, *1000 no beat, *10000 -999999 cover','end'},
			}
			
			--switcheroos = {{0,0},{100,0},{0,100},{25,-75},{75,75},{25,125},{75,-125},{100,-100}}
			
			
			
			
			
			
			
			--time based mods
			mod_time = 0;
			--{time_start, time_end, mods, len_or_end, player_number}
			mods2 = {
				--{0,200.345,'3x','end',1},
			}
			
			
			
			
			--this is both a message broadcaster and a function runner
			--if you put {beat,'String'}, then 'String' is broadcast as a message on that beat
			--if you put {beat,function() somecode end}, then function() is run at that beat
			--see example on beat 32
			
			curaction = 1;
			--{beat,thing,persists}
			mod_actions = {
			
			
				
			}
			
			m(0,64,'*1000 200 sudden,*100 -70 suddenoffset',l)
			
			m(64,6,'*5 no sudden',l)
			
			m2(2,function()
			
				if FUCK_EXE then
				--if false then
				
					for i=1,32 do
						local a = faf_shards[i]
						
						local col = math.mod(i-1,8)
						local row = math.floor((i-1)/8)
						
						
						
						a:SetNumVertices(3)
						
						--a:hidden(0)
						
						a:x(SCREEN_WIDTH*(col/8))
						
						local shift = 0;
						
						if math.mod( row, 2 ) == 1 then
							a:addx(SCREEN_WIDTH/8)
							shift = shift + 1/8
						end
						
						local addx1 = 0.1*math.sin(6*math.pi*( col/8 + shift - 1/8 ))
						local addx2 = 0.1*math.sin(6*math.pi*( col/8 + shift - 0 ))
						local addx3 = 0.1*math.sin(6*math.pi*( col/8 + shift + 1/8 ))
						local addy1 = 0.1*math.cos(5*math.pi*( col/8 + shift - 1/8 ))
						local addy2 = 0.1*math.cos(5*math.pi*( col/8 + shift - 0 ))
						local addy3 = 0.1*math.cos(5*math.pi*( col/8 + shift + 1/8 ))
						
						a:y(SCREEN_BOTTOM - SCREEN_HEIGHT*(row+0.5)/4)
						
						if math.mod(i,2) == 1 then
							a:SetVertexPosition(0,	-sw/8 + addx1*sw,	-sh/8 + addy1*sh,	0)
							a:SetVertexPosition(1,	0 + addx2*sw,	sh/8 + addy2*sh,	0)
							a:SetVertexPosition(2,	sw/8 + addx3*sw,	-sh/8 + addy3*sh,	0)
							
							a:SetVertexTexCoord(0, (col/8 - 1/8 + shift + addx1)*(dw/poly_npot(dw)), ((row+0)/4)*(dh/poly_npot(dh)) + addy1)
							a:SetVertexTexCoord(1, (col/8 + 0 + shift + addx2)*(dw/poly_npot(dw)), ((row+1)/4)*(dh/poly_npot(dh)) + addy2)
							a:SetVertexTexCoord(2, (col/8 + 1/8 + shift + addx3)*(dw/poly_npot(dw)), ((row+0)/4)*(dh/poly_npot(dh)) + addy3)
						
						else
							a:SetVertexPosition(0,	-sw/8 + addx1*sw,	sh/8 + addy1*sh,	0)
							a:SetVertexPosition(1,	0 + addx2*sw,	-sh/8 + addy2*sh,	0)
							a:SetVertexPosition(2,	sw/8 + addx3*sw,	sh/8 + addy3*sh,	0)
							
							a:SetVertexTexCoord(0, (col/8 - 1/8 + shift + addx1)*(dw/poly_npot(dw)), ((row+1)/4)*(dh/poly_npot(dh)) + addy1)
							a:SetVertexTexCoord(1, (col/8 + 0 + shift + addx2)*(dw/poly_npot(dw)), ((row+0)/4)*(dh/poly_npot(dh)) + addy2)
							a:SetVertexTexCoord(2, (col/8 + 1/8 + shift + addx3)*(dw/poly_npot(dw)), ((row+1)/4)*(dh/poly_npot(dh)) + addy3)
						end
						
						a:zoom(1)
						
						a:SetTexture(faf_aft:GetTexture())
						
					end
				
				end
				
			end,true)
			
			function faf_shatter(len,ang,zoom)
				for i=1,32 do
					
					local a = faf_shards[i]
					
					if a then
						a:decelerate(len*60/196)
						a:rotationx( math.random(-ang,ang) )
						a:rotationy( math.random(-ang,ang) )
						a:rotationz( math.random(-ang,ang) )
						a:zoom(zoom)
					end
					
				end
				faf_bgwhite:diffusealpha(1)
				faf_bgwhite:linear(len*60/196)
				faf_bgwhite:diffusealpha(0)
			end
			
			m2(352,function()
				for pn=1,2 do
					local a = _G['faf_poly'..(pn+2)]
					if a then
						a:hidden(1)
					end
				end
				
				for i=1,32 do
					
					local a = faf_shards[i]
					if a then
						a:hidden(0)
						a:vibrate()
					end
					
				end
				
			end)
			
			
			
			m2(352,function() faf_shatter(1.5,10,.96) end)
			m2(353.5,function() faf_shatter(1.5,15,.92) end)
			m2(355,function() faf_shatter(1.5,20,.88) end)
			m2(356.5,function() faf_shatter(1.5,25,.84) end)
			m2(358,function() faf_shatter(1.5,10,.8) end)
			
			m2(360,function()
				for i=1,32 do
					
					local a = faf_shards[i]
					
					if a then
						local rx, ry, rz = a:getrotation()
						a:linear(240/196)
						
						a:addx(math.random(-20,20))
						a:addy(math.random(-20,20))
						
						a:rotationx(rx+math.random(-10,10))
						a:rotationy(ry+math.random(-10,10))
						a:rotationz(rz+math.random(-10,10))
					end
					
				end
			end)
			
			m2(364,function()
				for i=1,32 do
					
					local a = faf_shards[i]
					
					if a then
						local len = math.random(250,400)/100
						local rx, ry, rz = a:getrotation()
						
						local rng = math.random(0,1)
						
						a:accelerate(len*30/196)
						
						if rng == 0 then
							a:rotationx(rx+180)
						else
							a:rotationy(ry+180)
						end
						
						a:zoom(.9)
						
						a:decelerate(len*30/196)
						
						if rng == 0 then
							a:rotationx(rx+360)
						else
							a:rotationy(ry+360)
						end
						
						a:zoom(1)
						
						a:sleep(0)
						a:rotationx(rx)
						a:rotationy(ry)
					end
				end
			end)
			
			m2(369,function()
				for i=1,32 do
					
					local a = faf_shards[i]
					
					if a then
						local len = math.random(250,400)/100
						local rx, ry, rz = a:getrotation()
						
						local ang = math.atan2(a:GetY()-sh/2,a:GetX()-sw/2)
						local dist = math.sqrt((a:GetX()-sw/2)*(a:GetX()-sw/2)+(a:GetY()-sh/2)*(a:GetY()-sh/2))
						
						a:decelerate(7*60/196)
						a:addx( 80*(0.25+(dist/300))*math.sin(ang) )
						a:addy( 80*(0.25+(dist/300))*math.cos(ang) )
						a:zoom(0)
						
						a:rotationx(rx+math.random(-100,100))
						a:rotationy(ry+math.random(-100,100))
						a:rotationz(rz+math.random(-100,100))
					end
				end
				if faf_glass then
					faf_glass:decelerate(7*60/196)
					faf_glass:zoom(1.3)
					--faf_glass:accelerate(7*60/
				end
			end)
			
			
			
			
			m2(3,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						--a:accelerate(60/196)
						--a:x(sw/2)
						a:linear(60/196)
						a:x(sw/2 + 160*(pn*2-3))
						a:zoomz(0)
						a:rotationy(-2*(pn*2-3))
					end
				end
			end)
			
			m2(4,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:x(sw/2 + 160*(pn*2-3))
						a:zoomz(0)
						a:rotationy(-2*(pn*2-3))
					end
				end
			end,true)
			
			--[[
			m(4,64,'*25 250 invert',e,1)
			m(4,64,'*25 -250 invert',e,2)
			]]
			
			m2(36,function()
				
				faf_vigc:zoom(3)
				faf_vigc:linear(28*60/196)
				faf_vigc:zoom(1)
				faf_vigc:accelerate(4*60/196)
				faf_vigc:zoom(3)
				faf_vig:diffusealpha(0)
				faf_vig:linear(16*60/196)
				faf_vig:diffusealpha(1)
				faf_vig:sleep(12*60/196)
				faf_vig:linear(4*60/196)
				faf_vig:diffusealpha(0)
				
			end)
			
			simple_m0d2(4-.05,-50,.5,'mini');
			simple_m0d2(7-.05,-50,.1,'mini');
			simple_m0d2(7.5-.05,-50,.1,'mini');
			simple_m0d2(8-.05,-50,.5,'mini');
			m2(11,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:rotationz(15)
						a:decelerate(30/196)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(-15)
						a:decelerate(30/196)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(15)
						a:decelerate(30/196)
						a:rotationz(0)
						a:sleep(0)
					end
				end
			end)
			simple_m0d2(12-.05,-50,.5,'mini');
			simple_m0d2(15-.05,-50,.1,'mini');
			simple_m0d2(15.5-.05,-50,.1,'mini');
			simple_m0d2(16-.05,-50,.5,'mini');
			m2(17,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:rotationz(15)
						a:decelerate(20/196)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(-15)
						a:decelerate(20/196)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(15)
						a:decelerate(20/196)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(-15)
						a:decelerate(20/196)
						a:rotationz(0)
						a:sleep(0)
					end
				end
			end)
			simple_m0d2(18-.05,-100,.5,'mini');
			simple_m0d2(20-.05,-100,.5,'mini');
			m(17.5,1,'*10000 500 beat',l)
			m(18-.1,2,'*10 flip',l)
			m(19.5,1,'*10000 -500 beat',l)
			m(20-.1,2,'*10 no flip',l)
			
			simple_m0d2(23-.05,-50,.1,'mini');
			simple_m0d2(23.5-.05,-50,.1,'mini');
			simple_m0d2(24-.05,-50,.5,'mini');
			
			m2(27,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:rotationz(15)
						a:decelerate(30/196)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(-15)
						a:decelerate(30/196)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(15)
						a:decelerate(30/196)
						a:rotationz(0)
						a:sleep(0)
					end
				end
			end)
			simple_m0d2(28-.05,-50,.5,'mini');
			simple_m0d2(31-.05,-50,.1,'mini');
			simple_m0d2(31.5-.05,-50,.1,'mini');
			simple_m0d2(32-.05,-50,.5,'mini');
			
			do_player = 1
			local pfluct = 1
			
			for i=36,59 do
				simple_m0d(i,50,.2,'stealth',pfluct)
				if pfluct == 1 then
					pfluct = 2
				else
					pfluct = 1
				end
			end
			
			for i=52,59 do
				local amt = 0.2 + 0.2*(i-52)/8
				m2(i,function()
					local a = Plr(do_player)
					if a then
						a:zoomz(amt)
						a:decelerate(60/196)
						a:zoomz(0)
					end
					if do_player == 1 then
						do_player = 2
					else
						do_player = 1
					end
				end)
			end
			for i=60,63.5,.5 do
				m2(i,function()
					local a = Plr(do_player)
					if a then
						a:zoomz(.4)
						a:decelerate(30/196)
						a:zoomz(0)
					end
					if do_player == 1 then
						do_player = 2
					else
						do_player = 1
					end
				end)
			end
			
			--function mod_springt(time,strength,dur,mod,pn)
			mod_springt(21.479,200,0.6,'drunk',2)
			
			m(4,64,'*10000 -11500 bumpy',e)
			
			m(4,64,'*10000 -200 reverse, *10000 80 centered, *10000 0.23x, *1000 200 wave',e)
			
			--[[
			m(36,64,'*0.5 50 dizzy',e,1)
			m(36,64,'*0.5 -50 dizzy',e,2)
			]]
			
			m2(32,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:decelerate(60/196)
						a:skewx(2)
						a:rotationz(10)
						a:accelerate(60/196)
						a:skewx(-1)
						a:rotationz(-5)
						a:decelerate(60/196)
						a:skewx(-4)
						a:rotationz(-20)
						a:accelerate(60/196)
						a:skewx(0)
						a:rotationz(0)
					end
				end
			end)
			
			--[[
			m2(64,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:y(sh/2)
						a:linear(120/196)
						a:x(SCREEN_CENTER_X)
					end
				end
			end)
			]]
			m2(66,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:linear(120/196)
						a:zoomz(1)
					end
				end
			end)
			
			m2(66,function()
				faf_slice:rotationz(90+math.deg(math.atan2(SCREEN_HEIGHT*0.3,SCREEN_WIDTH)))
			end,true)
			m2(234,function()
				faf_slice:rotationz(90+math.deg(math.atan2(SCREEN_HEIGHT,SCREEN_WIDTH*-0.3)))
			end,true)
			
			for i=1,table.getn(max_burning) do
				local a = max_burning[i]
				local msg = 'Burn'..a[2]
				if a[3] == 'M' then
					msg = msg..'a'
				end
				m2(a[1],msg)
			end
			
			m2(69.7,'Slice')
			m2(237.7,'Slice')
			
			m2(87,'Fade1')
			m2(100,'Fade2')
			m2(128,'Fade3')
			m2(164,'Fade4')
			
			m2(70,function()
				for pn=2,2 do
					local a = Plr(pn)
					if a then
						a:accelerate(120/196)
						a:x(SCREEN_CENTER_X-160)
						a:zoomz(1)
					end
				end
				faf_bg2:linear(120/196)
				faf_bg2:diffusealpha(1)
			end)
			
			m2(72,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:zoomz(1)
					end
				end
			end,true)
			
			m(64,136,'*150 1 bumpy',e)
			
			m(64,70,'*0.8166 50 flip',e)
			
			m(66,2,'*15 stealth, *15 dark',l,1)
			m(68,72,'*4 25 stealth, *8 no dark',e,1)
			
			if FUCK_EXE then
				m(68,4,'*1000 -90 drawsizeback',l,1)
			end
			
			m(70,136,'1.55x',e)
			m(72,1,'*1000 1.55x',l,1)
			
			m(70,2,'*1.6333 stealth, *1.6333 dark',l,1)
			m(70-.2,1,'*8 no flip',l,2)
			m(70.1,2,'*0.8166 50 flip, *0.8166 50 reverse',l,2)
			
			m(72,136,'*1000 sudden, *1000 120 suddenoffset, 1 bumpy',e)
			
			m2(68,function()
				if slumpo then
					faf_spooky1:linear(0.3)
					faf_spooky1:diffusealpha(1)
					faf_spooky1:vibrate()
					faf_spooky1:effectmagnitude(2,2,0)
				else
					faf_spooky2:linear(0.3)
					faf_spooky2:diffuse(1,.4,.4,1)
					faf_spooky2:vibrate()
					faf_spooky2:effectmagnitude(2,2,0)
				end
			end)
			m2(70,function()
				if not slumpo then
					faf_spooky2:zoomto(SCREEN_WIDTH,SCREEN_HEIGHT)
					faf_spooky2:linear(120/196)
					faf_spooky2:zoomto(SCREEN_WIDTH*1.1,SCREEN_HEIGHT*1.1)
					faf_spooky2:linear(0.3)
					faf_spooky2:diffusealpha(0)
				else
					faf_spooky1:sleep(120/196)
					faf_spooky1:linear(0.3)
					faf_spooky1:diffusealpha(0)
				end
			end)
						
			m2(80,function()
				faf_aux:decelerate(30/196)
				faf_aux:x(-20)
				faf_aux:accelerate(30/196)
				faf_aux:x(0)
				faf_aux:linear(6*60/196)
				faf_aux:x(360*3)
				faf_aux:sleep(0)
				faf_aux:x(0)
				
				faf_aux2:decelerate(30/196)
				faf_aux2:x(2)
				faf_aux2:y(0.7)
				faf_aux2:accelerate(30/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:linear(5*60/196)
				faf_aux2:x(1.3)
				faf_aux2:y(2.5)
				faf_aux2:accelerate(60/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
			end)
			m2(96,function()
				faf_aux:decelerate(30/196)
				faf_aux:x(20)
				faf_aux:accelerate(30/196)
				faf_aux:x(0)
				faf_aux:linear(2*60/196)
				faf_aux:x(360*-1)
				--[[
				faf_aux:sleep(3*60/196)
				faf_aux:x(360*-2)
				]]
				faf_aux:sleep(0)
				faf_aux:x(0)
				
				
				faf_aux2:decelerate(30/196)
				faf_aux2:x(2)
				faf_aux2:y(0.7)
				faf_aux2:accelerate(30/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:linear(2*60/196)
				faf_aux2:x(1.3)
				faf_aux2:y(2.5)
				faf_aux2:accelerate(60/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
			end)
			
			m2(100,function()
				faf_aux:decelerate(30/196)
				faf_aux:y(-.5)
				faf_aux:accelerate(30/196)
				faf_aux:y(0)
				faf_aux:decelerate(30/196)
				faf_aux:y(.5)
				faf_aux:accelerate(30/196)
				faf_aux:y(0)
				faf_aux:decelerate(30/196)
				faf_aux:y(-1)
				faf_aux:accelerate(30/196)
				faf_aux:y(0)
				faf_aux:decelerate(30/196)
				faf_aux:y(1)
				faf_aux:accelerate(30/196)
				faf_aux:y(0)
			end)
			
			simple_m0d2(128-.1,50,.3,'stealth')
			simple_m0d2(130-.1,50,.3,'stealth')
			simple_m0d2(132-.1,50,.3,'stealth')
			simple_m0d2(134-.1,50,.3,'stealth')
			
			m2(112,function()
				--[[
				faf_aux:decelerate(30/196)
				faf_aux:y(0.3)
				faf_aux:accelerate(30/196)
				faf_aux:y(0)
				faf_aux:linear(5*60/196)
				faf_aux:y(-0.6)
				faf_aux:accelerate(1*60/196)
				faf_aux:y(0)
				]]
				if slumpo then
					faf_aux:decelerate(30/196)
					faf_aux:x(-20)
					faf_aux:accelerate(30/196)
					faf_aux:x(0)
					faf_aux:linear(6*60/196)
					faf_aux:x(360*3)
					faf_aux:sleep(0)
					faf_aux:x(0)
				else
					faf_aux:decelerate(30/196)
					faf_aux:x(-20)
					faf_aux:accelerate(30/196)
					faf_aux:x(0)
					faf_aux:linear(4*60/196)
					faf_aux:x(360*2)
					faf_aux:sleep(0)
					faf_aux:x(0)
				end
				
				faf_aux2:decelerate(30/196)
				faf_aux2:x(2)
				faf_aux2:y(0.7)
				faf_aux2:accelerate(30/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:linear(5*60/196)
				faf_aux2:x(1.3)
				faf_aux2:y(2.5)
				if slumpo then
					faf_aux2:accelerate(60/196)
					faf_aux2:x(1)
					faf_aux2:y(1)
				else
					faf_aux2:accelerate(120/196)
					faf_aux2:x(1)
					faf_aux2:y(1)
				end
			end)
			
			m2(128-.1,function()
				faf_aux:linear(.1)
				faf_aux:y(0.3)
				faf_aux:decelerate(90/196)
				faf_aux:y(0)
				
				faf_aux2:linear(.1)
				faf_aux2:x(1.3)
				faf_aux2:y(2)
				faf_aux2:decelerate(60/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
			end)
			
			m2(130-.1,function()
				faf_aux:linear(.1)
				faf_aux:y(-0.3)
				faf_aux:decelerate(90/196)
				faf_aux:y(0)
				
				faf_aux2:linear(.1)
				faf_aux2:x(1.3)
				faf_aux2:y(2)
				faf_aux2:decelerate(60/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
			end)
			
			m2(132,function()
				faf_aux:decelerate(60/196)
				faf_aux:y(0.6)
				faf_aux:accelerate(60/196)
				faf_aux:y(0)
				faf_aux:decelerate(60/196)
				faf_aux:y(-0.6)
				faf_aux:accelerate(60/196)
				faf_aux:y(0)
				
				faf_aux2:decelerate(60/196)
				faf_aux2:x(1.3)
				faf_aux2:y(1.66)
				faf_aux2:accelerate(60/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:decelerate(60/196)
				faf_aux2:x(1.5)
				faf_aux2:y(1)
				faf_aux2:accelerate(60/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
			end)
			
			m2(71.5,function()
				for pn=1,2 do
					local a = _G['faf_poly'..pn]
					if a then
						a:accelerate(30/196)
						a:x(sw/2 + sw*0.02*(pn*2-3)*faf_aspect)
						a:y(sh/2 + sh*0.008*(pn*2-3))
					end
					local a,b = GetJud(pn), GetCom(pn)
					if a then
						a:basezoomx((pn*2-3))
						a:basezoomy(1)
						a:x(160)
					end
					if b then
						b:basezoomx((pn*2-3))
						b:basezoomy(1)
						b:x(160)
					end
				end
			end)
			
			m2(132,function()
				faf_black:linear(240/196)
				faf_black:diffusealpha(1)
			end)
			
			m2(136,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:skewx(0)
						a:zoom(0.75)
						a:x(sw/2-160)
						a:y(sh/2+120)
						a:rotationy(0)
						a:rotationz(-10)
					end
					local a,b = GetJud(pn), GetCom(pn)
					if a then
						a:basezoomx(.8)
						a:basezoomy(.8)
						a:linear(.1)
						a:x(80*(pn*2-3))
					end
					if b then
						b:basezoomx(.8)
						b:basezoomy(.8)
						b:linear(.1)
						b:x(80*(pn*2-3))
					end
				end
				
				faf_bubble1:x(sw/2-160)
				faf_bubble1:y(sh/2+120-10)
				faf_bubble1:zoom(.75)
				faf_bubble1:playcommand('Up');
				
			end)
			
			m(134,164,'*0.816 50 mini, *1.633 -50 cross',e)
			m(135.8,136,'*10000 -78 suddenoffset',e)
			if slumpo then
				m(136,164,'*10000 -200 reverse, *3 no centered2, *10000 80 centered, *10000 0.1x, *10000 700 bumpy, *10000 300 sudden, *1.25 -77 suddenoffset',e)
			else
				m(136,164,'*10000 -200 reverse, *3 no centered2, *10000 80 centered, *10000 0.1x, *10000 700 bumpy, *10000 300 sudden, *1.25 -72 suddenoffset',e)
			end
			if FUCK_EXE then
				m(136,164,'*10000 -90 drawsizeback',e)
				
				for i=0,3 do
					m(136+8*i,7,'*0.333 700 centered2, *0.1 0 suddenoffset',l)
				end
			end
			
			for i=151,151.75,.25 do
				m(i-.05,.25,'*10000 stealth',l)
				m(i-.05+.125,.25,'*10000 no stealth',l)
			end
			m(152-.05,8,'*10000 30 stealth',l)
			m(152+.05,8,'*0.12 no stealth',l)
			
			m2(139,function()
				faf_bubble2:x(sw/2+160)
				faf_bubble2:y(sh/2-100-10)
				faf_bubble2:zoom(.75)
				faf_bubble2:playcommand('Warn')
			end)
			
			m2(143,function()
				--
				local a = Plr(2)
				if a then
					a:skewx(0)
					a:zoom(0)
					a:x(sw/2+160)
					a:y(sh/2-100)
					a:rotationy(0)
					a:rotationz(10)
					a:linear(60/196)
					a:zoom(0.75)
					
				end
				local a = Plr(1)
				if a then
					a:linear(60/196)
					a:zoom(0)
				end
				
				
				faf_bubble2:playcommand('Up');
				faf_bubble1:playcommand('Down');
				
			end)
			
			m2(147,function()
				faf_bubble1:x(sw/2)
				faf_bubble1:y(sh/2-10)
				faf_bubble1:zoom(1)
				faf_bubble1:playcommand('Warn')
			end)
			
			m2(151,function()
				--
					local a = Plr(1)
					if a then
						a:skewx(0)
						a:zoom(0)
						a:x(sw/2)
						a:y(sh/2)
						a:rotationy(0)
						a:rotationz(0)
						a:linear(60/196)
						a:zoom(1)
					end
					local a = Plr(2)
					if a then
						a:linear(60/196)
						a:zoom(0)
					end
					
				faf_bubble1:x(sw/2)
				faf_bubble1:y(sh/2-10)
				faf_bubble1:zoom(1)
				faf_bubble1:playcommand('Up');
				faf_bubble2:playcommand('Down');
				
			end)
			
			m2(155,function()
				faf_bubble2:x(sw/2+160)
				faf_bubble2:y(sh/2-100-10)
				faf_bubble2:zoom(.75)
				faf_bubble2:playcommand('Warn')
			end)
			
			m2(159,function()
				local a = Plr(1)
				if a then
					a:linear(60/196)
					a:zoom(0)
				end
				local a = Plr(2)
				if a then
					a:skewx(0)
					a:zoom(0)
					a:x(sw/2+160)
					a:y(sh/2-100)
					a:rotationy(0)
					a:rotationz(10)
					a:linear(60/196)
					a:zoom(0.75)
				end
				
				faf_bubble2:x(sw/2+160)
				faf_bubble2:y(sh/2-100-10)
				faf_bubble2:zoom(.75)
				faf_bubble2:playcommand('Up');
				faf_bubble1:playcommand('Down');
				
			end)
			m2(160,function()
				local a = Plr(1)
				if a then
					a:skewx(0)
					a:x(sw/2+160)
					a:y(sh/2-100)
					a:rotationy(0)
					a:rotationz(10)
					a:zoom(0.75)
				end
			end)
			
			m2(164,function()
				for pn=1,2 do
					local a = _G['faf_poly'..pn]
					if a then
						a:linear(240/196)
						a:x(sw/2)
						a:y(sh/2)
					end
					local a = Plr(pn)
					if a then
						a:linear(240/196)
						a:x(sw/2)
						a:y(sh/2)
						a:zoom(1)
						a:rotationz(0)
					end
				end
				faf_bubble2:playcommand('Down');
			end)
			
			m2(164,function()
				faf_aux:x(100)
				faf_aux:linear(240/196)
				faf_aux:x(0)
				
				faf_bg1:diffusealpha(0)
				faf_bg2:diffusealpha(0)
				faf_bg3:diffusealpha(1)
				
				faf_black:linear(240/196)
				faf_black:diffusealpha(0)
			end,true)
			
			--[[
			mod_wiggle(81,24,4,200,3,'drunk')
			mod_wiggle(97,12,4,200,3,'drunk')
			mod_wiggle(113,24,4,200,3,'drunk')
			]]
			
			m2(167,function()
				for pn=1,2 do
					local a,b = GetJud(pn), GetCom(pn)
					if a then
						a:basezoomx(.7)
						a:basezoomy(.7)
						a:linear(60/196)
						a:x(100*(pn*2-3))
					end
					if b then
						b:basezoomx(.7)
						b:basezoomy(.7)
						b:linear(60/196)
						b:x(100*(pn*2-3))
					end
				end
			end)
			
			if slumpo then
				m(168-.2,232,'*20 -200 mini, *7 70 brake, *10 0.75x, *10 600 sudden, *10 -35 suddenoffset',e);
			else
				m(168-.2,232,'*20 -200 mini, *7 70 brake, *10 0.75x, *10 1000 sudden, *10 -30 suddenoffset',e);
			end
			
			--if slumpo then
				--m(168-.2,232,'*20 -200 mini, *7 70 brake, *10 0.5x, *10 600 sudden, *10 -30 suddenoffset',e,2);
				--m(168-.2,232,'*20 -200 mini, *7 -70 boost, *10 0.5x, *10 600 sudden, *10 -30 suddenoffset',e,1);
			--else
				--m(168-.2,232,'*20 -200 mini, *10 boost, *12 0.3x, *10 600 sudden, *10 -30 suddenoffset',e);
			--end
			
			--[[
				L  U
				D  R
			]]
			
			if slumpo then
				m(168-.2,232,'*3 -25 flip, *8 75 invert, *10 alternate',e)
				m(168-.2,232,'*10 150 tornado',e,1)
				m(168-.2,232,'*10 -150 tornado',e,2)
			else
				m(168-.2,232,'*3 -20 flip, *8 60 invert, *10 alternate',e)
				m(168-.2,232,'*8 120 tornado',e,1)
				m(168-.2,232,'*8 -120 tornado',e,2)
			end
			
			m(168,232,'*100000 -2000 split',e,2)
			m(168,232,'*100000 2000 split, *100000 -2000 reverse',e,1)
			
			function faf_the_screen()
				faf_screenvib:stoptweening()
				faf_screenvib:x(30)
				faf_screenvib:linear(90/196)
				faf_screenvib:x(0)
			end
			
			m2(200,faf_the_screen)
			m2(204,faf_the_screen)
			m2(208,faf_the_screen)
			m2(212,faf_the_screen)
			
			m(199.5,1,'*1000 -2000 beat',l,1)
			m(203.5,1,'*1000 -2000 beat',l,1)
			m(207.5,1,'*1000 -2000 beat',l,1)
			m(211.5,1,'*1000 -2000 beat',l,1)
			m(199.5,1,'*1000 2000 beat',l,2)
			m(203.5,1,'*1000 2000 beat',l,2)
			m(207.5,1,'*1000 2000 beat',l,2)
			m(211.5,1,'*1000 2000 beat',l,2)
			mod_wiggle(207.5,2,4,500,6,'drunk')
			
			mod_wiggle(211,4,4,500,6,'drunk')
			
			m(224,232,'*4 400 dizzy',e)
			
			faf_plr = 1;
			faf_fluct = 1;
			
			for i=1,table.getn(potations) do
				local a = potations[i]
				local p = i
				local amt = 15+20*((a[1]-168)/(32))
				if a[3] ~= 'M' and a[1] < 195 then
					m2(a[1],function()
						--for pn=1,2 do
							local a = Plr(faf_plr)
							if a then
								a:rotationz(amt*faf_fluct)
								a:decelerate(60/196)
								a:rotationz(0)
							end
						--end
						if faf_plr == 1 then
							faf_plr = 2
						else
							faf_plr = 1
							faf_fluct = faf_fluct*-1
						end
					end)
				end
			end
			
			--[[
			m2(196,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:accelerate(240/196)
						a:rotationz(360)
					end
				end
			end)
			]]
			
			for i=216,223.9,.75 do
				local p = i
				m2(i,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:zoom(1.2)
							a:zoomz(40 + 40*(i-216)/8)
							a:linear(.2)
							a:zoom(1)
							a:zoomz(1)
						end
					end
				end)
			end
			
			
			
			m(224,232,'*0.4 -300 mini',e);
			
			--mod_wiggle(230,8,4,350,3,'drunk');
			
			m(231.9,.2,'*1 stealth, *10000 -100 suddenoffset',l)
			m(231.9,20,'1 bumpy',l)
			
			m(232,1,'*1000000 no split, *100 sudden, *1000000 no reverse, *10 no alternate, *15 no tornado, *1000 no dizzy',l)
			m(232,8,'*15 300 suddenoffset, *15 no mini',l)
			
			m(240,999,'*10000 110 suddenoffset, sudden',e)
			
			
			
			m2(238,function()
				for pn=1,2 do
					local a = _G['faf_poly'..pn]
					if a then
						a:hidden(1)
					end
					local a = _G['faf_poly'..(pn+2)]
					if a then
						a:hidden(0)
					end
				end
				
				faf_bg3:linear(120/196)
				faf_bg3:diffusealpha(0)
				faf_bg2:diffusealpha(1)
				
			end,true)
			
			m2(232,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:zoom(1)
						a:zoomz(1)
						a:rotationy(0)
						a:rotationx(0)
						a:x(sw/2)
						a:y(sh/2)
					end
				end
			
			end,true)
			
			m2(200-.1,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:linear(.1)
						a:zoomz(3)
						a:rotationy(10)
						a:rotationx(10)
						a:rotationz(0)
					end
				end
				faf_bg3:linear(.1)
				faf_bg3:rotationy(10)
				faf_bg3:rotationz(10)
			end)
			
			m2(203.5-.1,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(.1)
						a:zoomz(1)
						a:rotationy(0)
						a:rotationx(0)
						a:sleep(30/196-.1)
						a:linear(.1)
						a:zoomz(3)
						a:rotationy(-15)
						a:rotationx(15)
					end
				end
				
				faf_bg3:linear(.1)
				faf_bg3:rotationy(0)
				faf_bg3:rotationz(0)
				faf_bg3:sleep(30/196-.1)
				faf_bg3:linear(.1)
				faf_bg3:rotationy(-15)
				faf_bg3:rotationz(15)
				
			end)
			
			m2(207.5-.1,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(.1)
						a:zoomz(1)
						a:rotationy(0)
						a:rotationx(0)
						a:sleep(30/196-.1)
						a:linear(.1)
						a:zoomz(3)
						a:rotationy(20)
						a:rotationx(-20)
					end
				end
				
				faf_bg3:linear(.1)
				faf_bg3:rotationy(0)
				faf_bg3:rotationz(0)
				faf_bg3:sleep(30/196-.1)
				faf_bg3:linear(.1)
				faf_bg3:rotationy(20)
				faf_bg3:rotationz(-20)
				
			end)
			
			m2(211-.05,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:zoom(1)
						a:linear(15/196)
						a:zoom(.5)
						a:sleep(0)
						a:zoom(1)
						a:linear(15/196)
						a:zoom(.5)
						a:sleep(0)
						a:zoom(1)
						a:linear(15/196)
						a:zoom(.5)
						a:sleep(0)
						a:zoom(1)
						a:linear(15/196)
						a:zoom(.5)
						
						a:linear(.1)
						a:zoomz(3)
						a:zoom(1)
						a:rotationy(-25)
						a:rotationx(-25)
					end
				end
				
				faf_bg3:sleep(60/196)
				faf_bg3:linear(.1)
				faf_bg3:rotationy(-25)
				faf_bg3:rotationz(-25)
			end)
			
			m2(214,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(120/196)
						a:zoomz(1)
						a:rotationx(0)
						a:rotationy(0)
						a:vibrate()
						a:effectmagnitude(0,50,0)
					end
				end
				
				faf_bg3:linear(120/196)
				faf_bg3:rotationy(0)
				faf_bg3:rotationz(0)
				faf_bg3:vibrate()
				faf_bg3:effectmagnitude(0,20,0)
				
			end)
			
			m2(216,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:stopeffect()
					end
				end
				faf_bg3:stopeffect();
			end)
			
			m(136,164,'*0.25 50 dizzy',e)
			m(164,165,'*10 no dizzy',e)
			
			m(168,196,'*0.5 50 drunk',e)
			m(196,200,'*0.5 no drunk',e)
			
			m2(136,function()
				faf_aux:x(50)
				faf_aux:spring(60/196)
				faf_aux:x(0)
			end)
			
			m2(232,function()
				faf_bg3:rotationx(0)
				faf_bg3:rotationy(0)
				faf_bg3:rotationz(0)
			end)
			
			m2(238,function()
				for pn=2,2 do
					local a = Plr(pn)
					if a then
						a:accelerate(120/196)
						a:x(SCREEN_CENTER_X-160)
						a:zoomz(1)
					end
				end
			end)
			
			m2(240,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:zoomz(1)
					end
				end
				faf_aux:x(0)
				faf_aux2:x(1)
			end,true)
			
			m(232,999,'*150 1 bumpy',e)
			
			m(232,238,'*10 50 flip, *10 no invert',e)
			
			m(234,2,'*15 stealth, *15 dark',l,1)
			m(236,240,'*4 25 stealth, *8 no dark',e,1)
			
			if FUCK_EXE then
				m(236,4,'*1000 -90 drawsizeback',l,1)
			end
			
			m(238,999,'1.75x',e)
			m(240,1,'*1000 1.75x',l,1)
			
			m(238,2,'*1.6333 stealth, *1.6333 dark',l,1)
			m(238-.2,1,'*12 -25 flip, *7 37.5 invert',l,2)
			m(238.1,2,'*1.25 50 flip, *0.713 no invert, *0.8166 50 reverse',l,2)
			
			m(240,999,'*1000 sudden, *1000 100 suddenoffset, 1 bumpy',e)
			
			simple_m0d(232,-100,.2,'mini')
			simple_m0d(233,-100,.2,'mini')
			simple_m0d(234,-100,.2,'mini')
			simple_m0d(235,-100,.1,'mini')
			simple_m0d(235.5,-100,.1,'mini')
			simple_m0d(236,-100,.1,'mini')
			
			m(234,238,'1.5x',l,2)
			
			m(236,2,'*2 drunk',l)
			m(238,2,'*2 no drunk',l)
			
			for i=236,238.75,.25 do
				local amt = 50*((i-236)/3)
				m(i,.125,'*10000 '..amt..' stealth',l,2)
				m(i+.125,.125,'*10000 no stealth',l,2)
			end
			
			simple_m0d(239,50,.6,'stealth',2)
			
			m2(236,function()
				if slumpo then
					faf_spooky1:linear(0.3)
					faf_spooky1:diffusealpha(1)
					faf_spooky1:vibrate()
					faf_spooky1:effectmagnitude(2,2,0)
				else
					faf_spooky2:linear(0.3)
					faf_spooky2:diffuse(.8,.1,.1,1)
					faf_spooky2:vibrate()
					faf_spooky2:effectmagnitude(2,2,0)
				end
			end)
			m2(238,function()
				if not slumpo then
					faf_spooky2:zoomto(SCREEN_WIDTH,SCREEN_HEIGHT)
					faf_spooky2:linear(120/196)
					faf_spooky2:zoomto(SCREEN_WIDTH*1.2,SCREEN_HEIGHT*1.2)
					faf_spooky2:linear(0.3)
					faf_spooky2:diffusealpha(0)
				else
					faf_spooky1:sleep(120/196)
					faf_spooky1:linear(0.3)
					faf_spooky1:diffusealpha(0)
				end
			end)
			
			m(268,271,'*10000 no dizzy',e)
			m(268.5,.5,'*10000 628 dizzy',l)
			m(269.5,.5,'*10000 628 dizzy',l)
			
			local fluct=1
			
			for i=304,318 do
				simple_m0d2(i-.1,30*fluct,.2,'dizzy')
				fluct=fluct*-1
			end
			for i=320,331 do
				local amt = 30+50*((i-320)/11)
				simple_m0d2(i-.1,amt*fluct,.2,'dizzy')
				fluct=fluct*-1
			end
			
			m(287.5,8,'*1000 600 beat',l)
			
			m2(239.5,function()
				for pn=1,2 do
					local a = _G['faf_poly'..(pn+2)]
					if a then
						a:accelerate(30/196)
						a:x(sw/2 + sw*-0.008*(pn*2-3)*faf_aspect)
						a:y(sh/2 + sh*0.01*(pn*2-3))
					end
					local a,b = GetJud(pn), GetCom(pn)
					if a then
						a:x( 160 )
						a:basezoomx(pn*2-3)
						a:basezoomy(1)
					end
					if b then
						b:x( 160 )
						b:basezoomx(pn*2-3)
						b:basezoomy(1)
					end
				end
			end)
			
			m2(271,function()
				faf_aux2:y(3)
				faf_aux2:linear(60/196)
				faf_aux2:y(1)
			end)
			
			m2(296,function()
				faf_bg3:linear(240/196-.1)
				faf_bg3:diffusealpha(1)
				faf_bg3:sleep(.1)
				faf_bg3:linear(240/196)
				faf_bg3:diffusealpha(0)
			end)
			
			m(296,8,'*1 no stealth, *2 200 drunk',l)
			m(300-.1,8,'*0.8 no stealth, *10 no drunk',l)
			
			m2(300,function()
				faf_aux3:linear(30/196)
				faf_aux3:x(1)
				faf_aux3:linear(45/196)
				faf_aux3:x(2)
				faf_aux3:linear(45/196)
				faf_aux3:x(3)
				faf_aux3:linear(45/196)
				faf_aux3:x(4)
				faf_aux3:linear(45/196)
				faf_aux3:x(5)
				faf_aux3:linear(30/196)
				faf_aux3:x(6)
				
				faf_aux:x(0)
				faf_aux:linear(240/196)
				faf_aux:x(360)
				faf_aux:sleep(0)
				faf_aux:x(0)
			end)
			
			simple_m0d(252,-50,.1,'mini')
			simple_m0d(252.5,-50,.1,'mini')
			
			m2(252-.1,function()
			
				faf_aux:linear(.1)
				faf_aux:y(-2)
				faf_aux:sleep(30/196-.1)
				faf_aux:linear(.1)
				faf_aux:y(0)
				faf_aux:sleep(60/196)
				
				faf_aux2:sleep(120/196)
				faf_aux2:decelerate(30/196)
				faf_aux2:y(2)
				faf_aux2:accelerate(30/196)
				faf_aux2:y(1)
				faf_aux2:decelerate(30/196)
				faf_aux2:y(2)
				faf_aux2:accelerate(30/196)
				faf_aux2:y(1)
				
			end)
			
			simple_m0d2(318-.1,-200,.2,'mini')
			simple_m0d2(319-.1,-200,.2,'mini')
			
			m2(332,function()
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				
			end)
			
			m2(333,function()
				
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
			
			end)
			
			m2(334.5,function()
				
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:y(0)
				faf_aux2:linear(15/196)
				faf_aux2:x(1)
				faf_aux2:y(1)
			
			end)
			
			m2(345,function()
				faf_aux5:linear(60/196)
				faf_aux5:x(-30)
			end)
			
			m2(348,function()
				faf_aux4:accelerate(120/196)
				faf_aux4:x(0.5)
				faf_aux4:decelerate(120/196)
				faf_aux4:x(0)
				
				faf_aux:x(0)
				faf_aux:linear(240/196)
				faf_aux:x(180)
				faf_aux:sleep(0)
				faf_aux:x(0)
			end)
			
			--m(352-.1,1,'*10 no reverse, *10 no flip',l)
			
			--[[
			m(359,6,'*3 50 dizzy',l)
			m(363,6,'*3 no dizzy',l)
			]]
			
			m2(352-.1,function()
				faf_aux3:x(50)
				faf_aux3:spring(60/196)
				faf_aux3:x(0)
			end)
			
			m2(352,function()
				for pn=1,2 do
					local a = _G['faf_poly'..(pn+2)]
					if a then
						a:x(sw/2)
						a:y(sh/2)
						a:rotationz(0)
						a:rotationx(0)
						a:zoom(1)
						
						--a:hidden(1)
						
					end
					local a = Plr(pn)
					if a then
						a:x(sw/2)
						a:y(sh/2)
						a:rotationy(0)
						a:vibrate()
						a:effectmagnitude(0,0,0)
					end
					local a,b = GetJud(pn), GetCom(pn)
					if a then
						a:x( 160*(pn*2-3) )
						a:basezoomx(1)
						a:basezoomy(1)
					end
					if b then
						b:x( 160*(pn*2-3) )
						b:basezoomx(1)
						b:basezoomy(1)
					end
				end
			end)
			
			function faf_riot(ang,vib,len,zmx)
				if not len then len = 1 end
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:rotationz(ang)
						a:zoomx(zmx)
						a:decelerate(len*60/196)
						a:rotationz(0)
						a:zoomx(1)
					end
				end
				faf_aux2:x(vib)
				faf_aux2:decelerate(60/196)
				faf_aux2:x(0)
			end
			
			m2(352.01,function() faf_riot(20,20,1.5,1.5) end)
			m2(353.5,function() faf_riot(-30,30,1.5,1.6) end)
			m2(355,function() faf_riot(40,40,1.5,1.7) end)
			m2(356.5,function() faf_riot(-50,50,1.5,1.8) end)
			m2(358,function() faf_riot(60,60,1,2) end)
			
			m2(359,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:accelerate(30/196)
						a:rotationx(23)
						a:zoomz(2)
						a:decelerate(30/196)
						a:rotationx(46)
						a:zoomz(4)
						a:sleep(0)
						a:zoom(1.5)
						a:zoomz(6)
						a:linear(0.1)
						a:zoom(1)
						a:zoomz(4)
						a:sleep(60/196-.1)
						a:zoom(1.5)
						a:zoomz(6)
						a:linear(0.1)
						a:zoom(1)
						a:zoomz(4)
						a:sleep(30/196-.1)
						a:zoom(1.5)
						a:zoomz(6)
						a:linear(0.1)
						a:zoom(1)
						a:zoomz(4)
						a:sleep(30/196-.1)
						a:zoom(1.5)
						a:zoomz(6)
						a:linear(0.1)
						a:zoom(1)
						a:zoomz(4)
						a:sleep(30/196-.1)
						a:zoom(1.5)
						a:zoomz(6)
						a:linear(0.1)
						a:zoom(1)
						a:zoomz(4)
						a:sleep(30/196-.1)
						a:zoom(1.5)
						a:zoomz(6)
						a:linear(0.1)
						a:zoom(1)
						a:zoomz(4)
						a:sleep(30/196-.1)
					end
				end
			end)
			
			m(360-.1,1,'*15 invert',l)
			m(361-.1,1,'*15 no invert',l)
			m(361.5-.1,1,'*15 invert',l)
			m(362-.1,1,'*15 no invert',l)
			m(362.5-.1,1,'*15 invert',l)
			m(363-.1,1,'*15 no invert',l)
			
			m2(364,function()
				faf_aux2:sleep(0)
				faf_aux2:x(0)
				faf_aux2:linear(180/196)
				faf_aux2:x(60)
				faf_aux2:linear(60/196)
				faf_aux2:x(0)
				
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:zoom(1.3)
						a:linear(180/196)
						a:rotationx(0)
						a:zoom(.95)
						a:zoomz(1)
					end
				end
				
				faf_bgwhite:diffuse(1,1,1,0)
				faf_bgwhite:linear(180/196)
				faf_bgwhite:diffusealpha(1)
				faf_bgwhite:sleep(120/196)
				faf_bgwhite:linear(7*60/196)
				faf_bgwhite:diffusealpha(0)
				
				if slumpo then
					faf_defeat1:sleep(240/196)
					faf_defeat1:diffusealpha(1)
				else
					faf_defeat2:sleep(240/196)
					faf_defeat2:diffusealpha(1)
					faf_defeattrees:sleep(240/196)
					faf_defeattrees:diffusealpha(1)
					faf_defeattrees:zoom(.8/1.75)
					faf_defeattrees:addy(-100)
					faf_defeattrees:decelerate(480/196)
					faf_defeattrees:zoom(.8)
					faf_defeattrees:addy(100)
					faf_defeatsky:sleep(240/196)
					faf_defeatsky:diffusealpha(1)
					faf_defeatclouds:sleep(240/196)
					faf_defeatclouds:sleep(60/196)
					faf_defeatclouds:linear(180/196)
					faf_defeatclouds:diffusealpha(1)
					faf_defeatvig:sleep(240/196)
					faf_defeatvig:diffusealpha(1)
				end
				
			end)
			
			m(352,17,'*0.5 1x',l)
			m(352-.1,4,'*3 -20 mini',l)
			m(353.5-.1,4,'*3 -40 mini',l)
			m(355-.1,4,'*3 -60 mini',l)
			m(356.5-.1,4,'*3 -80 mini',l)
			m(358-.1,4,'*3 -100 mini',l)
			m(360-.1,9,'*8 -150 mini',l)
			
			--simple_m0d(352,800,.3,'bumpy');
			simple_m0d(353.5,900,.4,'bumpy');
			simple_m0d(355,1000,.4,'bumpy');
			simple_m0d(356.5,1100,.4,'bumpy');
			simple_m0d(358,1200,.6,'bumpy');
			
			m(369,500,'*1.5 200 mini, *5 230 distant, *5 1000 bumpy, *5 200x',l)
			
			m2(369,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(10*60/196)
						a:zoomz(20)
					end
				end
			end)
			
			m(364,3,'*.25 0x, *0.3 30 reverse',l)
			m(367,1,'*3 10x, *10 tornado, *3 no reverse',l)
			
			
			m2(368,function(self)

				SCREENMAN:GetTopScreen():decelerate(30/196)
				SCREENMAN:GetTopScreen():zoom(.25)
				SCREENMAN:GetTopScreen():x(SCREEN_CENTER_X*.75)
				SCREENMAN:GetTopScreen():y(SCREEN_CENTER_Y*.75)
				SCREENMAN:GetTopScreen():accelerate(30/196)
				SCREENMAN:GetTopScreen():zoom(1.75)
				SCREENMAN:GetTopScreen():x(SCREEN_CENTER_X*-.75)
				SCREENMAN:GetTopScreen():y(SCREEN_CENTER_Y*-.75)
				SCREENMAN:GetTopScreen():decelerate(8*60/196)
				SCREENMAN:GetTopScreen():zoom(1)
				SCREENMAN:GetTopScreen():x(0)
				SCREENMAN:GetTopScreen():y(0)
				
			end)
			
---------------------------------------------------------------------------------------
----------------------Sort the actions table-------------------------------------------
---------------------------------------------------------------------------------------
			
			function modtable_compare(a,b)
				return a[1] < b[1]
			end
			
			if table.getn(mod_actions) > 1 then
				table.sort(mod_actions, modtable_compare)
			end
			
			dwtimer = 0;
			dwdelay = 5;
			
			faf_curmessage = 1;
			faf_smessages = {
				'Pandora: HEY, don\'t resize the screen!',
				'Pandora: If you window resize, I might miss and cut you instead.',
			}
			
			self:queuecommand('Update');
			
		end"
		
		UpdateCommand="%function(self)

			if GAMESTATE:GetSongBeat()>=0 and not checked then
			
				local ThingsToGrab = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame',
										'Lyrics','SongBackground','SongForeground','Overlay','Underlay'}
				local ThingsToHide = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame','Overlay','Underlay'}
				
				for i,v in ipairs(ThingsToGrab) do
					_G[v] = SCREENMAN:GetTopScreen():GetChild(v) or nil
				end
				
				for i,v in ipairs(ThingsToHide) do
					if _G[v] then _G[v]:hidden(1) end
				end
				
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				
				--name players, judgment and combo
				for pn=1,2 do
					_G['P'..pn] = SCREENMAN:GetTopScreen():GetChild('PlayerP'..pn) or nil;
					if _G['P'..pn] then
						_G['jud'..pn] = _G['P'..pn]:GetChild('Judgment');
						_G['com'..pn] = _G['P'..pn]:GetChild('Combo');
					end
				end
				
				screen = SCREENMAN:GetTopScreen();
				checked = true; --let this only run once
				
				screen:vibrate()
				screen:effectmagnitude(0,0,0)
				
			end

			local beat = GAMESTATE:GetSongBeat()
			
			--Trace(DISPLAY:GetDisplayWidth())
			
---------------------------------------------------------------------------------------
----------------------Begin table handlers---------------------------------------------
---------------------------------------------------------------------------------------
			
			disable = false;
			if disable ~= true and beat > mod_firstSeenBeat+0.1 and checked then
				
				if FUCK_EXE then
					if dw ~= DISPLAY:GetDisplayWidth() then
						dwtimer = dwtimer - 1/60
						if dwtimer <= 0 then
							SCREENMAN:SystemMessage(faf_smessages[math.mod(faf_curmessage-1,table.getn(faf_smessages))+1])
							faf_curmessage = faf_curmessage+1
							dwtimer = dwdelay
						end
					end
				end
				
				-----------------------
				-- Player mod resets --
				-----------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					mod_do('clearall')
				end
				
				------------------------------------------------------------------------------
				-- custom mod reader by TaroNuke edited by WinDEU and re-stolen by TaroNuke --
				------------------------------------------------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i,v in pairs(mods) do
						if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
							if beat >=v[1] then
								if (v[4] == 'len' and beat <=v[1]+v[2]) or (v[4] == 'end' and beat <=v[2]) then
									mod_do(v[3],v[5]);
								end
							end
						else
							v[1] = 0;
							v[2] = 0;
							v[3] = '';
							v[4] = 'error';
							SCREENMAN:SystemMessage('Bad mod in beat-based table (line '..i..')');
						end
					end
				end
				
				-----------------------------------------------------------------------------------------------------
				-- WinDEU's time-based len/end version of the #swag custom mod reader #teamproofofconcept (c) 2015 --
				-----------------------------------------------------------------------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i,v in pairs(mods2) do
						if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
							if mod_time >=v[1] then
								if (v[4] == 'len' and mod_time <=v[1]+v[2]) or (v[4] == 'end' and mod_time <=v[2]) then
									mod_do(v[3],v[5]);
								end
							end
						else
							v[1] = 0;
							v[2] = 0;
							v[3] = 'error';
							v[4] = 'error';
							SCREENMAN:SystemMessage('Bad mod in time-based table (line '..i..')');
						end
					end
				end
				
				--------------------
				-- Perframe stuff --
				--------------------
				
				if beat > 36 and beat < 66 then
					local amt = 0.1 + 0.7*math.min((beat-36)/16,1)
					local addx = 160
					if beat > 64 then
						amt = 0.8*((66-beat)/2)
						addx = 160*((66-beat)/2)
					end
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:x( sw/2 + addx*(pn*2-3) )
							--a:y( sh/2 + 20*(pn*2-3)*math.sin(beat*math.pi) )
							--a:rotationz( 20*(pn*2-3)*math.sin(beat*math.pi) )
							a:zoomx( (1-0.2*amt) + amt*0.2*math.cos(beat*0.5*math.pi) )
							a:zoomy( 1 + amt*0.4*(pn*2-3)*math.sin(beat*0.5*math.pi) )
						end
					end
				end
				
				if beat > 64 and beat < 67 then
					---- 100/(100-centered) = (50-reverse)/50
					local amt = math.max((66-beat)/2,0)
					local reverse = -200*amt
					local centered = 100 - 5000/(50-reverse)
					mod_do('*10000 '..centered..' centered,*10000 '..reverse..' reverse')
				end
				
				if beat > 70 and beat < 71.5 then
					for pn=1,2 do
						local a = _G['faf_poly'..pn]
						if a then
							a:addx( (sw/2 + (sw*0.18)*(pn*2-3) - a:GetX() )/6 )
							a:addy( (sh/2 - (sh*0.37)*(pn*2-3) - a:GetY() )/6 )
						end
					end
				end
				
				if beat > 68 and beat < 72 then
					local linearpos = ((beat-68)/4)
					local smooth = tween_easeInOutQuad(linearpos)
					local pos = (0.1*2*math.pi) + (smooth*2*math.pi) * 0.8
					local a = Plr(1)
					if a then
						mod_do('*100 20x',1)
						a:z(-400*math.cos(pos))
						a:x( sw/2 -200*math.sin(pos))
						a:rotationx(-80)
						a:rotationz(-math.deg(pos)+180)
						a:zoomz(2)
						a:zoomx(0.8)
						a:rotationy(-10)
						a:y( sh/2 - 70 + 100*smooth )
					end
				end
				
				if beat > 238 and beat < 239.5 then
					for pn=1,2 do
						local a = _G['faf_poly'..(pn+2)]
						if a then
							a:addx( (sw/2 + (sw*0.3)*(pn*2-3) - a:GetX() )/6 )
							a:addy( (sh/2 + (sh*0.15)*(pn*2-3) - a:GetY() )/6 )
						end
					end
				end
				
				if beat > 236 and beat < 240 then
					local linearpos = ((beat-236)/4)
					local smooth = tween_easeInOutQuad(linearpos)
					local pos = (0.1*2*math.pi) + (smooth*2*math.pi) * 0.8
					local a = Plr(1)
					if a then
						mod_do('*100 20x',1)
						a:z(-400*math.cos(pos))
						a:y( sh/2 - 200*math.sin(pos))
						a:rotationx(-10)
						a:rotationz(math.deg(pos)+90)
						a:zoomz(2)
						a:zoomx(0.8)
						a:rotationy(100)
						a:x( sw/2 + 150 - 120*smooth )
					end
				end
				
				
				if beat > 72 and beat < 136 then
					
					
					local pos = beat*math.pi
					
					if beat > 118 and beat < 120 and not slumpo then
						pos = beat*math.pi*0.5
					end
					if beat > 126 then
						pos = beat*math.pi*0.5
					end
					
					local pos2 = beat*math.pi
					
					if beat > 118 and beat < 120 and not slumpo then
						pos2 = beat*math.pi*-0.5
					end
					
					if beat > 126 then
						pos2 = beat*math.pi*-0.5
					end
					if beat > 87 and beat < 88 or beat > 100 and beat < 104 then
						pos2 = 0;
					end
					if beat > 88 then
						pos2 = pos2*-1
					end
					if beat > 120 and not slumpo then
						pos2 = pos2*-1
					end
					
					--[[
					--ratio:
						a:x(sw/2 + sw*0.02*(pn*2-3)*faf_aspect)
						a:y(sh/2 + sh*0.0075*(pn*2-3))
					]]
					local faf_tiltas = (0.02*faf_aspect)/0.008
					
					for pn=1,2 do
						local a = _G['faf_poly'..pn]
						if a then
							
							a:x(sw/2 + sw*0.02*(pn*2-3)*faf_aspect)
							a:y(sh/2 + sh*0.008*(pn*2-3))
						
							--[[
							a:addx( math.abs((20/tiltas)*math.sin(pos2))*(pn*2-3) )
							a:addy( -math.abs(20*math.sin(pos2))*(pn*2-3) )
							]]
							if beat > 126 then
								a:addx( (-80*faf_aspect*math.sin(pos2))*(pn*2-3) )
								a:addy( (-80*(1/faf_tiltas)*math.sin(pos2))*(pn*2-3) )
							elseif beat > 104 then
								a:addx( (-64*faf_aspect*math.sin(pos2))*(pn*2-3) )
								a:addy( (-64*(1/faf_tiltas)*math.sin(pos2))*(pn*2-3) )
							elseif beat > 88 then
								a:addx( (-48*faf_aspect*math.sin(pos2))*(pn*2-3) )
								a:addy( (-48*(1/faf_tiltas)*math.sin(pos2))*(pn*2-3) )
							else
								a:addx( (-32*faf_aspect*math.sin(pos2))*(pn*2-3) )
								a:addy( (-32*(1/faf_tiltas)*math.sin(pos2))*(pn*2-3) )
							end
							
						end
					end
				
					local pingpong = math.mod(beat,1)
					if math.mod(beat,2) > 1 then
						pingpong = 1-pingpong
					end
					if beat > 87 and beat < 88 then
						pingpong = 1
					end
					if beat > 88 and beat < 136 then
						pingpong = 1-pingpong
					end
					if not slumpo and beat > 118 and beat < 120 then
						pingpong = math.mod(beat/2,1)
						if math.mod(beat/2,2) > 1 then
							pingpong = 1-pingpong
						end
					end
					if beat > 100 and beat < 104 then
						pingpong = 1
					end
					--[[
					if beat > 118 and beat < 120 then
						pingpong = 1-(math.mod(beat/2,1))
						if math.mod(beat/2,2) > 1 then
							pingpong = 1-pingpong
						end
					end
					if beat > 118 then
						pingpong = 1-pingpong
					end
					]]
					if beat > 126 and beat < 136 then
						pingpong = (math.mod(beat/2,1))
						if math.mod(beat/2,2) > 1 then
							pingpong = 1-pingpong
						end
					end
					if not slumpo and beat > 120 then
						pingpong = 1-pingpong
					end
					if not slumpo and beat > 134 then
						pingpong = 0
					end
					
					local addy = 0
					local zm = 1
					local rz = 0
					if beat > 134 then
						addy = ((beat-134)/2)*120
						zm = 1 - ((beat-134)/2)*0.2
						rz = ((beat-134)/2)*-10
					end
					
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:x(SCREEN_CENTER_X - 160 + 320*pingpong)
							a:y(SCREEN_CENTER_Y)
							a:addy(addy)
							a:rotationx(0)
							a:z(0)
							if pn == 1 then
								a:rotationy(faf_aux:GetX()+180)
							else
								a:rotationy(faf_aux:GetX())
							end
							a:zoomz(1)
							a:zoomx(faf_aux2:GetX()*zm)
							a:zoomy(faf_aux2:GetY()*zm)
							a:skewx(faf_aux:GetY()*(pn*2-3))
							a:rotationz(rz)
						end
					end
					
					if math.mod(faf_aux:GetX(),180) > 90 then
						mod_do('*10000 dark',2)
						mod_do('*10000 no dark',1)
					else
						mod_do('*10000 dark',1)
						mod_do('*10000 no dark',2)
					end
					
					mod_do('*10000 '..(50+80*math.abs(math.sin(pos)))..' flip',1)
					mod_do('*10000 '..(50-80*math.abs(math.sin(pos)))..' flip',2)
					if beat < 87 then
						mod_do('*10000 '..(50-50*math.abs(math.sin(pos)))..' reverse')
					else
						mod_do('*10000 '..(50-50*(math.sin(pos)))..' reverse')
					end
					if beat > 100 and beat < 136 then
						mod_do('*10000 no alternate, *10000 no split, *10000 no cross')
					end
					if beat > 104 and beat < 116 then
						--mod_do('*10000 alternate')
					elseif beat > 100 and beat < 104 then
						mod_do('*10000 split')
					elseif beat > 120 and beat < 124 then
						--mod_do('*10000 cross')
					elseif beat > 128 and beat < 132 then
						if slumpo then
							mod_do('*10000 alternate')
						end
					end
				end
				
				if beat > 164 and beat < 168 then
					local amt = faf_aux:GetX()
					-- 100/(100-centered) = (50-reverse)/50
					local reverse = -2*amt;
					local bumpy = 8*amt;
					local centered = (50-reverse)/50
					local centered2 = 5*((50-reverse)/50)
					local spd = 0.1+1.4*((100-amt)/100)
					mod_do('*10000 '..centered..' centered,*10000 '..reverse..' reverse, *10000 '..spd..'x, *10000 '..bumpy..' bumpy, *10 no sudden')
					if FUCK_EXE then
						--mod_do('*10000 '..centered2..' centered2')
					end
				end
				
				if beat > 136 and beat < 138 then
					mod_do('*10000 '..(faf_aux:GetX())..' flip')
				end
				
				if beat > 196 and beat < 199.9 then
					local spn = 360*inQuart((beat-196)/3.9,0,1,1)
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:rotationz(spn)
						end
					end
				end
				
				if beat > 224 and beat < 232 then
					local int = math.min((beat-224)/4,1)
					if beat > 230 then
						int = 1+1*(beat-230)/1.5
					end
					if beat > 231.5 then
						int = 2-2*(beat-231.5)/0.5
					end
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:rotationx(int*45*math.sin(beat*2*math.pi))
							a:rotationy(int*45*math.cos(beat*2*math.pi))
							
							a:zoomz(1+int*2 + 5*((beat*4)-math.floor(beat*4)))
						end
					end
					
					faf_bg3:rotationx(int*45*math.sin(beat*2*math.pi))
					faf_bg3:rotationy(int*45*math.cos(beat*2*math.pi))
					
				end
				
				if beat > 168 and beat < 200 then
					local amt = 0 + 150*(math.min((beat-168)/32,1))
					if slumpo then
						amt = amt + 0 + 33.5*(math.min((beat-168)/32,1))
					end
					for pn=1,2 do
						mod_do('*10000 '..(-amt*(pn*2-3)*math.sin(beat*0.5*math.pi))..' dizzy')
					end
				end
				
				if slumpo and beat > 200.1 and beat < 212 then
					mod_do('*2 200 dizzy',1)
					mod_do('*2 -200 dizzy',2)
				end
				if beat > 212 and beat < 220 then
					mod_do('*2 no dizzy')
				end
				
				
				if beat > 240 and beat < 352 then
					
					
					local pos = beat*math.pi
					local pos2 = beat*math.pi
					if beat > 296 and beat < 304 or beat > 348 then
						pos = beat*math.pi*0.25
						pos2 = beat*math.pi*0.25
					end
					
					
					
					if beat > 336 and beat < 337 then
						--pos = beat*2*math.pi
						pos2 = beat*2*math.pi
					end
					
					if beat > 283 and beat < 283.5 then
						pos2 = beat*2*math.pi
					end
					if beat > 283.5 and beat < 285.5 then
						pos2 = (beat-0.5)*math.pi
					end
					if beat > 285.5 and beat < 286 then
						pos2 = beat*2*math.pi
					end
					if beat > 286 and beat < 288 then
						pos2 = beat*math.pi*0.5
					end
					
					if beat > 271 and beat < 272 then
						pos2 = 0;
					end
					if beat > 272 and beat < 352 then
						pos2 = pos2*-1
					end
					if beat > 348 then
						pos2 = pos2*-1
					end
					
					--[[
					if beat > 126 then
						pos = beat*math.pi*0.5
					end
					
					if beat > 126 then
						pos2 = beat*math.pi*0.5
					end
					if beat > 87 and beat < 88 or beat > 100 and beat < 104 then
						pos2 = 0;
					end
					]]
					
					--[[
					--ratio:
						a:x(sw/2 + sw*0.008*(pn*2-3)*faf_aspect)
						a:y(sh/2 + sh*0.01*(pn*2-3))
					]]
					local faf_tiltas = (0.01*faf_aspect)/0.01
					
					for pn=1,2 do
						local a = _G['faf_poly'..(pn+2)]
						if a then
							
							a:x(sw/2 + faf_aux4:GetX()*sw*-0.002*(pn*2-3)*faf_aspect)
							a:y(sh/2 + faf_aux4:GetX()*sh*0.01*(pn*2-3))
							
							if beat < 304 then
								
								if (beat < 283 or beat > 283.5) and (beat < 285.5 or beat > 286) then
									a:addy( (32*(1/faf_tiltas)*math.sin(pos2))*(pn*2-3) )
									a:addx( (-7*faf_aspect*math.sin(pos2))*(pn*2-3) )
								else
									a:addx( (-60*faf_aspect*math.sin(pos2))*(pn*2-3) )
								end
							end
							
							if beat > 285.5 and beat < 286 then
								a:addx( (72*faf_aspect*math.sin(pos2))*(pn*2-3) )
							end
							
							--if beat > 304 then
								if beat < 336 then
									a:addx( (pn*2-3)*math.abs(32*math.sin(pos2)) )
								else
									a:addx( (pn*2-3)*math.abs(64*math.sin(pos2)) )
								end
								if (beat < 336 or beat > 337) and (beat < 283 or beat > 283.5) and (beat < 285.5 or beat > 286) then
									a:addy( (pn*2-3)*40*math.sin(pos2) )
								end
							--end
							
							if beat > 304 and beat < 336 and (beat < 332 or beat > 336) and (beat < 336 or beat > 337) and (beat < 283 or beat > 283.5) and (beat < 285.5 or beat > 286) then
								a:rotationx( (pn*2-3)*15*math.sin(pos2) )
							end
							if beat > 336 and beat < 346 then
								a:rotationx( (pn*2-3)*30*math.sin(pos2) )
							end
							
							if (beat > 272 and beat < 304 or beat > 348) and (beat < 283 or beat > 283.5) and (beat < 285.5 or beat > 286) then
								a:rotationz( (pn*2-3)*-6*math.sin(pos2*2) )
								a:zoom( 1 + (pn*2-3)*0.2*math.sin(pos2*2) )
								if beat > 300 and beat < 320 then
									a:rotationz( (pn*2-3)*-20*math.sin(pos2*2) )
									a:zoom( 1 + (pn*2-3)*0.4*math.sin(pos2*2) )
								end
							else
								a:zoom(1)
							end
							
							
							
						end
					end
					
					local pingpong = math.mod(beat,1)
					
					if math.mod(beat,2) > 1 then
						pingpong = 1-pingpong
					end
					if beat > 296 and beat < 304 or beat > 348 then
						pingpong = math.mod(beat/4,1)
						if math.mod(beat/4,2) > 1 then
							pingpong = 1-pingpong
						end
					end
					
					if beat > 252 and beat < 256 then
						pingpong = 0
					end
					
					if beat > 271 and beat < 272 then
						pingpong = 1
					end
					if beat > 272 and beat < 352 then
						pingpong = 1-pingpong
					end
					if beat > 348 then
						pingpong = 1-pingpong
					end
					if beat > 332 and beat < 336 then
						pingpong = 1
					end
					
					
					
					--[[
					
					if beat > 100 and beat < 104 then
						pingpong = 1
					end
					]]
					--[[
					if beat > 118 and beat < 120 then
						pingpong = 1-(math.mod(beat/2,1))
						if math.mod(beat/2,2) > 1 then
							pingpong = 1-pingpong
						end
					end
					if beat > 118 then
						pingpong = 1-pingpong
					end
					]]
					--[[
					if beat > 126 and beat < 136 then
						pingpong = (math.mod(beat/2,1))
						if math.mod(beat/2,2) > 1 then
							pingpong = 1-pingpong
						end
					end
					]]
					local addy = 0
					local zm = 1
					local rz = 0
					
					local zmx = 1
					local zmy = 1
					
					if beat > 240 and beat < 252 then
						rz = 20*math.sin(beat*math.pi)
					end
					if beat > 256 and beat < 271 then
						rz = 30*math.sin(beat*math.pi)
						zmx = 1 + 0.05*math.sin(beat*math.pi*2)
						zmy = 0.95 + 0.05*math.cos(beat*math.pi*2)
					end
					
					if beat > 272 and beat < 283 then
						rz = 20*math.sin(beat*math.pi)
						zmx = 1 + 0.2*math.sin(beat*math.pi*2)
						zmy = 0.9 + 0.1*math.cos(beat*math.pi*2)
					end
						
					if not slumpo then
						if beat > 288 and beat < 296 then
							rz = 10*math.sin(beat*math.pi)
							zmx = 1 + 0.1*math.sin(beat*math.pi*2)
							zmy = 0.9 + 0.1*math.cos(beat*math.pi*2)
						end
						
						if beat > 304 and beat < 332 then
							rz = 20*math.sin(beat*math.pi)
							zmx = 1 - 0.3*math.sin(beat*math.pi*2)
							zmy = 1.1 - 0.1*math.cos(beat*math.pi*2)
						end
						
						if beat > 336 and beat < 348 then
							rz = -10*math.sin(beat*math.pi)
							zmx = 1 + 0.2*math.sin(beat*math.pi*2)
							zmy = 0.9 + 0.1*math.cos(beat*math.pi*2)
						end
					end
					
					local addx = 0
					if beat > 348 and beat < 352 then
						addx = 160*((beat-348)/4) - 50*math.sin(beat*0.25*math.pi)
					end
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:x(SCREEN_CENTER_X - 160 + 330*pingpong)
							a:y(SCREEN_CENTER_Y)
							a:addx(addx)
							a:addy(addy)
							a:rotationx(0)
							a:z(0)
							if pn == 1 then
								a:rotationy(faf_aux:GetX()+180)
							else
								a:rotationy(faf_aux:GetX())
							end
							a:zoomz(1)
							a:zoomx(faf_aux2:GetX()*zm*zmx)
							a:zoomy(faf_aux2:GetY()*zm*zmy)
							a:skewx(faf_aux:GetY()*(pn*2-3))
							a:rotationz(rz)
						end
					end
					
					if math.mod(faf_aux:GetX(),180) > 90 then
						mod_do('*10000 dark',2)
						mod_do('*10000 no dark',1)
					else
						mod_do('*10000 dark',1)
						mod_do('*10000 no dark',2)
					end
					
					if beat < 336 or beat > 348 then
						if beat < 346 then
							mod_do('*10000 '..(50-faf_aux5:GetX()+80*math.abs(math.sin(pos)))..' flip',1)
							mod_do('*10000 '..(50+faf_aux5:GetX()-80*math.abs(math.sin(pos)))..' flip',2)
						else
							mod_do('*10000 '..(20-50*math.abs(math.sin(pos)))..' flip',1)
							mod_do('*10000 '..(80+50*math.abs(math.sin(pos)))..' flip',2)
						end
					else
						mod_do('*10000 '..(50+80*(math.sin(pos)))..' flip, *1000 dark',1)
						mod_do('*10000 '..(50-80*(math.sin(pos)))..' flip',2)
					end
					
					if slumpo then
						if beat < 330 or beat > 336 then
							mod_do('*10000 '..(50-50*(math.sin(pos)))..' reverse')
						else
							mod_do('*10000 '..math.abs(50-50*(math.sin(pos)))..' reverse')
						end
					else
						
					end
					
					if not slumpo and beat > 272 and beat < 296 then
						local int = 1
						if beat > 288 then
							int = 2
						end
						mod_do('*10000 '..((int*25-int*25*(math.cos(pos)))*(2*2-3))..' invert',2)
						mod_do('*10000 '..((-int*25+int*25*(math.cos(pos)))*(2*2-3))..' invert',1)
					end
					
					if beat > 240 and beat < 352 then
						if not slumpo then
							mod_do('*3 1.5x');
						end
						mod_do('*10000 no alternate, *10000 no split, *10000 no cross')
					end
					if beat > 304 and beat < 332 then
						if not slumpo then
							if math.mod(beat,4) < 2 then
								mod_do('*10000 '..(50-50*math.abs(math.sin(pos)))..' reverse')
							else
								mod_do('*10000 '..(50+50*math.abs(math.sin(pos)))..' reverse')
							end
						else
							mod_do('*10000 alternate')
						end
					elseif beat > 336 and beat < 352 then
						--mod_do('*10000 split')
					elseif beat > 120 and beat < 124 then
						--mod_do('*10000 cross')
					elseif beat > 128 and beat < 132 then
						mod_do('*10000 alternate')
					end
					
					if not slumpo and beat > 332 and beat < 336 then
						mod_do('*10 no reverse')
					end
					
					if not slumpo and beat > 300 and beat < 304 then
						local amt = ((beat-300)/4)*50
						mod_do('*10000 '..amt..' reverse')
					end
					
				end
				
				if beat > 351.9 and beat < 353 then
					mod_do('*10000 '..(faf_aux3:GetX()*0.4)..' flip,*10000 '..(faf_aux3:GetX())..' reverse')
				end
				
				if beat > 352 then
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:effectmagnitude(faf_aux2:GetX(),faf_aux2:GetX(),0)
						end
					end
					if FUCK_EXE then
						for i=1,32 do
							local a = faf_shards[i]
							if a then
								a:effectmagnitude(faf_aux2:GetX(),faf_aux2:GetX(),0)
							end
						end
					end
				end
				
				screen:effectmagnitude(faf_screenvib:GetX(),faf_screenvib:GetX(),0)
				
				---------------------------------------
				-- ACTION RPGS AINT GOT SHIT ON THIS --
				---------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					while curaction<=table.getn(mod_actions) and GAMESTATE:GetSongBeat()>=mod_actions[curaction][1] do
						if mod_actions[curaction][3] or GAMESTATE:GetSongBeat() < mod_actions[curaction][1]+2 then
							if type(mod_actions[curaction][2]) == 'function' then
								mod_actions[curaction][2]()
							elseif type(mod_actions[curaction][2]) == 'string' then
								MESSAGEMAN:Broadcast(mod_actions[curaction][2]);
							end
						end
						curaction = curaction+1;
					end
				end
				
			end
			
			self:sleep(1/60);
			self:queuecommand('Update');

---------------------------------------------------------------------------------------
----------------------END DON'T TOUCH IT KIDDO-----------------------------------------
---------------------------------------------------------------------------------------
			
		end"
		
	/>
	
	<!--Handling messages here is still fun and profitable-->
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) faf_aux = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1;y,1;x,1"
	InitCommand="%function(self) faf_aux2 = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) faf_aux3 = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1;y,1;x,1"
	InitCommand="%function(self) faf_aux4 = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) faf_aux5 = self end"
	/>
	
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) faf_screenvib = self end"
	Burn0MessageCommand="stoptweening;x,10;linear,30/196;x,0;"
	Burn1MessageCommand="stoptweening;x,15;linear,35/196;x,0;"
	Burn2MessageCommand="stoptweening;x,20;linear,40/196;x,0;"
	Burn3MessageCommand="stoptweening;x,30;linear,90/196;x,0;"
	/>
	
	<!--ember spawner-->
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self)
		function faf_line(ypos)
			local xpos = sw/2 + sw*0.15 - sw*0.3*(ypos/sh)
			return xpos
		end
		
		function faf_particles(num,dur,alpha)
			if not num then num = 16 end
			if not alpha then alpha = 1 end
			if not dur then dur = 1 end
			for i=0,num-1 do
				local a = faf_getember()
				if a then
					local zm = math.random(0,100)/100 + 0.5
					local yp = math.random(40,sh-40)
					local dir = (math.random(0,1)*2-1)
					a:finishtweening()
					a:hidden(0)
					a:zoom(zm)
					a:y(yp)
					a:x(faf_line(yp))
					a:decelerate(dur*60/196)
					a:addx( dir*math.random(20,100)*dur )
					a:addy( dir*math.random(20,60)*dur )
					a:queuecommand('Hide')
					
					a:GetChild(''):blend('add')
					a:GetChild(''):y(0)
					a:GetChild(''):zoom(1)
					a:GetChild(''):diffusealpha(alpha)
					a:GetChild(''):accelerate(dur*60/196)
					a:GetChild(''):zoom(.5)
					a:GetChild(''):addy(-40)
					a:GetChild(''):diffusealpha(0)
					
				end
			end
		end
		
	end"
	Burn0MessageCommand="%function(self)
		faf_particles(16,1.4,.6)
	end"
	Burn1MessageCommand="%function(self)
		faf_particles(16,1.7,.6)
	end"
	Burn2MessageCommand="%function(self)
		faf_particles(16,2,.6)
	end"
	Burn3MessageCommand="%function(self)
		faf_particles(20,4,1)
	end"
	/>
	
	<Layer Type="ActorFrame" InitCommand="%function(self) faf_slice = self end" OnCommand="x,sw/2;y,sh/2;rotationz,90" ><children>
		<Layer File="hurt" OnCommand="blend,add;y,SCREEN_WIDTH+256;vertalign,bottom;zoomtoheight,SCREEN_WIDTH+768;diffusealpha,0;"
		SliceMessageCommand="sleep,.5;linear,.6;diffusealpha,.4;"
		Fade1MessageCommand="linear,60/196;diffusealpha,.2;linear,60/196;diffusealpha,.6;"
		Fade2MessageCommand="linear,180/196;diffusealpha,0;sleep,60/196;linear,240/196;diffusealpha,.8;"
		Fade3MessageCommand="linear,480/196;diffusealpha,0;"
		Burn0MessageCommand="stoptweening;diffusealpha,.8;linear,60/196;diffusealpha,0;"
		Burn0aMessageCommand="stoptweening;diffusealpha,.8;linear,60/196;diffusealpha,0;"
		Burn1MessageCommand="stoptweening;diffusealpha,.9;linear,60/196;diffusealpha,0;"
		Burn2MessageCommand="stoptweening;diffusealpha,1;linear,120/196;diffusealpha,0;"
		Burn3MessageCommand="stoptweening;diffusealpha,1;linear,240/196;diffusealpha,0;"
		/>
		<Layer File="wound" OnCommand="blend,add;y,SCREEN_WIDTH+256;vertalign,bottom;zoomtoheight,SCREEN_WIDTH+768;diffusealpha,0;"
		Fade3MessageCommand="sleep,240/196;linear,240/196;diffusealpha,.1;"
		Fade4MessageCommand="linear,240/196;diffusealpha,0;"
		/>
		<Layer File="tip" OnCommand="blend,add;zoomx,2;zoomy,2;y,SCREEN_WIDTH+256;vertalign,bottom;diffusealpha,0;"
		SliceMessageCommand="diffusealpha,1;linear,.2;y,-256;sleep,.5;accelerate,.6;diffusealpha,0;sleep,0;y,SCREEN_WIDTH+256;" />
		<Layer File="cut1" OnCommand="blend,add;zoomx,2;zoomy,0;y,SCREEN_WIDTH+256;vertalign,bottom;diffusealpha,0;"
		SliceMessageCommand="diffusealpha,1;linear,.2;zoomtoheight,SCREEN_WIDTH+512;sleep,.5;accelerate,.6;diffusealpha,0;sleep,0;zoomy,0;" />
	</children></Layer>
	
	
	
	<Layer Type="ActorFrame" OnCommand="fov,60" Condition="FUCK_EXE"><children>
		<LAER
			Type="ActorFrameTexture"
			InitCommand="%function(self)
				self:SetWidth( dw );
				self:SetHeight( dh );
				self:EnableDepthBuffer( true );
				self:EnableAlphaBuffer( false );
				self:EnableFloat( false );
				self:EnablePreserveTexture( true );        
				self:hidden(0);
				self:Create();
				faf_aft=self
			end"
		/>
		<Layer Type="Quad" OnCommand="diffuse,0,0,0,1;stretchto,0,0,sw,sh" />
		
		
		<Layer File="sky" InitCommand="%function(self) faf_defeatsky = self end" OnCommand="stretchto,0,0,sw,sh;diffusealpha,0;" />
		
		<Layer File="clouds" InitCommand="%function(self) faf_defeatclouds = self end" OnCommand="customtexturerect,0,0,3,3;x,sw/2;zoom,6;fadebottom,.5;y,0;rotationx,60;texcoordvelocity,0,.1;diffusealpha,0;" />
		
		<Layer File="treeline" InitCommand="%function(self) faf_defeattrees = self end" OnCommand="x,sw/2;zoom,.8;diffuse,1*.6,.8*.4,.6*.4,0;y,sh-100;" />
		
		<Layer File="pandora1" InitCommand="%function(self) faf_spooky2 = self end" OnCommand="scaletofit,0,0,sw,sh;diffusealpha,0;" />
		<Layer File="sad_panda" InitCommand="%function(self) faf_defeat2 = self end" OnCommand="scaletofit,0,0,sw,sh;diffusealpha,0;" />
		
		<Layer File="peaceful_v" InitCommand="%function(self) faf_defeatvig = self end" OnCommand="stretchto,0,0,sw,sh;diffusealpha,0;" />
		
		<Layer File="ok" InitCommand="%function(self) faf_spooky1 = self end" OnCommand="stretchto,0,0,sw,sh;diffusealpha,0;" />
		<Layer File="ok" InitCommand="%function(self) faf_defeat1 = self end" OnCommand="stretchto,0,0,sw,sh;diffusealpha,0;rotationz,180" />
		
		<Layer Type="Quad" InitCommand="%function(self) faf_bgwhite = self end" OnCommand="stretchto,-sw*40,-sh*40,sw*40,sh*40;diffuse,1,1,1,0;" />
		
		
		<Layer Type="Polygon"
			Var="faf_poly1"
			DrawMode="quads"
			Vertices="4"
			OnCommand="sleep,0.02;x,sw/2;y,sh/2;basezoomy,-1;queuecommand,Make"
			MakeCommand="%function(self)
				self:SetTexture(faf_aft:GetTexture())
				
				self:SetVertexPosition(0,-sw/2,-sh/2,0)
				self:SetVertexPosition(1,sw/2,-sh/2,0)
				self:SetVertexPosition(2,sw/2,sh*-0.15,0)
				self:SetVertexPosition(3,-sw/2,sh*0.15,0)
				
				self:SetVertexTexCoord(0,0,0)
				self:SetVertexTexCoord(1,1*(dw/poly_npot(dw)),0)
				self:SetVertexTexCoord(2,1*(dw/poly_npot(dw)),0.35*(dh/poly_npot(dh)))
				self:SetVertexTexCoord(3,0,0.65*(dh/poly_npot(dh)))
				
			end"
		/>
		<Layer Type="Polygon"
			Var="faf_poly2"
			DrawMode="quads"
			Vertices="4"
			OnCommand="sleep,0.02;x,sw/2;y,sh/2;basezoomy,-1;queuecommand,Make"
			MakeCommand="%function(self)
				self:SetTexture(faf_aft:GetTexture())
				
				self:SetVertexPosition(0,-sw/2,sh*0.15,0)
				self:SetVertexPosition(1,sw/2,sh*-0.15,0)
				self:SetVertexPosition(2,sw/2,sh/2,0)
				self:SetVertexPosition(3,-sw/2,sh/2,0)
				
				self:SetVertexTexCoord(0,0,0.65*(dh/poly_npot(dh)))
				self:SetVertexTexCoord(1,1*(dw/poly_npot(dw)),0.35*(dh/poly_npot(dh)))
				self:SetVertexTexCoord(2,1*(dw/poly_npot(dw)),1*(dh/poly_npot(dh)))
				self:SetVertexTexCoord(3,0,1*(dh/poly_npot(dh)))
				
			end"
		/>
		
		<Layer Type="Polygon"
			Var="faf_poly3"
			DrawMode="quads"
			Vertices="4"
			OnCommand="sleep,0.02;x,sw/2;y,sh/2;hidden,1;basezoomy,-1;queuecommand,Make"
			MakeCommand="%function(self)
				self:SetTexture(faf_aft:GetTexture())
				
				self:SetVertexPosition(0,-sw/2,-sh/2,0)
				self:SetVertexPosition(1,sw*-0.15,-sh/2,0)
				self:SetVertexPosition(2,sw*0.15,sh/2,0)
				self:SetVertexPosition(3,-sw/2,sh/2,0)
				
				self:SetVertexTexCoord(0,0,0)
				self:SetVertexTexCoord(1,0.35*(dw/poly_npot(dw)),0)
				self:SetVertexTexCoord(2,0.65*(dw/poly_npot(dw)),1*(dh/poly_npot(dh)))
				self:SetVertexTexCoord(3,0,1*(dh/poly_npot(dh)))
				
			end"
		/>
		<Layer Type="Polygon"
			Var="faf_poly4"
			DrawMode="quads"
			Vertices="4"
			OnCommand="sleep,0.02;x,sw/2;y,sh/2;hidden,1;basezoomy,-1;queuecommand,Make"
			MakeCommand="%function(self)
				self:SetTexture(faf_aft:GetTexture())
				
				self:SetVertexPosition(0,sw*-0.15,-sh/2,0)
				self:SetVertexPosition(1,sw/2,-sh/2,0)
				self:SetVertexPosition(2,sw/2,sh/2,0)
				self:SetVertexPosition(3,sw*0.15,sh/2,0)
				
				self:SetVertexTexCoord(0,0.35*(dw/poly_npot(dw)),0)
				self:SetVertexTexCoord(1,1*(dw/poly_npot(dw)),0)
				self:SetVertexTexCoord(2,1*(dw/poly_npot(dw)),1*(dh/poly_npot(dh)))
				self:SetVertexTexCoord(3,0.65*(dw/poly_npot(dw)),1*(dh/poly_npot(dh)))
				
			end"
		/>
		
		<Layer Type="ActorFrame" InitCommand="%function(self) faf_glass = self end" ><children>
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		<Layer Type="Polygon" DrawMode="triangles" OnCommand="sleep,0.02;basezoomy,-1;hidden,1;queuecommand,Make" MakeCommand="%function(self) table.insert(faf_shards,self) end" />
		</children></Layer>
		
	</children></Layer>
	
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" HideCommand="hidden,1;"
	MakeCommand="%function(self) table.insert(faf_embers,self) end" ><children> <Layer File="ligma"/> </children></Layer>
	
	<Layer Type="ActorFrame" InitCommand="%function(self) faf_vigc = self end" OnCommand="x,sw/2;y,sh/2;" ><children>
		<Layer File="vig" InitCommand="%function(self) faf_vig = self end" OnCommand="diffusealpha,0;stretchto,0,0,sw,sh;x,0;y,0;" />
	</children></Layer>
	
	<!--This is for the time based mod reader-->
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); mod_time = tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
</children></ActorFrame>