<GAME Type="ActorFrame"><children>
<GAME Type="ActorFrame" OnCommand="zoomx,SCREEN_WIDTH/640;zoomy,SCREEN_HEIGHT/480;fov,60" ><children>
	
	<LAER File="../fb_notedata" />
	<LAER File="../fb_notedata2" />
	
	<LAER Type="Quad"
		InitCommand="%function(self)
		
			jug_charas = {{},{},{},{},{},{}}
			jug_fb_counter = {1,1,1,1,1,1}
			
			mawaru_dirs = {90,0,180,-90}
		
			--this is where variables go when the simfile starts up
			--function declarations, and things that will never change even
			--if this particular minigame is restarted after being played once before
			
			function taro_tween_easeInOutQuad(t)
				local b = 0
				local c = 1
				local d = 1
				t = t/(d/2);
				if (t < 1) then return c/2*t*t + b; end
				t = t-1;
				return -c/2 * (t*(t-2) - 1) + b;
			end
			
			jug_firstbeat = 20.5
			
			jug_fb_minebeat = 0;
			
			mawaru_keys = {0,0,0,0,0,0,0,0}
			mawaru_held = {0,0,0,0,0,0,0,0}
			
			jug_fb_slowed = false;
			jug_fb_z = false;
			jug_fb_z2 = false;
			
			jug_fb_frame = 1/60
			
			jug_fb_oe = {25,25};
			
			jug_fb_arrowspacing = 100;
			jug_fb_arrowoffset = 64;
			jug_fb_scrollspd = {0,0}
			jug_fb_scrollmaxspd = {jug_fb_arrowspacing,jug_fb_arrowspacing}
			jug_fb_scrollaccel = {1,1}
			
			jug_fb_twindow = PREFSMAN:GetPreference('JudgeWindowSecondsGreat');
			
			jug_fb_stepdelay = 0.2;
			
			jug_fb_hitballoe = 1;
			
			jug_fb_bottom = 310-20
			jug_fb_top = 150
			
			jug_fb_z_spacing = 200;
		
			--for storing if a button is held down
			jug_fb_held = {0,0,0,0,0,0,0,0};
			jug_fb_stepm = {0,0,0,0,0,0,0,0};
			jug_fb_stepmwait = {0,0,0,0,0,0,0,0};
			
			jug_fb_notes = {{{},{},{},{},{},{}},{{},{},{},{},{},{}}}
			jug_fb_nptr = {{1,1,1,1,1,1},{1,1,1,1,1,1}}
			
			jug_fb_score = {0,0} --*100*66/514
			
			mawaru_songtime = 0;
			
			jug_fb_hitbeat = {-1,-1}
			jug_fb_hurt = {-1,-1};
			jug_fb_ball_current = {-1,-1};
			jug_fb_curjudge = {1,1};
			
			jug_fb_spawnoe = {1,1}
			
			jug_fb_balljudged = {}
			for i=1,200 do
				table.insert(jug_fb_balljudged,false)
			end
			
			
			function jug_fb_totalnotes(pn)
				
				local notes = 0
				if _G['jug_fb_nd'..pn] then
					for i=1,table.getn(_G['jug_fb_nd'..pn]) do
						if jug_fb_isjudgable(pn, i) then
							notes = notes+1
						end
					end
				end
				return notes
			end
			
			function jug_fb_isjudgable(pn, which)
				if which <= table.getn(_G['jug_fb_nd'..pn]) and _G['jug_fb_nd'..pn][ which ][3] ~= 'M' and _G['jug_fb_nd'..pn][ which ][3] ~= 100 then
					return true
				else
					return false
				end
			end
			
			function jug_fb_getquant(beat)
				if beat-math.floor(beat) == 0 then return 1 end
				if beat-math.floor(beat) == 0.5 then return 2 end
				return 3
			end
			
			function jug_fb_add(pn,q,obj)
				table.insert(jug_fb_notes[pn][q],{actor = obj, mirrored = false, mined = false, dir = 1, beat = -1, q = 1, active = false, hurt = false})
			end
			
			function jug_fb_spawn(pn,beat,dir,special)
			
				if pn == 2 then
					return false
				end
			
				local q = jug_fb_getquant(beat)
				local a = nil
				
				if special == 2 then
					a = jug_fb_notes[pn][6][ jug_fb_nptr[pn][6] ]
				elseif special == 4 then
					a = jug_fb_notes[pn][5][ jug_fb_nptr[pn][5] ]
				else
					a = jug_fb_notes[pn][dir][ jug_fb_nptr[pn][dir] ]
				end
				
				local fug = 0
				
				if a then
					a.active = true
					a.dir = dir
					a.beat = beat;
					a.hurt = false;
					a.mined = false;
					a.q = q
					a.mirrored = false
					
					a.arrow = nil
					
					if a.q4 and a.q8 and a.q16 then
						a.q4:hidden(1)
						a.q8:hidden(1)
						a.q16:hidden(1)
						
						if q == 1 then
							a.arrow = a.q4;
						elseif q == 2 then
							a.arrow = a.q8;
						else
							a.arrow = a.q16;
						end
						a.arrow:hidden(0)
					end
					
					local as = jug_fb_arrowspacing
					
					local b = a.actor
					if b and a.arrow then
						--Trace(beat);
						b:hidden(0)
						
						b:basezoomx(640/sw)
						
						b:x((beat-jug_firstbeat-fug)*jug_fb_arrowspacing);
						
						--Trace((beat-304)*64);
						--Trace(b:GetX());
						b:playcommand('Idle');
						
						
						a.arrow:stoptweening();
						a.arrow:glow(1,1,1,0);
						--a.arrow:diffuse(0,1,1,1);
						a.arrow:basezoomx(1.25);
						a.arrow:basezoomy(1.25);
						
						b:bounce();
						b:effectclock('bgm');
						b:effectperiod(2);
						b:effectmagnitude(0,0,0);
						
						if q == 3 and beat < 100 or q == 2 and beat > 100 then
							b:y(140);
							b:rotationz(180);
							a.arrow:rotationz(mawaru_dirs[dir]+180);
							a.mirrored = true;
						else
							b:y(340);
							b:rotationz(0);
							a.arrow:rotationz(mawaru_dirs[dir]);
							a.mirrored = false;
						end
						
						
						b:zoom(0)
						b:bounceend(0.3)
						b:zoom(0.75);
						
					end
				end
				
				if special == 4 then
					jug_fb_nptr[pn][5] = jug_fb_nptr[pn][5]+1
					
					if jug_fb_nptr[pn][5] > table.getn(jug_fb_notes[pn][5]) then
						jug_fb_nptr[pn][5] = 1;
					end
				elseif special == 2 then
					jug_fb_nptr[pn][6] = jug_fb_nptr[pn][6]+1
					
					if jug_fb_nptr[pn][6] > table.getn(jug_fb_notes[pn][6]) then
						jug_fb_nptr[pn][6] = 1;
					end
				else
					jug_fb_nptr[pn][dir] = jug_fb_nptr[pn][dir]+1
					
					if jug_fb_nptr[pn][dir] > table.getn(jug_fb_notes[pn][dir]) then
						jug_fb_nptr[pn][dir] = 1;
					end
				end
				
				return true
			end
			
			jug_fb_curnote = {1,1}
			
			function jug_fb_getnextball(pn)
				jug_fb_curjudge[pn] = jug_fb_curjudge[pn]+1
				while _G['jug_fb_nd'..pn][jug_fb_curjudge[pn] ][3] == 'M' or _G['jug_fb_nd'..pn][jug_fb_curjudge[pn] ][3] == 100 do
					jug_fb_curjudge[pn] = jug_fb_curjudge[pn]+1
				end
				return jug_fb_curjudge[pn]
			end
			
			function jug_fb_ballnext(pn)
			
				local old = jug_fb_ball_current[pn];
				jug_fb_ball_current[pn] = _G['jug_fb_nd'..pn][jug_fb_curjudge[pn] ][1]
				local new = jug_fb_ball_current[pn];
				
				local peak = 180
				if new-old < 4 then
					peak = 210
				end
				if new-old > 30 then
					peak = -2000
				end
				
				--[[
				if new < 320 then
					new = 304
				else
					new = new-12;
					old = old-12;
				end
				]]
				
				

				
				local tonext = math.max( time_at_beat(new) - mawaru_songtime, 0) + jug_fb_twindow
				
				--Trace(tonext);
				
				local b = _G['jug_fb_ball_p1']
				
				local xposOld = old-jug_firstbeat;
				local xpos = new-jug_firstbeat;
				local zpos = 0
				local addz = 0;
				
				if b and not jug_fb_balljudged[jug_fb_ball_current[pn] ] then
					local addx = 0
					
					
					b:stoptweening();
					
					--if new < 532 then
						
							b:finishtweening()
							
							b:x(addx + (xposOld)*jug_fb_arrowspacing);
							b:linear(tonext);
							b:x(addx + (xpos)*jug_fb_arrowspacing);
							b:z(addz + (zpos)*-jug_fb_z_spacing);
											
					--end
					
					for bn=1,1 do
					
						if new - old > 100 then
							jug_fb_ball_inner:diffusealpha(0)
							if new > 284 then
								MESSAGEMAN:Broadcast('FinalBall');
							end
						else
							jug_fb_ball_inner:diffusealpha(1)
						end
					
						if new < 100 then
							jug_fb_ball_inner:stoptweening();
							
							if jug_fb_getquant(old) ~= jug_fb_getquant(new) then
								
								if jug_fb_getquant(old) == 3 then
									jug_fb_ball_inner:y(jug_fb_top+30)
									jug_fb_ball_inner:linear(tonext)
								else
									jug_fb_ball_inner:y(jug_fb_bottom)
									jug_fb_ball_inner:decelerate(tonext)
								end
								if jug_fb_getquant(new) == 3 then
									jug_fb_ball_inner:y(jug_fb_top)
								else
									jug_fb_ball_inner:y(jug_fb_bottom+30)
								end

							else
							
								if jug_fb_getquant(old) == 3 then
									jug_fb_ball_inner:y(jug_fb_top+30)
									jug_fb_ball_inner:decelerate(tonext*0.5)
									jug_fb_ball_inner:addy(100)
									jug_fb_ball_inner:accelerate(tonext*0.5)
									jug_fb_ball_inner:y(jug_fb_top)
								else
									jug_fb_ball_inner:y(jug_fb_bottom)
									jug_fb_ball_inner:decelerate(tonext*0.5)
									jug_fb_ball_inner:addy(-100)
									jug_fb_ball_inner:accelerate(tonext*0.5)
									jug_fb_ball_inner:y(jug_fb_bottom+30)
								end
							
							end
							
						else
							jug_fb_ball_inner:finishtweening();
						
							if jug_fb_getquant(old) ~= jug_fb_getquant(new) then
								
								if jug_fb_getquant(old) == 2 then
									jug_fb_ball_inner:y(jug_fb_top+30)
									jug_fb_ball_inner:linear(tonext)
								else
									jug_fb_ball_inner:y(jug_fb_bottom)
									jug_fb_ball_inner:decelerate(tonext)
								end
								if jug_fb_getquant(new) == 2 then
									jug_fb_ball_inner:y(jug_fb_top)
								else
									jug_fb_ball_inner:y(jug_fb_bottom+30)
								end

							else
							
								if jug_fb_getquant(old) == 2 then
									jug_fb_ball_inner:y(jug_fb_top+30)
									jug_fb_ball_inner:decelerate(tonext*0.5)
									jug_fb_ball_inner:addy(100)
									jug_fb_ball_inner:accelerate(tonext*0.5)
									jug_fb_ball_inner:y(jug_fb_top)
								else
									jug_fb_ball_inner:y(jug_fb_bottom)
									jug_fb_ball_inner:decelerate(tonext*0.5)
									jug_fb_ball_inner:addy(-100)
									jug_fb_ball_inner:accelerate(tonext*0.5)
									jug_fb_ball_inner:y(jug_fb_bottom+30)
								end
							
							end
							
						end
					end
					
				end
				
				jug_fb_balljudged[jug_fb_ball_current[pn] ] = true
				
			end
			
			
			
			function jug_fb_update(pn)
			
				local beat = GAMESTATE:GetSongBeat()
				
				jug_fb_ball_p1:vibrate();
				jug_fb_ball_p1:effectmagnitude(jug_fb_mine_aux:GetX(),jug_fb_mine_aux:GetX(),0);
				
				if beat > jug_firstbeat-1 then
					if jug_fb_scrollspd[pn] < jug_fb_scrollmaxspd[pn] then
						jug_fb_scrollspd[pn] = jug_fb_scrollspd[pn]+jug_fb_scrollaccel[pn]
					else
						jug_fb_scrollspd[pn] = jug_fb_scrollmaxspd[pn]
					end
				end
				
				if beat > 506 and not jug_fb_slowed then
					jug_fb_slowed = true
					jug_fb_scrollspeedmult:linear(300/230)
					jug_fb_scrollspeedmult:x(0)
				end
				if beat > 512 and not jug_fb_z2 then
					jug_fb_z2 = true
					jug_fb_scrollspeedmult:z(jug_fb_z_spacing)
				end
				
				if jug_fb_isjudgable(pn,jug_fb_curjudge[pn]) and mawaru_songtime > time_at_beat(_G['jug_fb_nd'..pn][ jug_fb_curjudge[pn] ][1]) + jug_fb_twindow then
					--miss
					MESSAGEMAN:Broadcast('BumpP'..pn..'Miss');
					
					jug_fb_oe[pn] = jug_fb_oe[pn]*-1;
					
					
					jug_fb_score[pn] = jug_fb_score[pn]-2;
					
					if jug_fb_hitbeat[1] ~= _G['jug_fb_nd'..pn][ jug_fb_curjudge[pn] ][1] then
						jug_fb_hurt[pn] = _G['jug_fb_nd'..pn][ jug_fb_curjudge[pn] ][1]
					end
					
					jug_fb_getnextball(pn)
					
					jug_fb_ballnext(pn);
				end
				
				--Trace( 'Current time: '..mawaru_songtime..' \t\t\t '..time_at_beat(_G['jug_fb_nd'..pn][ jug_fb_curjudge[pn] ][1]) );
				
				--_G['jug_fb_world_p'..pn]:x(-jug_fb_arrowspacing*(beat-304) + jug_fb_arrowoffset);
				if pn == 1 then
					jug_fb_worldc:zoom( jug_fb_wzoom:GetX() )
					jug_fb_worldc:rotationz( jug_fb_wrot:GetZ() )
					jug_fb_worldc:rotationy( jug_fb_wrot:GetY() )
					if beat < 288 then
						_G['jug_fb_world_p'..pn]:addx(-jug_fb_scrollspd[pn]*jug_fb_scrollspeedmult:GetX()*jug_fb_frame*(GAMESTATE:GetCurBPS()));
						_G['jug_fb_world_p'..pn]:addz(jug_fb_scrollspeedmult:GetZ()*jug_fb_frame*(GAMESTATE:GetCurBPS()));
					end
				
					if jug_fb_curnote[pn] <= table.getn(_G['jug_fb_nd'..pn]) and beat > _G['jug_fb_nd'..pn][ jug_fb_curnote[pn] ][1]-12 then
						local tv = _G['jug_fb_nd'..pn][ jug_fb_curnote[pn] ]
						--Trace(tv[1])
						if jug_fb_isjudgable(pn,jug_fb_curnote[pn]) then
							if beat < tv[1] then
								jug_fb_spawn(pn,tv[1],tv[2]+1,tv[3])
								--Trace('spawn '..pn..' '..tv[1]..' '..(tv[2]+1)..' '..tv[3])
							end
						else
							--[[
							if beat < tv[1] then
								if tv[1] < 507 then
									jug_fb_spawn(pn,tv[1],tv[2]+1,true)
								end
							end
							]]
						end
						jug_fb_curnote[pn] = jug_fb_curnote[pn]+1;
					end
					
					for chara=1,6 do
						for i=1,table.getn(jug_fb_notes[pn][chara]) do
							local a = jug_fb_notes[pn][chara][ i ]
							if a then
								if a.active then
								
									
								
									local b = a.actor
									if b and a.arrow then
									
										if beat > a.beat+10 and beat < 284 then
											a.active = false
											b:hidden(1)
										end
									
										if beat > jug_firstbeat then
											if not a.hurt then
												
											else
												b:vibrate();
												b:effectmagnitude(a.aux:GetX(),a.aux:GetX(),a.aux:GetX())
											end
											b:rotationy( -jug_fb_wrot:GetY() )
										end
										if (not a.hurt or a.beat == 304) and (jug_fb_stepm[ a.dir ] == 1 or jug_fb_stepm[ a.dir + 4 ] == 1) then
											b:playcommand('Push');
											a.hurt = false;
											a.arrow:stoptweening();
											if a.mirrored then
												a.arrow:rotationz(mawaru_dirs[a.dir]+180);
											else
												a.arrow:rotationz(mawaru_dirs[a.dir]);
											end
											a.arrow:glow(1,1,1,1);
											--a.arrow:diffuse(1,.8,.8,1);
											a.arrow:zoom(1.15);
											a.arrow:linear(0.3);
											a.arrow:glow(1,1,1,0);
											--a.arrow:diffuse(0,1,1,1);
											a.arrow:zoom(1);
										end
										if not a.hurt and jug_fb_hurt[1] == a.beat and jug_fb_hurt[2] == a.beat and jug_fb_hitbeat[1] ~= beat and jug_fb_hitbeat[2] ~= beat then
											b:playcommand('Hurt');
											a.aux:x(10)
											a.aux:linear(0.3)
											if chara ~= 5 then
												a.aux:x(0)
											else
												a.aux:x(3)
											end
											taro_Sound('push_hurt');
											a.hurt = true;
										end
									end
								end
							end
						end
					end
					
				
					
					
					
				end
				
				for i=1,4 do
					jug_fb_stepm[i+(pn-1)*4] = 0;
				end
				
			end
			
		end"
		OnCommand="queuecommand,DoGame"
		DoGameCommand="%function(self)
			
			--variables set up when a game is started
			--wait 2 seconds (for the curtain or whatever) before accepting any inputs
			jug_fb_lockinput = {.3,.3};
			
			mawaru_songtime = mod_time;
			
			Trace( time_at_beat(20.5) );
			
			for pn=1,2 do
				
				--if GAMESTATE:IsPlayerEnabled(pn-1) then
				
				
					local a = Plr(pn)
					if a then
						--a:PushNoteData('jug_fb_nd'..pn,jug_firstbeat,533)
					end
					
					--GAMESTATE:UnloadSteps(pn-1)
					
					if FUCK_EXE then
					
						if a then
						
							_G['jug_fb_nd'..pn] = a:GetNoteData(0,51)
							local extra = a:GetNoteData(275.75,500)
							
							for i=1,table.getn(extra) do
								table.insert(_G['jug_fb_nd'..pn],extra[i]);
							end
							
						else
							_G['jug_fb_nd'..pn] = {}
						end
						
					else
						_G['jug_fb_nd'..pn] = fb_notedata
						
						for i=1,table.getn(fb_notedata2) do
							table.insert(_G['jug_fb_nd'..pn],fb_notedata2[i]);
						end
						
					end
					
					
					
				--end
				
			end
			
			for pn=1,2 do
			
				if table.getn(_G['jug_fb_nd'..pn]) == 0 then
					_G['jug_fb_nd'..pn] = _G['jug_fb_nd'..fb_other(pn)]
				end
				
				jug_fb_ball_current[pn] = _G['jug_fb_nd'..pn][1][1]
					
				table.insert(_G['jug_fb_nd'..pn],{560,0,1});
				
				local tonext = math.max( time_at_beat(jug_fb_ball_current[pn]) - mawaru_songtime, 0) + jug_fb_twindow
				
				--Trace(tonext);
				if pn == 1 and GAMESTATE:GetSongBeat() < 100 then
					local b = _G['jug_fb_ball_p'..pn]
					b:accelerate(tonext)
					b:x((jug_fb_ball_current[pn]-jug_firstbeat)*jug_fb_arrowspacing);
					jug_fb_ball_inner:accelerate(tonext)
					jug_fb_ball_inner:y(jug_fb_bottom);
				end
				
			end
			
			self:sleep(jug_fb_frame);
			self:queuecommand('Update');

		end"
		UpdateCommand="%function(self)
			
			mawaru_songtime = mod_time;
			
			--jug_fb_update(1);
			
			--game logic
			
			for pn=1,2 do
				
				if jug_fb_lockinput[pn]>0 then
					jug_fb_lockinput[pn] = jug_fb_lockinput[pn]-jug_fb_frame
				end
				
				--jug_fb_checkmiss(pn)
				
				--if GAMESTATE:IsPlayerEnabled(pn-1) then
					jug_fb_update(pn);
				--end
			
				local bpn = pn-1;
				for i=1,4 do
				
					local mashcheck = false
					local down = 0;
					for j=1,4 do
						down = down+mawaru_keys[j+(bpn*4)]
					end
					if down > 2 then
						mashcheck = true;
					end
					
					local auto = false
					if PREFSMAN:GetPreference('AutoPlay') > 0 or not FUCK_EXE then auto = true end
					
					----------------------handle button presses-------------------
					if jug_fb_lockinput[pn] <= 0 or auto then
					
						jug_fb_stepmwait[i+bpn*4] = jug_fb_stepmwait[i+bpn*4]-jug_fb_frame;
						
						if mawaru_keys[i+(bpn*4)] == 1 and jug_fb_held[i+(bpn*4)] == 0 or auto then
							
							jug_fb_held[i+(bpn*4)] = 1
							
							if mashcheck and not auto then
								
								--taro_Sound('wrong');
								--MESSAGEMAN:Broadcast('RedFlashP'..pn);
								MESSAGEMAN:Broadcast('BumpNoMashP'..pn);
								
								for k=1,4 do
									jug_fb_stepmwait[k+bpn*4] = 1
								end
								
							elseif jug_fb_stepmwait[i+bpn*4] <= 0 then
								
								if not auto then
									jug_fb_stepmwait[i+bpn*4] = jug_fb_stepdelay;
								end
							
								local thistime = time_at_beat(jug_fb_ball_current[pn])
								
								if not auto then
									jug_fb_stepm[i+bpn*4] = 1;
								end
								
								if _G['jug_fb_nd'..pn][ jug_fb_curjudge[pn] ][2]+1 == i and math.abs(thistime - mawaru_songtime) < jug_fb_twindow
								or auto and _G['jug_fb_nd'..pn][ jug_fb_curjudge[pn] ][2]+1 == i and mawaru_songtime >= thistime+jug_fb_twindow*0.25 then
									--hit!!
									
									if jug_fb_isjudgable(pn,jug_fb_curjudge[pn]) then
										jug_fb_getnextball(pn)
										jug_fb_hitbeat[pn] = jug_fb_ball_current[pn];
										
										MESSAGEMAN:Broadcast('BumpP'..pn..'Hit');
										
										jug_fb_score[pn] = jug_fb_score[pn]+1
										
										if auto then
											jug_fb_stepm[ i+bpn*4 ] = 1
											--Trace('auto boof')
										end
										
										--taro_Sound('push_hit');
										
										jug_fb_ballnext(pn);
									
									end
									
								end
								
								--[[
								for n=1,table.getn(_G['jug_fb_nd'..pn]) do
								
									local thistime = time_at_beat(_G['jug_fb_nd'..pn][ n ][1])
									
									if not jug_fb_isjudgable(pn,n) and _G['jug_fb_nd'..pn][ n ][2]+1 == i and math.abs(thistime - mawaru_songtime) < jug_fb_twindow then
									
										jug_fb_score[pn] = jug_fb_score[pn]-2
										
										jug_fb_mine_aux:finishtweening()
										jug_fb_mine_aux:x(20)
										jug_fb_mine_aux:linear(0.4)
										jug_fb_mine_aux:x(0)
										
										jug_fb_minebeat = _G['jug_fb_nd'..pn][ n ][1];
										
										--jug_fb_score[pn] = jug_fb_score[pn]+1
										
										taro_Sound('mine');
										MESSAGEMAN:Broadcast('Fk_P'..pn..'_W8');
									
									end
									
								end
								]]
								
							end
							
							--Trace('Step'..i);
						end
						
					end
					
					----------------------don't touch this------------------------
					--release all buttons - used for detecting if a button is newly pressed, as opposed to held
					if mawaru_keys[i+(bpn*4)] == 0 then
						jug_fb_held[i+(bpn*4)] = 0
					end
					---------------------end don't touch this----------------------
					
				end
			end
			
			self:sleep(jug_fb_frame);
			if true then
				self:queuecommand('Update');
			end
			
		end"
		KillCommand="%function(self)
			--any cleanup, if necessary
		end"
	/>
	
	<LAER Type="Quad" InitCommand="%function(self) jug_fb_controller = self end" />
	
	
	
	<LAER Type="ActorFrame" InitCommand="%function(self) jug_fb_worldc = self end" OnCommand="x,320;y,240;" ><children>
	<LAER Type="ActorFrame" InitCommand="x,-320;y,-240;" ><children>
	<LAER Type="ActorFrame" InitCommand="%function(self) jug_fb_world_p1 = self end" OnCommand="x,160;y,0;fov,60;"><children>
	
		<Layer File="0 - windeu" />
		<Layer File="0 - windeu" />
		<Layer File="0 - windeu" />
		<Layer File="0 - windeu" />
		<Layer File="0 - windeu" />
		<Layer File="0 - windeu" />
		<Layer File="0 - windeu" />
		<Layer File="0 - windeu" />
		
		<Layer File="1 - oskari" />
		<Layer File="1 - oskari" />
		<Layer File="1 - oskari" />
		<Layer File="1 - oskari" />
		<Layer File="1 - oskari" />
		<Layer File="1 - oskari" />
		<Layer File="1 - oskari" />
		<Layer File="1 - oskari" />
		
		<Layer File="2 - laer" />
		<Layer File="2 - laer" />
		<Layer File="2 - laer" />
		<Layer File="2 - laer" />
		<Layer File="2 - laer" />
		<Layer File="2 - laer" />
		<Layer File="2 - laer" />
		<Layer File="2 - laer" />
		
		<Layer File="3 - condor" />
		<Layer File="3 - condor" />
		<Layer File="3 - condor" />
		<Layer File="3 - condor" />
		<Layer File="3 - condor" />
		<Layer File="3 - condor" />
		<Layer File="3 - condor" />
		<Layer File="3 - condor" />
		
		<Layer File="4 - pandora" />
		<Layer File="4 - pandora" />
		<Layer File="4 - pandora" />
		
		<Layer File="9 - luca" />
		<Layer File="9 - luca" />
		<Layer File="9 - luca" />
		
		<Layer Type="ActorFrame" InitCommand="%function(self) jug_fb_ball_p1 = self; self:basezoomx(640/sw) end" ><children>
			<LAER File="ball" InitCommand="%function(self) jug_fb_ball_inner = self end" OnCommand="x,0;y,-200" />
		</children></Layer>
		
	</children></LAER>
	</children></LAER>
	
	<Layer File="Receptor" OnCommand="x,160-320;y,jug_fb_bottom-10-320+70;zoom,.9;diffusealpha,0;rotationz,90;effectclock,bgm;"
	FrumpieShowLineMessageCommand="diffusealpha,.9;"
	FrumpieFadeLineMessageCommand="linear,120/148;diffusealpha,0;"
	/>
	
	</children></LAER>
	
	
	<!--LAER Type="Quad" OnCommand="x,320;y,jug_fb_bottom;zoomto,640,6;diffuse,1,1,1,1;blend,normal;
	diffuseramp;effectcolor2,1,0,0,1;effectcolor1,1,0,0,.2;effectclock,bgm;effectperiod,0.3;effectdelay,0.7;"
	FrumpieFadeLineMessageCommand="linear,240/195;diffusealpha,0;" /-->
	
	<INPUTGAME
		Type="Quad" OnCommand="hidden,1"
		Debug1MessageCommand="%function(self)
		end"
		
		StepLeftP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 1; end
		end"
		StepP1LeftPressMessageCommand="%function (self)
			mawaru_keys[6-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-1] = 1;
			end
		end"
		StepP1LeftPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 1; end
		end"
		StepDownP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 1; end
		end"
		StepP1DownPressMessageCommand="%function (self)
			mawaru_keys[7-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-1] = 1;
			end
		end"
		StepP1DownPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 1; end
		end"
		StepUpP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 1; end
		end"
		StepP1UpPressMessageCommand="%function (self)
			mawaru_keys[8-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-1] = 1;
			end
		end"
		StepP1UpPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 1; end
		end"
		StepRightP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 1; end
		end"
		StepP1RightPressMessageCommand="%function (self)
			mawaru_keys[9-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-1] = 1;
			end
		end"
		StepP1RightPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 1; end
		end"
		
		LiftLeftP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 0; end
		end"
		StepP1LeftLiftMessageCommand="%function (self)
			mawaru_keys[6-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-1] = 0;
			end
		end"
		StepP1LeftLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 0; end
		end"
		LiftDownP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 0; end
		end"
		StepP1DownLiftMessageCommand="%function (self)
			mawaru_keys[7-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-1] = 0;
			end
		end"
		StepP1DownLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 0; end
		end"
		LiftUpP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 0; end
		end"
		StepP1UpLiftMessageCommand="%function (self)
			mawaru_keys[8-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-1] = 0;
			end
		end"
		StepP1UpLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 0; end
		end"
		LiftRightP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 0; end
		end"
		StepP1RightLiftMessageCommand="%function (self)
			mawaru_keys[9-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-1] = 0;
			end
		end"
		StepP1RightLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 0; end
		end"
		
		StepLeftP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 1; end
		end"
		StepP2LeftPressMessageCommand="%function (self)
			mawaru_keys[6-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-5] = 1;
			end
		end"
		StepP2LeftPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 1; end
		end"
		StepDownP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 1; end
		end"
		StepP2DownPressMessageCommand="%function (self)
			mawaru_keys[7-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-5] = 1;
			end
		end"
		StepP2DownPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 1; end
		end"
		StepUpP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 1; end
		end"
		StepP2UpPressMessageCommand="%function (self)
			mawaru_keys[8-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-5] = 1;
			end
		end"
		StepP2UpPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 1; end
		end"
		StepRightP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 1; end
		end"
		StepP2RightPressMessageCommand="%function (self)
			mawaru_keys[9-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-5] = 1;
			end
		end"
		StepP2RightPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 1; end
		end"
		
		LiftLeftP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 0; end
		end"
		StepP2LeftLiftMessageCommand="%function (self)
			mawaru_keys[6-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-5] = 0;
			end
		end"
		StepP2LeftLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 0; end
		end"
		LiftDownP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 0; end
		end"
		StepP2DownLiftMessageCommand="%function (self)
			mawaru_keys[7-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-5] = 0;
			end
		end"
		StepP2DownLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 0; end
		end"
		LiftUpP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 0; end
		end"
		StepP2UpLiftMessageCommand="%function (self)
			mawaru_keys[8-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-5] = 0;
			end
		end"
		StepP2UpLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 0; end
		end"
		LiftRightP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 0; end
		end"
		StepP2RightLiftMessageCommand="%function (self)
			mawaru_keys[9-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-5] = 0;
			end
		end"
		StepP2RightLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 0; end
		end"
	/>
	
	<LAER Type="Quad" InitCommand="%function(self) jug_fb_scrollspeedmult=self end" OnCommand="hidden,1;x,1;z,0;"/>
	<LAER Type="Quad" InitCommand="%function(self) jug_fb_mine_aux=self end" OnCommand="hidden,1;x,0;"/>
	<LAER Type="Quad" InitCommand="%function(self) jug_fb_wzoom=self end" OnCommand="hidden,1;x,1;"/>
	<LAER Type="Quad" InitCommand="%function(self) jug_fb_wrot=self end" OnCommand="hidden,1;x,0;"/>
	
	<LAER Type="Quad" OnCommand="blend,add;diffuse,1,0,0,0;stretchto,-640,480*0.92,640*3,480*0.92+6;z,-100" FBLineOnMessageCommand="linear,0.9;diffusealpha,1;" />
	
	<ZZZZLAER Type="Quad" OnCommand="x,sw/2;y,sh/2;zoomto,sw,sh;cropright,0.4;faderight,0.5;diffuse,1,0,0,0"
	Fk_P1_W8MessageCommand="%function(self)
		if GAMESTATE:GetSongBeat() > 0 and GAMESTATE:GetSongBeat() < 100 or GAMESTATE:GetSongBeat() > 274 then
			self:finishtweening()
			self:diffusealpha(0.4)
			self:linear(0.3)
			self:diffusealpha(0)
		end
	end" />
	
	<ZZZZLAER Type="Quad" OnCommand="x,sw/2;y,sh/2;zoomto,sw,sh;cropleft,0.4;fadeleft,0.5;diffuse,1,0,0,0"
	Fk_P2_W8MessageCommand="%function(self)
		if GAMESTATE:GetSongBeat() > 0 and GAMESTATE:GetSongBeat() < 100 or GAMESTATE:GetSongBeat() > 274 then
			self:finishtweening()
			self:diffusealpha(0.4)
			self:linear(0.3)
			self:diffusealpha(0)
		end
	end" />
	
</children></GAME>
</children></GAME>