<ActorFrame
InitCommand="%function(self)

	songName = GAMESTATE:GetCurrentSong():GetSongDir();
	
	loot_misswindow = ((137/60)*PREFSMAN:GetPreference('JudgeWindowSecondsBoo'));
	loot_greatwindow = ((137/60)*PREFSMAN:GetPreference('JudgeWindowSecondsGreat'));
	loot_excellentwindow = ((137/60)*PREFSMAN:GetPreference('JudgeWindowSecondsPerfect'));
	loot_fantasticwindow = ((137/60)*PREFSMAN:GetPreference('JudgeWindowSecondsMarvelous'));
	
	loot_bpm = 137
	loot_ratemod = 1;
	loot_dirs = {90,0,180,-90}
	loot_dirnames = {'Left','Down','Up','Right'}
	
	loot_keytimer = {0,0,0,0,0,0,0,0}
	loot_keys = {0,0,0,0,0,0,0,0}
	
	for i=1,8 do
		loot_keytimer[i] = loot_keytimer[i]+0.02;
	end
	
	loot_games_s = {'iidx','jb','mai','chef','alex','zelda','doctor','car'}
	--link, car
	
	loot_autos1 = 1;
	loot_autos2 = 1;
	
	function loot_quantize(obj, b)
		local r = b-math.floor(b)
		if r == 0 then loot_color(obj,4)
		elseif r == 0.5 then loot_color(obj,8)
		elseif (r >= 0.33 and r <= 0.34) or (r >= 0.66 and r <= 0.67) then loot_color(obj,12)
		elseif r == 0.25 or r == 0.75 then loot_color(obj,16)
		elseif (r >= 0.16 and r <= 0.17) or (r >= 0.83 and r <= 0.84) then loot_color(obj,12)
		elseif r == 0.125 or r == 0.375 or r == 0.625 or r == 0.875 then loot_color(obj,32)
		else loot_color(obj,64) end
	end
   
	function loot_color(obj, n)
		if n == 4 then obj:diffuse(1,0.4,0.3,1); end
		if n == 8 then obj:diffuse(0.3,0.7,1,1); end
		if n == 12 then obj:diffuse(1,0.4,1,1); end
		if n == 16 then obj:diffuse(0.3,1,0.4,1); end
		if n == 32 then obj:diffuse(1,0.8,0.3,1); end
		if n == 64 then obj:diffuse(0.3,1,0.7,1); end
	end
	
	function loot_posneg(val)
		return val/math.abs(val)
	end
	
	function loot_angwrap(val)
		while val<0 do
			val = val+(math.pi*2)
		end
		while val>math.pi*2 do
			val = val-(math.pi*2)
		end
		return val
	end
  
	function loot_spawn_noteflash(col,pn,t)
		loot_iidx_spawn_noteflash(col);
		loot_sdvx_spawn_noteflash(col,pn,t);
		loot_popn_spawn_noteflash(col,pn,t);
		loot_tnk_spawn_noteflash(col,t);
		loot_mai_spawn_noteflash(col);
	end
	
	loot_topgame = 0;
	function loot_setnewgame(game,leadin,wait)
		loot_topgame = loot_topgame+0.001;
		
		if not leadin then leadin = 0 end
		if not wait then wait = 0 end
		if not game then game = 1 end
		
		local str = ''
		
		if type(game) == 'string' then str = game end
		if type(game) == 'number' then str = loot_games_s[game] end
		
		if not _G['loot_'..str..'_alphac'] then return false end
		
		_G['loot_'..str..'_alphac']:finishtweening();
		_G['loot_'..str..'_alphac']:x(0);
		_G['loot_'..str..'_alphac']:decelerate(leadin/2);
		_G['loot_'..str..'_alphac']:x(0.5);
		_G['loot_'..str..'_alphac']:sleep(wait);
		_G['loot_'..str..'_alphac']:accelerate(leadin/2);
		_G['loot_'..str..'_alphac']:x(1);
		
		_G['loot_'..str..'_alpha']:z(loot_topgame);
		
		return true;
		
	end
	
	function loot_quickchange(game,leadin)
		loot_show(game,leadin,0);
		loot_hideallbut(game,0,leadin);
	end
	
	function loot_show(game,leadin,delay)
		loot_show_or_hide(game,leadin,1,true,delay)
	end
	function loot_hide(game,leadin,delay)
		loot_show_or_hide(game,leadin,0,true,delay)
	end
	function loot_hideallbut(game,leadin,delay)
		loot_show_or_hide(game,leadin,0,false,delay)
	end
	
	function loot_show_or_hide(game,leadin,alpha,negative,delay)
	
		local str = ''
		local blacklist = {}
		if not leadin then leadin = 0 end
		if not game then game = 1 end
		if not delay then delay = 0 end
		if not negative then negative = false end
		
		if type(game) == 'string' then table.insert(blacklist,game) end
		if type(game) == 'number' then table.insert(blacklist,loot_games_s[game]) end
		if type(game) == 'table' then
			for i=1,table.getn(game) do
				if type(game[i]) == 'string' then table.insert(blacklist,game[i]) end
				if type(game[i]) == 'number' then table.insert(blacklist,loot_games_s[ game[i] ]) end
			end
		end
	
		for i=1,table.getn(loot_games_s) do
			local doThisOne = true
			for j=1,table.getn(blacklist) do
				if blacklist[j] == loot_games_s[i] then
					doThisOne = false;
				end
			end
			if doThisOne ~= negative then
				_G['loot_'..loot_games_s[i]..'_alphac']:stoptweening();
				_G['loot_'..loot_games_s[i]..'_alphac']:sleep(delay);
				_G['loot_'..loot_games_s[i]..'_alphac']:linear(leadin);
				_G['loot_'..loot_games_s[i]..'_alphac']:x(alpha);
				if alpha > 0 then
					loot_topgame = loot_topgame+0.001
					_G['loot_'..loot_games_s[i]..'_alpha']:z(loot_topgame);
				end
			end
		end
		
		--[[
		loot_gamebroadcast:sleep(delay+leadin+0.05)
		loot_gamebroadcast:queuecommand('List')
		]]
		
	end
	
	sw = SCREEN_WIDTH
	sh = SCREEN_HEIGHT --shortcuts
	
	function Plr(pn)
		return _G['P'..pn]
	end
	function GetJud(pn)
		return _G['jud'..pn]
	end
	function GetCom(pn)
		return _G['com'..pn]
	end
	
	function mod_do(str,pn)
		if pn then
			GAMESTATE:ApplyGameCommand('mod,'..str,pn)
		else
			GAMESTATE:ApplyGameCommand('mod,'..str)
		end
	end
	
	function taro_Sound(str)
		local met = GAMESTATE:GetCurrentSong():GetSongDir();
		SOUND:PlayOnce(met..'lua/'..str..'.ogg');
	end
	
	math.clamp = function(val,min,max)
		if val < min then return min end
		if val > max then return max end
		return val
	end
	
end"
><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,1000"
	/>
	
	<Layer File="modhelpers.xml" />
	<Layer File="easing.xml" />
	<Layer File="spellcard.xml" />
	
	<CODE File="../loot_minigame_notedata.xml" />
	<CODE File="../loot_minigame_notedata2.xml" />
	
	<Layer
		Type="Quad"
		OnCommand="hidden,1"
		InitCommand="%function(self)
		
			checked = false; P1=nil;P2=nil;P3=nil;P4=nil;jud1=nil;com1=nil;jud2=nil;com2=nil;jud3=nil;com3=nil;
			
			slumpo = false
			for pn=1,2 do
				if GAMESTATE:IsPlayerEnabled(pn-1) then
					if GAMESTATE:GetCurrentSteps(pn-1):GetDifficulty() == 5 then
						slumpo = true
					end
				end
			end
			
			for i=1,table.getn(loot_minigame_notedata2) do
				table.insert(loot_minigame_notedata,loot_minigame_notedata2[i])
			end
		
			---------------------------------------------------------
			---------DOCUMENTATION-----------------------------------
			---------------------------------------------------------
			
			--function perframe( beat, endBeat )
				--return true if the current beat is between 'beat' and 'endBeat'
			
			--function mod_shader(beat,key,which)
				--turn on shader key at specified beat (up to 10 keys available, defined by 'which' = 0-9
				
			--function mod_insert(beat,len,mod,len_or_end,pn)
				--insert mod into beat mods table
			--function mod_insert2(time,len,mod,len_or_end,pn)
				--insert mod into time mods table
				
			--function mod_message(beat,msg,persistent)
				--insert something into the actions table.
				--msg can also be a function. If string, a message gets broadcast at that beat
				--if 'persistent' is true, message will run even if editor starts at a beat past it
				
			--function mod_blacklist(t,n)
				--check if number n occurs in table t
				--useful for doing 'every beat EXCEPT the contents of t'
				
			--function simple_m0d(beat,strength,mult,mod)
			--function simple_m0d2(beat,strength,mult,mod,pn)
			--function simple_m0d3(beat,strength,duration,bpm,mod,pn)
				--activate mods at specific beat but also deactivate them
				
			--function mod_wiggle(beat,num,div,amt,speed,mod,pn,first)
				--alternates a mod back and forth before resetting to 0
				
			--function mod_springt(time,strength,dur,mod,pn)
				--time-based per-frame alternating mod that decreases based on how much time is left.
					--think doorstopper
			
			--function mod_springt2(time,strength,dur,mod,pn)
				--time-based per-frame alternating mod
			
			--function mod_onebeat(beat,strength,pn)
				--turns on beat for the beat specified, at the desired strength	
			
			--function switcheroo_add(beat,which,speed,len,pn)
				--adds a column swap at the desired beat
			--[[	switcheroos = {normal = {0,0}, ldur = {0,0}, reset = {0,0},
					flip = {100,0}, rudl = {100,0}, invert = {0,100}, dlru = {0,100},
					ludr = {25,-75}, rdul = {75,75}, drlu = {25,125}, ulrd = {75,-125}, urld = {100,-100}}
			]]
			
			--use a variable called 'switcheroo_width' to change how much space is between each column
			--e.g. switcheroo_width = 2 for ayakashi
			
			--function mod_sugarkiller(beat,duration,speed,minstealth,maxstealth,pn)
				--portable version of the effect from sugarkill X
				
			--function doSpline(spd, axis, path, col)
				--draws spline 'path' in specified axis, for specific col. Offsets are *10000, but positions use *spd
				
			--function doSplineAll(spd, axis, path)
				--same as above, but for all columns
				--(faster performance than using doSpline 4 times due to more efficient concat)
			
			--function mindf_rotateAndCounter(xDegrees, yDegrees, zDegrees, player)
				--counteract euler rotations after rotating player in multiple axes, using a TON of math.
			
			
			---------------------------------------------------------
			--------END DOCUMENTATION--------------------------------
			---------------------------------------------------------
			
			local m = mod_insert
			local m2 = mod_message
			local me = mod_ease
			
			
			local l = 'len'
			local e = 'end'
			
			
			
			
			
			
			
			init_modsp1 = '';
			init_modsp2 = '';
			
			mod_plr = {};
			
			mod_firstSeenBeat = GAMESTATE:GetSongBeat(); --necessary to prevent long freezes
			
			
			
			
			
			
			
			
			
			
			
---------------------------------------------------------------------------------------
----------------------Begin tables 'n stuff--------------------------------------------
---------------------------------------------------------------------------------------

			--beat based mods
			--{beat_start, beat_end, mods, len_or_end, player_number}
			mods = {
				{0,9999,'*2 2x, *1000 no beat, *10000 -1000000 cover','end'},
			}
			
			--switcheroos = {{0,0},{100,0},{0,100},{25,-75},{75,75},{25,125},{75,-125},{100,-100}}
			
			
			
			
			
			
			
			--time based mods
			mod_time = 0;
			--{time_start, time_end, mods, len_or_end, player_number}
			mods2 = {
				--{0,200.345,'3x','end',1},
			}
			
			
			
			
			--this is both a message broadcaster and a function runner
			--if you put {beat,'String'}, then 'String' is broadcast as a message on that beat
			--if you put {beat,function() somecode end}, then function() is run at that beat
			--see example on beat 32
			
			curaction = 1;
			--{beat,thing,persists}
			mod_actions = {
			
			
				
			}
			
			
			
			
			
			
			--beat-based ease mods
			--{time_start, time_end, mod_start, mod_end, mod, len_or_end, ease_type, player_number, sustaintime, optional_param1, optional_param2}
			--valid ease types are:
				--linear
				--inQuad    outQuad    inOutQuad    outInQuad
				--inCubic   outCubic   inOutCubic   outInCubic
				--inQuart   outQuart   inOutQuart   outInQuart
				--inQuint   outQuint   inOutQuint   outInQuint
				--inSine    outSine    inOutSine    outInSine
				--inExpo    outExpo    inOutExpo    outInExpo
				--inCirc    outCirc    inOutCirc    outInCirc
				--inElastic outElastic inOutElastic outInElastic    --can take 2 optional parameters - amplitude & period
				--inBack    outBack    inOutBack    outInBack       --can take 1 optional parameter  - spring amount
				--inBounce  outBounce  inOutBounce  outInBounce
				
			mods_ease = {
				-- EXAMPLE TWEEN: from beat 0 to 4, make rotationz go from 360 to 0 with the inOutBack tween
				--{0,4,360,0,'rotationz','end',inOutBack},
			}
			
			
			
			
			mod_perframes = {
			}
			
			function mpf(s,e,f)
				table.insert(mod_perframes,{s,e,f})
			end
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			m2(4,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:decelerate(60/137)
						a:x(sw/2 + 160*(pn*2-3))
					end
				end
			end)
			m2(5,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:x(sw/2 + 160*(pn*2-3))
					end
				end
			end,true)
			
			--begin mods
			
			--me(4,2,0,100,'reverse',l,outElastic);
			
			for i=0,6 do
				
				me(4+i*4,.75,0,100,'mini',l,outBack)
				me(4.75+i*4,.75,100,-100,'mini',l,outBack)
				me(5.5+i*4,.5,-100,0,'mini',l,outBack)
				
				me(4+i*4,.75,2,4,'xmod',l,outBack)
				me(4.75+i*4,.75,4,1,'xmod',l,outBack)
				me(5.5+i*4,.5,1,2,'xmod',l,outBack)
				
				me(4+i*4,.75,0,100,'invert',l,outBack)
				me(4.75+i*4,.75,100,0,'invert',l,outBack)
				
				me(4.75+i*4,.75,0,80,'flip',l,outBack)
				me(5.5+i*4,.5,80,0,'flip',l,outBack)
				
				if slumpo or i < 4 then
					me(6+i*4,.5,0,100,'invert',l,outCubic);
					me(6.5+i*4,.5,100,0,'invert',l,outCubic);
					me(7+i*4,.5,0,-100,'invert',l,outCubic);
					me(7.5+i*4,.5,-100,0,'invert',l,outCubic);
					
					me(6+i*4,.5,0,0,'flip',l,outCubic);
					me(6.5+i*4,.5,0,100,'flip',l,outCubic);
					me(7+i*4,.5,100,100,'flip',l,outCubic);
					me(7.5+i*4,.5,100,0,'flip',l,outCubic);
				else
					local bop = 2
					if math.mod(i,2) == 0 then bop = 3 end
					for j=0,bop do
						simple_m0d2(6+i*4+j*0.5-.05,70,.15,'brake');
					end
				end
				
				--[[
				m2(6+i*4,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:decelerate(30/137)
							a:x(sw/2 + 160*(pn*2-3))
							a:skewx(.2)
							a:decelerate(30/137)
							a:skewx(-.2)
							a:decelerate(30/137)
							a:skewx(.2)
							a:decelerate(30/137)
							a:skewx(0)
						end
					end
				end)
				]]
				
			end
			
			me(32,.5,0,100,'mini',l,outBack)
			me(32.5,.5,100,-100,'mini',l,outBack,nil,1.5)
			me(34.5,.5,-100,-150,'mini',l,outBack)
			me(35,.5,-150,-100,'mini',l,outBack)
			me(35.5,.5,-100,-50,'mini',l,outBack)
			
			me(32,.5,2,4,'xmod',l,outBack)
			me(32.5,.5,4,1,'xmod',l,outBack,nil,1.5)
			me(34.5,1.5,1,2,'xmod',l,outBack)
			
			me(32.5,.5,0,10,'flip',l,outBack,nil,1.5)
			me(34.5,.5,10,0,'flip',l,linear)
			
			for i=0,3 do
				me(32+i,.5,0,90,'invert',l,outCubic)
				me(32.5+i,.5,90,0,'invert',l,outCubic)
			end
			
			m2(34.5,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:decelerate(30/137)
						a:skewx(.3)
						a:decelerate(30/137)
						a:skewx(-.3)
						a:decelerate(30/137)
						a:skewx(0)
					end
				end
			end)
			
			for i=0,7 do
				if math.mod(i,4) ~= 3 then
					if i == 0 then
						me(36+i*2,.75,-50,100,'mini',l,outBack)
					else
						me(36+i*2,.75,0,100,'mini',l,outBack)
					end
					me(36.75+i*2,.75,100,-100,'mini',l,outBack)
					me(37.5+i*2,.5,-100,0,'mini',l,outBack)
					
					me(36+i*2,.75,0,100,'invert',l,outBack)
					me(36.75+i*2,.75,100,0,'invert',l,outBack)
					
					me(36.75+i*2,.75,0,80,'flip',l,outBack)
					me(37.5+i*2,.5,80,0,'flip',l,outBack)
					
					me(36+i*2,.75,2,4,'xmod',l,outBack)
					me(36.75+i*2,.75,4,1,'xmod',l,outBack)
					me(37.5+i*2,.5,1,2,'xmod',l,outBack)
				end
			end
			
			local fluc = 1
			for i=20,51 do
				--simple_m0d(i,50*fluc,.15,'dizzy');
				simple_m0d(i,50,.1,'stealth');
				local f = fluc
				--[[
				m2(i,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:skewx(.3*f)
							a:decelerate(30/137)
							a:skewx(0)
						end
					end
				end)
				]]
				fluc = fluc*-1
			end
			
			for i=36,51 do
				local f = fluc
				local j = i
				m2(i,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:stoptweening()
							a:sleep(0)
							a:rotationz(10*f)
							a:rotationx(20)
							a:zoomz(2 + 2*((j-36)/16))
							a:decelerate(50/137)
							a:rotationz(0)
							a:rotationx(0)
							a:zoomz(1)
						end
					end
				end)
				fluc = fluc*-1
			end
			
			for i=52,59.5,0.5 do
				local f = fluc
				local j = i
				m2(i,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:stoptweening()
							a:sleep(0)
							a:rotationz(10*f)
							a:rotationx(20)
							a:zoomz(4)
							a:decelerate(25/137)
							a:rotationz(0)
							a:rotationx(0)
							a:zoomz(1)
						end
					end
				end)
				fluc = fluc*-1
			end
			
			me(52,8,0,150,'hallway',l,linear)
			me(60,4,150,0,'hallway',l,linear)
			
			me(60,2,0,200,'tornado',l,linear)
			me(62,2,200,0,'tornado',l,linear)
			
			for i=60,63.75,0.25 do
				local f = fluc
				local j = i
				m2(i,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:stoptweening()
							a:sleep(0)
							a:rotationz(10*f)
							a:rotationx(20)
							a:zoomz(4)
							a:decelerate(12.5/137)
							a:rotationz(0)
							a:rotationx(0)
							a:zoomz(1)
						end
					end
				end)
				fluc = fluc*-1
			end
			
			for j=0,2 do
				simple_m0d2(42+j*0.5-.05,70,.15,'brake');
			end
			
			for j=0,2 do
				m2(64+j,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:sleep(0)
							a:rotationz(-20)
							a:zoomx(1.2)
							a:zoomy(0.9)
							a:addy(40)
							a:decelerate(50/137)
							a:rotationz(0)
							a:zoom(1)
							a:addy(-40)
						end
					end
				end)
			end
			
			m(67-.1,1,'*10 invert',l);
			m(67.5-.1,1,'*10 no invert',l);
			
			
			
			
			
			
			
			
			
			
			
			m2(0,function()
				rb_discord:x(sw/2);
				rb_discord:y(sh+100);
			end,true)
			m2(51,function()
				rb_discord:zoom(1.2)
				rb_discord:x(sw/2);
				rb_discord:y(sh);
				rb_disco_animating = true
			end)
			m2(60,function()
				rb_discord:decelerate(240/137)
				rb_discord:zoom(0.75)
				rb_discord:y(sh*0.94);
			end)
			m2(64,function()
				rb_discord:zoom(0.75)
				rb_discord:y(sh*0.94);
			end,true)
			m2(66.5,function()
				MESSAGEMAN:Broadcast('DiscoToShuffle');
			end,true)
			
			for i=0,3 do
				m2(71+8*i,function()
					rb_discord:rotationy(0)
					rb_discord:linear(60/137)
					rb_discord:rotationy(180)
					rb_discord:sleep(0)
					rb_discord:zoomx(1.3)
					rb_discord:zoomy(.6)
					rb_discord:decelerate(60/137)
					rb_discord:zoom(.75)
					rb_discord_inner:decelerate(30/137)
					rb_discord_inner:addy(-50)
					rb_discord_inner:accelerate(30/137)
					rb_discord_inner:addy(50)
					rb_discord_inner:sleep(0)
					rb_discord_inner:decelerate(60/137)
				end)
				m2(71+4+8*i,function()
					rb_discord:rotationy(-180)
					rb_discord:linear(60/137)
					rb_discord:rotationy(0)
					rb_discord:sleep(0)
					rb_discord:zoomx(1.3)
					rb_discord:zoomy(.6)
					rb_discord:decelerate(60/137)
					rb_discord:zoom(.75)
					rb_discord_inner:decelerate(30/137)
					rb_discord_inner:addy(-50)
					rb_discord_inner:accelerate(30/137)
					rb_discord_inner:addy(50)
					rb_discord_inner:sleep(0)
					rb_discord_inner:decelerate(60/137)
				end)
				
			end
			
			local pf = 1.3
			for i=0,7 do
				
				local p = pf
				
				simple_m0d2(68+4*i,200,1,'tornado')
				
				if i ~= 4 and i ~= 5 then
					mod_wiggle(69+4*i,6,4,200,2,'drunk')
				else
					m(69+4*i+0.0,1,'*5 invert',l)
					m(69+4*i+0.5,1,'*5 no invert',l)
					m(69+4*i+1.0,1,'*5 invert',l)
					m(69+4*i+1.5,1,'*5 no invert',l)
				end
				
				m2(68+4*i,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:stoptweening()
							a:sleep(0)
							a:linear(60/137)
							a:vibrate()
							a:effectmagnitude(30,30,0)
							a:skewx(-1*p)
							--
							a:decelerate(40/137)
							a:skewx(-.666*p)
							a:sleep(20/137)
							a:decelerate(40/137)
							a:skewx(-.333*p)
							a:sleep(20/137)
							a:decelerate(40/137)
							a:skewx(0)
						end
					end
					
					rb_bg:stoptweening()
					rb_bg:sleep(0)
					rb_bg:vibrate()
					rb_bg:effectmagnitude(30,30,0)
					rb_bg:linear(60/137)
					rb_bg:skewx(-1*p)
					--
					rb_bg:decelerate(40/137)
					rb_bg:skewx(-.666*p)
					rb_bg:sleep(20/137)
					rb_bg:decelerate(40/137)
					rb_bg:skewx(-.333*p)
					rb_bg:sleep(20/137)
					rb_bg:decelerate(40/137)
					rb_bg:skewx(0)
					
				end)
			
				m2(69+4*i,function()
					rb_bg:stopeffect()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:stopeffect()
						end
					end
				end)
				
				pf = pf*-1
				
			end
			
			for i=0,7 do
				m2(100+i,function()
					rb_bg:finishtweening()
					rb_bg:decelerate(60/137)
					rb_bg:addx(64)
				end)
				m2(108+i,function()
					rb_bg:finishtweening()
					rb_bg:decelerate(60/137)
					rb_bg:addx(-64)
				end)
			end
			
			m2(107,function()
				rb_discord:rotationy(0)
				rb_discord:linear(60/137)
				rb_discord:rotationy(180)
				rb_discord:sleep(0)
				rb_discord:zoomx(1.3)
				rb_discord:zoomy(.6)
				rb_discord:decelerate(60/137)
				rb_discord:zoom(.75)
				rb_discord_inner:decelerate(30/137)
				rb_discord_inner:addy(-50)
				rb_discord_inner:accelerate(30/137)
				rb_discord_inner:addy(50)
				rb_discord_inner:sleep(0)
				rb_discord_inner:decelerate(60/137)
			end)
			m2(115,function()
				rb_discord:rotationy(-180)
				rb_discord:linear(60/137)
				rb_discord:rotationy(0)
				rb_discord:sleep(0)
				rb_discord:zoomx(1.3)
				rb_discord:zoomy(.6)
				rb_discord:decelerate(60/137)
				rb_discord:zoom(.75)
				rb_discord_inner:decelerate(30/137)
				rb_discord_inner:addy(-50)
				rb_discord_inner:accelerate(30/137)
				rb_discord_inner:addy(50)
				rb_discord_inner:sleep(0)
				rb_discord_inner:decelerate(60/137)
			end)
			
			mod_onebeat(99,1000)
			
			simple_m0d2(103-.1,1000,.3,'bumpy')
			simple_m0d2(103.5-.1,500,.5,'drunk')
			
			mod_wiggle(107,4,4,200,2,'drunk')
			
			simple_m0d2(111-.1,1000,.3,'bumpy')
			simple_m0d2(111.5-.1,500,.5,'drunk')
			
			mod_wiggle(113,6,4,200,2,'drunk')
			mod_wiggle(119,4,4,200,2,'drunk')
			mod_wiggle(123,4,4,200,2,'drunk')
			
			m2(100,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:effectoffset(0.3)
						a:pulse()
						a:effectclock('bgm')
						a:effectperiod(0.6)
						a:effectdelay(0.4)
						a:effectmagnitude(1,1,1)
						a:effectcolor2(1.1,.9,1,1)
						a:effectcolor1(.9,1.2,1,1)
					end
				end
			end)
			
			mpf(100,115,function(beat)
				local beat2 = beat
				if math.mod(beat,4) > 3 then beat2 = 3.001 end
				if math.mod(beat+4,8) > 4 then beat2 = beat2-1 end
				
				local off = 0
				if beat > 108 then off = math.pi end
				
				local alt = (30*math.sin(beat2*math.pi + math.pi + off))
				local rev = math.min(30*math.sin(beat2*math.pi + off),0)
				local pingpong = beat2-math.floor(beat2)
				if math.mod(beat2,2)>1 then
					pingpong = 1-pingpong
				end
				local inv = 100*pingpong
				mod_do('*10000 '..alt..' alternate, *10000 '..rev..' reverse, *10000 '..inv..' invert')
			end)
			
			me(115,1,100,0,'invert',l,linear)
			
			mpf(115,116,function(beat)
				
				local pos = beat-115
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:skewx(0.8*math.sin(pos*2*math.pi))
						a:rotationz(-15*math.sin(pos*2*math.pi))
						a:zoomy(1-0.3*math.sin(pos*4*math.pi))
					end
				end
				
			end)
			
			m2(116,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:skewx(0)
						a:rotationz(0)
						a:zoomy(1)
					end
				end
			end)
			
			function discord_turn(b,dir)
				m2(b,function()
					if dir == 1 then
						rb_discord:rotationy(0)
						rb_discord:linear(60/137)
						rb_discord:rotationy(180)
					else
						rb_discord:rotationy(-180)
						rb_discord:linear(60/137)
						rb_discord:rotationy(0)
					end
					rb_discord:sleep(0)
					rb_discord:zoomx(1.3)
					rb_discord:zoomy(.6)
					rb_discord:decelerate(60/137)
					rb_discord:zoom(.75)
					rb_discord_inner:decelerate(30/137)
					rb_discord_inner:addy(-50)
					rb_discord_inner:accelerate(30/137)
					rb_discord_inner:addy(50)
					rb_discord_inner:sleep(0)
					rb_discord_inner:decelerate(60/137)
				end)
			end
			
			function rb_bweew(beat,dir)
				m2(beat,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:stoptweening()
							a:sleep(0)
							a:zoomy(1)
							a:skewx(0)
							a:linear(60/137)
							a:vibrate()
							a:effectmagnitude(30,30,0)
							a:skewx(-1*dir)
							--
							a:decelerate(40/137)
							a:skewx(-.666*dir)
							a:sleep(20/137)
							a:decelerate(40/137)
							a:skewx(-.333*dir)
							a:sleep(20/137)
							a:decelerate(40/137)
							a:skewx(0)
						end
					end
					
					rb_bg:stoptweening()
					rb_bg:sleep(0)
					rb_bg:vibrate()
					rb_bg:effectmagnitude(30,30,0)
					rb_bg:linear(60/137)
					rb_bg:skewx(-1*dir)
					--
					rb_bg:decelerate(40/137)
					rb_bg:skewx(-.666*dir)
					rb_bg:sleep(20/137)
					rb_bg:decelerate(40/137)
					rb_bg:skewx(-.333*dir)
					rb_bg:sleep(20/137)
					rb_bg:decelerate(40/137)
					rb_bg:skewx(0)
					
				end)
				
				m2(beat+1,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:stopeffect()
						end
					end
					rb_bg:stopeffect()
				end)
			end
			
			function rb_wewe(b)
				m(b+0.0,1,'*5 invert',l)
				m(b+0.5,1,'*5 no invert',l)
				m(b+1.0,1,'*5 invert',l)
				m(b+1.5,1,'*5 no invert',l)
			end
			
			function rb_wawe(b)
				simple_m0d2(b-.1,800,.3,'bumpy')
				simple_m0d2(b+.5-.1,-60,.4,'tornado')
			end
			function rb_wawa(b)
				mod_wiggle(b,4,4,150,1.5,'drunk')
			end
			
			rb_bweew(116,1)
			rb_wewe(117)
			discord_turn(119,1)
			rb_bweew(120,-1)
			rb_wewe(121)
			discord_turn(123,-1)
			
			rb_wawe(75)
			rb_wawa(91)
			
			rb_wawe(127)
			
			m2(124,function()
				for i=0,6 do
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:sleep(0)
							a:decelerate(30/137)
							a:addx(64 * (sw/640))
							a:sleep(30/137)
						end
					end
					rb_bg:sleep(0)
					rb_bg:decelerate(30/137)
					rb_bg:addx(64*(sw/640))
					rb_bg:sleep(30/137)
				end
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:decelerate(60/137)
						a:x( sw/2 + sw + 160*(pn*2-3) )
					end
				end
				rb_bg:sleep(0)
				rb_bg:decelerate(60/137)
				rb_bg:x( sw/2 + sw )
			end)
			
			m2(132,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						rb_bg:finishtweening()
						a:sleep(0)
						a:x( sw/2 + sw + 160*(pn*2-3) )
						a:sleep(0.1)
						a:x( sw/2 + 160*(pn*2-3) )
						a:z(2)
					end
					local a = GetJud(pn)
					if a then
						a:bob()
						a:effectperiod(100000)
						a:effectoffset(25000)
						a:effectmagnitude(30*(pn*2-3),180,0)
					end
					local a = GetCom(pn)
					if a then
						a:bob()
						a:effectperiod(100000)
						a:effectoffset(25000)
						a:effectmagnitude(30*(pn*2-3),160,0)
					end
				end
				rb_bg:finishtweening()
				rb_bg:sleep(0)
				rb_bg:x( sw/2 + sw )
			end,true)
			
			m(123.5,131.5,'*1000 150 beat',e)
			
			m2(131,function()
				rb_discord:playcommand('Head2')
				rb_disco_box:x(-140)
				rb_disco_box:y(-50)
				rb_disco_box:zoom(2)
			end,true)
			m2(129.6,function()
				MESSAGEMAN:Broadcast('DiscoGetBox');
			end,true)
			
			m2(128,function()
				rb_discord:linear(180/137)
				rb_discord:y(sh+300)
				rb_discord:decelerate(60/137)
				rb_discord:y(sh+320)
				rb_discord:x(sw/2 + 120)
				rb_discord:zoom(1.1)
			end)
			m2(132,function()
				rb_discord:y(sh+320)
				rb_discord:x(sw/2 + 120)
				rb_discord:zoom(1.1)
			end,true)
			
			
			
			
			
			m2(132,function()
				
				loot_iidx_alphac:x(1);
				
				loot_show('iidx');
				loot_iidx:x(SCREEN_CENTER_X);
				loot_iidx:y(SCREEN_BOTTOM-10);
				loot_iidx:zoom(0.1);
				
				loot_iidx:vibrate()
				loot_iidx:effectmagnitude(20,20,0)
				loot_iidx:decelerate(120/137)
				loot_iidx:x(SCREEN_CENTER_X-80);
				loot_iidx:y(sh/2)
				loot_iidx:zoom(.6);
				loot_iidx:rotationz(-10)
				
				loot_iidx:sleep(5*60/137)
				loot_iidx:accelerate(120/137)
				loot_iidx:x(sw/2)
				loot_iidx:y(sh-10)
				loot_iidx:rotationz(0)
				loot_iidx:zoom(.1)
				
			end)
			
			m2(133,function()
				loot_iidx:stopeffect();
			end)
			
			m2(140,function()
			
				loot_mai_alphac:x(1);
				
				loot_show('mai');
				loot_mai:x(SCREEN_CENTER_X);
				loot_mai:y(SCREEN_BOTTOM-10);
				loot_mai:zoom(0.1);
				
				loot_mai:vibrate()
				loot_mai:effectmagnitude(20,20,0)
				loot_mai:decelerate(120/137)
				loot_mai:x(SCREEN_CENTER_X+80);
				loot_mai:y(sh/2)
				loot_mai:zoom(.8);
				loot_mai:rotationz(10)
				
				loot_mai:sleep(5*60/137)
				loot_mai:accelerate(120/137)
				loot_mai:x(sw/2)
				loot_mai:y(sh-10)
				loot_mai:rotationz(0)
				loot_mai:zoom(.1)
				
			end)
			
			m2(141,function()
				loot_hide('iidx');
				loot_mai:stopeffect();
			end)
			
			m2(148,function()
			
				loot_chef_alphac:x(1);
				
				loot_show('chef');
				loot_chef:x(SCREEN_CENTER_X);
				loot_chef:y(SCREEN_BOTTOM-10);
				loot_chef:zoom(0.1);
				
				loot_chef:vibrate()
				loot_chef:effectmagnitude(20,20,0)
				loot_chef:decelerate(120/137)
				loot_chef:x(SCREEN_CENTER_X-30);
				loot_chef:y(sh/2)
				loot_chef:zoom(.7);
				loot_chef:rotationz(-8)
				
				loot_chef:sleep(5*60/137)
				loot_chef:accelerate(120/137)
				loot_chef:x(sw/2)
				loot_chef:y(sh-10)
				loot_chef:rotationz(0)
				loot_chef:zoom(.1)
				
			end)
			
			m2(149,function()
				loot_hide('mai');
				loot_chef:stopeffect();
			end)
			
			m2(156,function()
			
				loot_doctor_alphac:x(1);
				
				loot_show('doctor');
				loot_doctor:x(SCREEN_CENTER_X);
				loot_doctor:y(SCREEN_BOTTOM-10);
				loot_doctor:zoom(0.1);
				
				loot_doctor:decelerate(120/137)
				loot_doctor:x(SCREEN_CENTER_X+10);
				loot_doctor:y(sh/2)
				loot_doctor:zoom(.7);
				loot_doctor:rotationz(8)
				
				loot_doctor:sleep(5*60/137)
				loot_doctor:accelerate(120/137)
				loot_doctor:x(sw/2)
				loot_doctor:y(sh-10)
				loot_doctor:rotationz(0)
				loot_doctor:zoom(.1)
				
				--[[
				loot_doctor:decelerate(120/137)
				loot_doctor:x(sw/2);
				loot_doctor:y(sh/2)
				loot_doctor:zoom(1);
				loot_doctor:rotationz(0)
				]]
			end)
			
			m2(157,function()
				loot_hide('chef');
				loot_doctor:stopeffect();
			end)
			
			m2(160,'MawaRightP1');
			m2(170,'MawaResetFace');
			
			local bad_cycle = {'iidx','mai','alex','chef','jb','doctor'}
			
			function loot_send(beat,game,dur)
				m2(beat,function()
					_G['loot_'..game..'_sendpos']:finishtweening()
					_G['loot_'..game..'_sendpos']:x(0)
					_G['loot_'..game..'_sendpos']:linear(dur*60/137)
					_G['loot_'..game..'_sendpos']:x(1)
				end)
			end
			
			loot_send(161,'iidx',8)
			loot_send(164,'mai',8)
			loot_send(168,'alex',8)
			loot_send(172,'chef',8)
			loot_send(176,'iidx',8)
			loot_send(180,'mai',6)
			loot_send(182,'chef',6)
			loot_send(184,'iidx',6)
			loot_send(186,'jb',5)
			loot_send(188,'doctor',4)
			loot_send(189,'mai',3.5)
			loot_send(190,'chef',3)
			
			mpf(160,194,function(beat)
				
				local beat2 = beat
				
				local extra = 1
				
				if beat > 180 and beat < 188 then
					extra = 1+(beat-180)/8
					--beat2 = beat - (180)
					beat2 = beat/8
				elseif beat >=188 then
					beat2 = beat-8
					extra = 2
				end
				
				local scale = 1;
				
				if beat > 188 and beat < 192 then
					scale = 1-inQuart((beat-188)/4,0,1,1)
				elseif beat >= 192 then 
					scale = 0
				end
				
				local m = 5
				if beat > 168 then m = 6 end
				
				for i=1,m do
					local beatfrac = _G['loot_'..bad_cycle[i]..'_sendpos']:GetX()
					
					local zm = 0.1
					local y = sh-10
					local x = sw/2
					
					if beatfrac >= 0 and beatfrac < 0.4 then
						zm = 0.1+0.5*inOutQuart(beatfrac/0.4,0,1,1)*scale
					elseif beatfrac >= 0.4 and beatfrac < 0.6 then
						zm = 0.1+0.5*scale
					elseif beatfrac >= 0.6 and beatfrac <= 1 then
						zm = 0.1+(0.5-0.5*inOutQuart((beatfrac-0.6)/0.4,0,1,1))*scale
					else
						zm = 0.1
					end
					
					--zm = math.clamp(zm,0.1,0.6)
					
					if beatfrac < 0.5 then
						y = sh - 10 - ((sh/2 + 50) * outQuad(beatfrac/0.5,0,1,1))*scale
					elseif beatfrac >= 0.5 and beatfrac < 1 then
						y = sh - 10 - (sh/2 + 50)*scale + (sh/2 + 80) * inQuad((beatfrac-0.5)/0.5,0,1,1)*scale
					end
					
					y = y+80*(1-scale)
					
					if beatfrac >= 0 and beatfrac < 0.333 then
						x = sw/2 - scale*100*inOutQuad((beatfrac-0)/0.333,0,1,1)
					elseif beatfrac >= 0.333 and beatfrac < 0.667 then
						x = sw/2 - 100*scale + scale*200*inOutQuad((beatfrac-0.333)/0.334,0,1,1)
					elseif beatfrac >= 0.667 and beatfrac < 1 then
						x = sw/2 + 100*scale - scale*100*inOutQuad((beatfrac-0.667)/0.333,0,1,1)
					end
					
					local pos = math.pi*(beat*0.125) + math.pi*2*(i/5)
					if beatfrac == 0 or beatfrac == 1 then
						_G['loot_'..bad_cycle[i]..'_alphac']:x(0)
					else
						_G['loot_'..bad_cycle[i]..'_alphac']:x(1)
					end
					
					_G['loot_'..bad_cycle[i]..'_alpha' ]:z(2+beatfrac/100)
					_G['loot_'..bad_cycle[i] ]:zoom(zm)
					_G['loot_'..bad_cycle[i] ]:x( x )
					_G['loot_'..bad_cycle[i] ]:y( y )
					
					_G['loot_'..bad_cycle[i] ]:rotationz( -5*math.sin(beatfrac*math.pi*2) )
				end
				
			end)
			
			m(132.1,192,'*10000 stealthpastreceptors',e)
			m(132.1,192,'*10000 -100 reverse, *10000 stealth, *1000 dark',e)
			m(184,192,'*0.5 70 centered, *10000 -100 mini, *1000 -800 bumpy, *1000 no stealth, *1000 20 hallway, *1000 400 tornado, *1000 0.4x',e)
			m(183,192,'*10000 400 hidden, *1000 143 hiddenoffset',e)
			m(184,192,'*10000 400 hidden, *0.55 -50 hiddenoffset',e)
			m(184,192,'*10000 400 sudden, *10000 -207 suddenoffset, *0.3 no dark',e)
			m2(184,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:x(sw/2)
						a:z(2)
					end
					local a = GetJud(pn)
					if a then
						a:x(160*(pn*2-3))
					end
					local a = GetCom(pn)
					if a then
						a:x(160*(pn*2-3))
					end
				end
			end,true)
			
			m2(188,function()
				rb_discord:accelerate(480/137)
				rb_discord:zoom(0)
			end)
			
			m2(196,function()
				rb_discord:zoom(0)
			end,true)
			
			me(188,4,-100,0,'mini',l,linear,nil,.1)
			me(188,4,-800,0,'bumpy',l,linear,nil,.1)
			me(188,4,20,0,'hallway',l,linear,nil,.1)
			
			me(192,4,50,0,'stealth',l,outQuad)
			me(192,4,0,2,'xmod',l,outQuad)
			
			m(192,1,'*10000 no hallway, *10000 no centered, *10000 no reverse, *10000 no tornado, *1000 no hidden, *1000 no sudden',l)
			
			me(194,196,0,250,'invert',e,outQuart,1,228)
			me(194,196,0,-250,'invert',e,inQuart,2,228)
			
			me(194,1.5,0,50,'mini',l,outQuad)
			me(195.5,0.5,50,-50,'mini',l,inQuart)
			me(196,2,-50,0,'mini',l,outQuad)
			me(196,2,50,0,'stealth',l,outQuad)
			
			me(194,1.5,2,3,'xmod',l,outQuad)
			me(195.5,0.5,3,1.5,'xmod',l,inQuart)
			me(196,2,1.5,2,'xmod',l,outQuad)
			
			for pn=1,2 do
				me(224,.75,250*(pn*2-3),0,'drunk',l,linear,pn)
				me(224.75,.75,-250*(pn*2-3),0,'drunk',l,linear,pn)
				me(225.5,.75,250*(pn*2-3),0,'drunk',l,linear,pn)
				me(224,.75,250,0,'tipsy',l,linear,pn)
				me(224.75,.75,250,0,'tipsy',l,linear,pn)
				me(225.5,.75,250,0,'tipsy',l,linear,pn)
			end
			
			mod_onebeat(226,500)
			mod_onebeat(227,-500)
			
			mpf(188,192,function(beat)
				for pn=1,2 do
					local a = GetJud(pn)
					if a then
						a:effectmagnitude(30*(pn*2-3) * (192-beat)/4,180 * (192-beat)/4,0)
					end
					local a = GetCom(pn)
					if a then
						a:effectmagnitude(30*(pn*2-3) * (192-beat)/4,160 * (192-beat)/4,0)
					end
				end
			end)
			
			mpf(240,244,function(beat)
				for pn=1,2 do
					local a = GetJud(pn)
					if a then
						a:effectmagnitude(30*(pn*2-3) * (beat-240)/4,180 * (beat-240)/4,0)
					end
					local a = GetCom(pn)
					if a then
						a:effectmagnitude(30*(pn*2-3) * (beat-240)/4,160 * (beat-240)/4,0)
					end
				end
			end)
			
			mpf(252,256,function(beat)
				for pn=1,2 do
					local a = GetJud(pn)
					if a then
						a:effectmagnitude(30*(pn*2-3) - 30*(pn*2-3) * (beat-252)/4,180 - 180 * (beat-252)/4,0)
					end
					local a = GetCom(pn)
					if a then
						a:effectmagnitude(30*(pn*2-3) - 30*(pn*2-3) * (beat-252)/4,160 - 160 * (beat-252)/4,0)
					end
				end
			end)
			
			m2(193,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:skewx(.4)
						a:decelerate(45/137)
						a:skewx(0)
						a:sleep(0)
						a:skewx(-.4)
						a:decelerate(45/137)
						a:skewx(0)
						a:sleep(0)
						a:skewx(.4)
						a:decelerate(30/137-.05)
						a:skewx(0)
						a:linear(.05)
						a:skewx(-.4)
						a:sleep(15/137-.05)
						a:linear(.05)
						a:skewx(.4)
						a:sleep(15/137-.05)
						a:linear(.05)
						a:skewx(-.4)
						a:sleep(15/137-.05)
						a:linear(.05)
						a:skewx(0)
					end
				end
			end)
			
			m2(196,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:rotationy(30*(pn*2-3))
						a:decelerate(120/137)
						a:rotationy(0)
					end
				end
			end)
			
			m2(204,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:skewx(-1)
						a:decelerate(120/137)
						a:skewx(0)
					end
				end
			end)
			m2(206,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:rotationz(20*(pn*2-3))
						a:decelerate(60/137)
						a:rotationz(0)
					end
				end
			end)
			m2(208,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:rotationz(8*(pn*2-3))
						a:decelerate(45/137)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(-8*(pn*2-3))
						a:decelerate(45/137)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(8*(pn*2-3))
						a:decelerate(30/137)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(-20*(pn*2-3))
						a:decelerate(60/137)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(20*(pn*2-3))
						a:decelerate(60/137)
						a:rotationz(0)
						a:sleep(0)
					end
				end
			end)
			
			m2(212,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:skewx(1)
						a:decelerate(120/137)
						a:skewx(0)
					end
				end
			end)
			
			function wowaka(beat)
				me(beat,1,200,0,'drunk',l,linear,1)
				me(beat+.25,1,-200,0,'drunk',l,linear,2)
				me(beat+1,1,-200,0,'drunk',l,linear,1)
				me(beat+1.25,1,200,0,'drunk',l,linear,2)
				
				me(beat+2,1,-50,0,'brake',l,linear,1)
				me(beat+2.5,1,-50,0,'brake',l,linear,2)
			end
			
			wowaka(199.25)
			wowaka(207.25)
			wowaka(215.25)
			
			mod_wiggle(210.25,3,4,100,2,'dizzy',1)
			mod_wiggle(211.25,3,4,100,2,'dizzy',2)
			
			simple_m0d2(193-.05,50,.3,'brake')
			simple_m0d2(193.75-.05,50,.3,'brake')
			simple_m0d2(194.5-.05,50,.3,'brake')
			
			for i=192.5,193.75,.5 do
				m(i-.05,.25,'*10 5 cross',l)
				m(i-.05+.25,.25,'*10 -5 cross',l)
			end
			
			for pn=1,2 do
				mod_wiggle(202.25,3,4,100*(pn*2-3),2,'tipsy',pn)
				mod_wiggle(218.25,6,4,100*(pn*2-3),2,'drunk',pn)
			end
			
			m(194,1,'*10000 no cross',l)
			
			simple_m0d2(203-.07,100,.4,'tornado');
			simple_m0d2(203-.07,80,.6,'brake');
			
			simple_m0d2(197,800,.4,'bumpy',1)
			simple_m0d2(197.75,800,.4,'bumpy',2)
			simple_m0d2(198.5,800,.4,'bumpy',1)
			simple_m0d2(205,800,.4,'bumpy',2)
			simple_m0d2(205.75,800,.4,'bumpy',1)
			simple_m0d2(206.5,800,.4,'bumpy',2)
			simple_m0d2(213,800,.4,'bumpy',1)
			simple_m0d2(213.75,800,.4,'bumpy',2)
			simple_m0d2(214.5,800,.4,'bumpy',1)
			
			simple_m0d2(196-.1,50,.4,'brake');
				
			m2(220,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:bob()
						a:effectperiod(0.5)
						a:effectmagnitude(0,32*(pn*2-3),0)
						a:effectclock('bgm')
					end
				end
			end)
			m2(221,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:stopeffect()
						a:rotationz(10)
						a:decelerate(60/137)
						a:rotationz(0)
					end
				end
			end)
			m2(222,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:vibrate()
						a:effectperiod(0.5)
						a:effectmagnitude(64,64,0)
						a:effectclock('bgm')
					end
				end
			end)
			m2(223,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:stopeffect()
						--a:rotationz(-10)
						--a:decelerate(60/137)
						--a:rotationz(0)
					end
				end
			end)
			
			mod_onebeat(221,1000)
			--mod_onebeat(223,1000)
			
			m(223-.1,1,'*10 flip',l)
			m(223.5-.1,1,'*10 no flip',l)
			
			
			
			
			
			
			
			
			m2(228,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:effectoffset(0.3)
						a:pulse()
						a:effectclock('bgm')
						a:effectperiod(0.6)
						a:effectdelay(0.4)
						a:effectmagnitude(1,1,1)
						a:effectcolor2(1.1,.9,1,1)
						a:effectcolor1(.9,1.2,1,1)
					end
				end
			end)
			
			m2(244,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:stopeffect()
					end
				end
			end)
			
			mpf(228,243,function(beat)
				local beat2 = beat
				if math.mod(beat,4) > 3 then beat2 = 3.001 end
				if math.mod(beat+4,8) > 4 then beat2 = beat2-1 end
				
				local off = 0
				if beat > 236 then off = math.pi end
				
				local alt = (30*math.sin(beat2*math.pi + math.pi + off))
				local rev = math.min(30*math.sin(beat2*math.pi + off),0)
				local pingpong = beat2-math.floor(beat2)
				if math.mod(beat2,2)>1 then
					pingpong = 1-pingpong
				end
				for pn=1,2 do
					local inv = 100*pingpong - 250*(pn*2-3)
					mod_do('*10000 '..alt..' alternate, *10000 '..rev..' reverse, *10000 '..inv..' invert',pn)
				end
			end)
			
			me(243,1,350,0,'invert',l,linear,1)
			me(243,1,150,0,'invert',l,linear,2)
			
			mpf(243,244,function(beat)
				
				local pos = beat-243
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:skewx(0.4*math.sin(pos*2*math.pi))
						a:rotationz(-8*math.sin(pos*2*math.pi))
						a:zoomy(1-0.15*math.sin(pos*4*math.pi))
					end
				end
				
			end)
			
			m2(224,function()
				rb_bg:x(sw/2)
				rb_bg:y(sh/2)
				rb_bg:diffusealpha(0)
				rb_bg:linear(240/137)
				rb_bg:diffusealpha(0.5)
			end)
			
			for i=0,7 do
				if math.mod(i,4) ~= 3 then
					
					m2(228+i,function()
						rb_bg:decelerate(45/137)
						rb_bg:addx(64)
					end)
					m2(236+i,function()
						rb_bg:decelerate(45/137)
						rb_bg:addx(-64)
					end)
					
				end
			end
			
			--me(240,243,2,1.5,'xmod',e,linear,nil,250)
			--me(243,245,2,0.8,'xmod',e,linear,nil,250)
			--me(250,256,0.5,1.5,'xmod',e,linear,nil,259)
			me(259,1,1.5,15,'xmod',l,linear,nil,20)
			
			m(243,250,'*2 stealth, -50 reverse, dark',e)
			m(250,280,'*0.5 no reverse',e)
			
			m(246,999,'50 tornado, *1000 40 suddenoffset, sudden',e)
			
			m(260,999,'*0.45 -200 suddenoffset',e)
			
			m2(244,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(1)
						a:skewx(0)
						a:rotationz(0)
						a:zoomy(1.1)
					end
				end
			end)
			m2(250,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(6*60/137)
						a:addy(30)
					end
				end
			end)
			
			m2(256,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:sleep(0)
						a:rotationz(20)
						a:decelerate(45/137)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(-20)
						a:decelerate(45/137)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(20)
						a:decelerate(45/137)
						a:rotationz(0)
						a:sleep(0)
					end
				end
			end)
			
			me(258,1,200,0,'tipsy',l,outQuad)
			me(259,1,-200,0,'tipsy',l,outQuad)
			
			m2(242,function()
				rb_discord:decelerate(120/137)
				rb_discord:zoom(1)
			end)
			
			rb_wawe(231)
			rb_wawa(235)
			rb_wawe(239)
			rb_wawa(241)
			
			
			
			
			--wenis
			m2(243.5,function()
				
				loot_zelda_alphac:x(1);
				
				loot_show('zelda');
				loot_zelda:x(SCREEN_CENTER_X);
				loot_zelda:y(SCREEN_BOTTOM-10);
				loot_zelda:zoom(0.1);
				
				loot_zelda:effectmagnitude(20,20,0)
				loot_zelda:decelerate(90/137)
				loot_zelda:x(SCREEN_CENTER_X-20);
				loot_zelda:y(sh/2 - 40)
				loot_zelda:zoom(.6);
				loot_zelda:rotationz(-5)
				
				loot_zelda:sleep(120/137)
				loot_zelda:accelerate(120/137)
				loot_zelda:x(sw/2)
				loot_zelda:y(sh-10)
				loot_zelda:rotationz(0)
				loot_zelda:zoom(.1)
				
			end)
			
			m2(244,function()
				loot_zelda:vibrate()
			end)
			m2(245,function()
				loot_zelda:stopeffect()
			end)
			
			m2(260,function()
				rb_disco_animating = false
				rb_discord:vibrate()
				--rb_discord:effectmagnitude(10,10,0)
				rb_discord:playcommand('Head3')
				--rb_discord:addy(-40)
				rb_discord:zoom(1.2)
				rb_discord:linear(8*60/137)
				rb_discord:addy(300)
				rb_discord:zoom(1)
				
				screen:SetDrawByZPosition(false)
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:z(0)
					end
				end
				SongBackground:z(0)
				SongForeground:z(0)
				
				MESSAGEMAN:Broadcast('WhiteFlash')
			end)
			m2(264,function()
				rb_discord:stopeffect()
			end)
			
			mpf(260,264,function(beat)
				local mag = 20*(264-beat)/4
				rb_discord:effectmagnitude(mag,mag,0)
			end)
			
			m2(247.5,function()
				
				loot_car_alphac:x(1);
				
				loot_show('car');
				loot_car:x(SCREEN_CENTER_X);
				loot_car:y(SCREEN_BOTTOM-10);
				loot_car:zoom(0.1);
				
				loot_car:playcommand('Play');
				
				loot_car:vibrate()
				loot_car:effectmagnitude(20,20,0)
				loot_car:decelerate(90/137)
				loot_car:x(SCREEN_CENTER_X-80);
				loot_car:y(sh/2)
				loot_car:zoom(.6);
				loot_car:rotationz(-10)
				
				loot_car:sleep(120/137)
				loot_car:accelerate(120/137)
				loot_car:x(sw/2)
				loot_car:y(sh-10)
				loot_car:rotationz(0)
				loot_car:zoom(.1)
				
			end)
			
			m2(248,function()
				loot_car:vibrate()
			end)
			
			m2(249,function()
				loot_car:stopeffect()
				loot_hide('zelda');
			end)
			
			m2(253,function()
				loot_hide('car');
			end)
			
			
			
			
---------------------------------------------------------------------------------------
----------------------Sort the actions table-------------------------------------------
---------------------------------------------------------------------------------------
			
			function modtable_compare(a,b)
				return a[1] < b[1]
			end
			
			if table.getn(mod_actions) > 1 then
				table.sort(mod_actions, modtable_compare)
			end
			
			self:queuecommand('Update');
			
		end"
		
		UpdateCommand="%function(self)

			if GAMESTATE:GetSongBeat()>=0 and not checked then
			
				local ThingsToGrab = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame',
										'Lyrics','SongBackground','SongForeground','Overlay','Underlay'}
				local ThingsToHide = {'LifeP1','LifeP2','BPMDisplay','LifeFrame','ScoreFrame','Overlay','Underlay'}
				
				for i,v in ipairs(ThingsToGrab) do
					_G[v] = SCREENMAN:GetTopScreen():GetChild(v) or nil
				end
				
				for i,v in ipairs(ThingsToHide) do
					if _G[v] then _G[v]:hidden(1) end
				end
				
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				
				--name players, judgment and combo
				for pn=1,2 do
					_G['P'..pn] = SCREENMAN:GetTopScreen():GetChild('PlayerP'..pn) or nil;
					if _G['P'..pn] then
						_G['jud'..pn] = _G['P'..pn]:GetChild('Judgment');
						_G['com'..pn] = _G['P'..pn]:GetChild('Combo');
					end
					
					if _G['ScoreP'..pn] then 
						_G['ScoreP'..pn]:zoom(0)
					end
				end
				
				screen = SCREENMAN:GetTopScreen();
				checked = true; --let this only run once
				
				screen:SetDrawByZPosition(true);
				
				if SongForeground then
					SongForeground:z(1)
				end
				if SongBackground then
					SongBackground:z(-1)
				end
				
			end

			local beat = GAMESTATE:GetSongBeat()
			
			
---------------------------------------------------------------------------------------
----------------------Begin table handlers---------------------------------------------
---------------------------------------------------------------------------------------
			
			disable = false;
			if disable ~= true and beat > mod_firstSeenBeat+0.1 and checked then
				
				-----------------------
				-- Player mod resets --
				-----------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i=1,2 do
						mod_do('clearall',i)
					end
				end
				
				------------------------------------------------------------------------------
				-- custom mod reader by TaroNuke edited by WinDEU and re-stolen by TaroNuke --
				------------------------------------------------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i,v in pairs(mods) do
						if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
							if beat >=v[1] then
								if (v[4] == 'len' and beat <=v[1]+v[2]) or (v[4] == 'end' and beat <=v[2]) then
									if table.getn(v) == 5 then
										mod_do(v[3],v[5]);
									else
										mod_do(v[3]);
									end
								end
							end
						else
							v[1] = 0;
							v[2] = 0;
							v[3] = '';
							v[4] = 'error';
							SCREENMAN:SystemMessage('Bad mod in beat-based table (line '..i..')');
						end
					end
				end
				
				-----------------------------------------------------------------------------------------------------
				-- WinDEU's time-based len/end version of the #swag custom mod reader #teamproofofconcept (c) 2015 --
				-----------------------------------------------------------------------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i,v in pairs(mods2) do
						if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
							if mod_time >=v[1] then
								if (v[4] == 'len' and mod_time <=v[1]+v[2]) or (v[4] == 'end' and mod_time <=v[2]) then
									if table.getn(v) == 5 then
										mod_do(v[3],v[5]);
									else
										mod_do(v[3]);
									end
								end
							end
						else
							v[1] = 0;
							v[2] = 0;
							v[3] = 'error';
							v[4] = 'error';
							SCREENMAN:SystemMessage('Bad mod in time-based table (line '..i..')');
						end
					end
				end
				
				--------------------------------------------------------------------------------------
				-- i dont know who this reader is but he looks like he is made out of EASE HAHAHAHA --
				-- original code by exschwasion, bastardized by taro for cmod support and less 'if' --
				--------------------------------------------------------------------------------------
				for i,v in pairs(mods_ease) do
					if v and table.getn(v) > 6 and v[1] and v[2] and v[3] and v[4] and v[5] and v[6] and v[7] then
						if beat >=v[1] then
							if (v[6] == 'len' and beat <=v[1]+v[2]) or (v[6] == 'end' and beat <=v[2]) then
								
								local duration = v[2];
								if v[6] == 'end' then duration = v[2] - v[1] end
								local curtime = beat - v[1]
								local diff = v[4] - v[3]
								local startstrength = v[3]
								local curve = v[7]
								local mod = v[5]
								
								local strength = curve(curtime, startstrength, diff, duration, v[10], v[11]) --extra parameters for back and elastic eases :eyes:
								
								local modstr = v[5] == 'xmod' and strength..'x' or (v[5] == 'cmod' and 'C'..strength or strength..' '..v[5])
								mod_do('*10000 '..modstr,v[8]);
								
							elseif (v[9] and ((v[6] == 'len' and beat <=v[1]+v[2]+v[9]) or (v[6] == 'end' and beat <=v[9]))) then
							
								local strength = v[4]
								
								local modstr = v[5] == 'xmod' and strength..'x' or (v[5] == 'cmod' and 'C'..strength or strength..' '..v[5])
								mod_do('*10000 '..modstr,v[8]);
								
							end
						end
					else
						SCREENMAN:SystemMessage('Bad mod in beat-based ease table (line '..i..')');
					end
				end
				
				--------------------
				-- Perframe stuff --
				--------------------
				
				if table.getn(mod_perframes)>0 then
					for i=1,table.getn(mod_perframes) do
						local a = mod_perframes[i]
						if beat > a[1] and beat < a[2] then
							a[3](beat);
						end
					end
				end
				
				--rb_discord:rotationy( beat*90 )
				
				for i=1,8 do
					loot_keytimer[i] = loot_keytimer[i]+0.02;
				end
				
				local isAutoplay = PREFSMAN:GetPreference('AutoPlay') -- :/
				
				if loot_autos1 <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_autos1][1] then
					if isAutoplay > 0 or not FUCK_EXE then
						MESSAGEMAN:Broadcast('StepP1'..loot_dirnames[ loot_minigame_notedata[loot_autos1][2] + 1 ]..'Press');
					end
					MESSAGEMAN:Broadcast('NoteCross'..(loot_minigame_notedata[loot_autos1][2]))
					MESSAGEMAN:Broadcast('NoteCross')
					loot_autos1 = loot_autos1+1
				end
				if loot_autos2 <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_autos2][1]+0.1 then
					if isAutoplay > 0 or not FUCK_EXE then
						MESSAGEMAN:Broadcast('StepP1'..loot_dirnames[ loot_minigame_notedata[loot_autos2][2] + 1 ]..'Lift');
					end
					loot_autos2 = loot_autos2+1
				end
				
				if beat > mod_firstSeenBeat+0.1 then
				
					for i=1,table.getn(loot_games_s) do
						local alph = _G['loot_'..loot_games_s[i]..'_alphac']:GetX();
						local a = _G['loot_'..loot_games_s[i]..'_alpha'];
						if alph == 0 then
							a:hidden(1);
						else
							a:hidden(0);
							--a:diffusealpha(alph);
							--a:fadebottom(alph);
						end
					end
				
					--IIDX
					if loot_curnote_iidx <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_curnote_iidx][1]-(4/loot_iidx_speedmod) then
						if beat < loot_minigame_notedata[loot_curnote_iidx][1]+0.5 then
							loot_iidx_spawn_note(loot_minigame_notedata[loot_curnote_iidx][1],loot_minigame_notedata[loot_curnote_iidx][2],loot_iidx_speedmod);
						end
						loot_curnote_iidx = loot_curnote_iidx + 1;
					end
					if beat > loot_iidxmeasure-(4/loot_iidx_speedmod) then
						if beat < loot_iidxmeasure+0.5 then
							loot_iidx_spawn_measure(loot_iidx_speedmod);
						end
						loot_iidxmeasure = loot_iidxmeasure+4;
					end
					loot_iidx_ayaze:x(math.sin(beat/2)*20);
					loot_iidx_ayaze:y(math.cos(beat/2)*20);
					
					--jubeat
					if loot_curnote_jb <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_curnote_jb][1]-(2/loot_jb_speedmod) then
						if beat < loot_minigame_notedata[loot_curnote_jb][1]+0.5 then
							loot_jb_spawn_note(loot_minigame_notedata[loot_curnote_jb][1],loot_minigame_notedata[loot_curnote_jb][2],loot_jb_speedmod,1);
							loot_jb_spawn_note(loot_minigame_notedata[loot_curnote_jb][1],loot_minigame_notedata[loot_curnote_jb][2],loot_jb_speedmod,2);
						end
						loot_curnote_jb = loot_curnote_jb + 1;
					end
					
					--maimai
					if loot_curnote_mai <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_curnote_mai][1]-(4/loot_mai_speedmod) then
						if beat < loot_minigame_notedata[loot_curnote_mai][1]+0.5 then
							loot_mai_spawn_note(loot_minigame_notedata[loot_curnote_mai][1],loot_minigame_notedata[loot_curnote_mai][2],loot_mai_speedmod);
						end
						loot_curnote_mai = loot_curnote_mai + 1;
					end
					
					--pankeks
					if loot_curnote_chef <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_curnote_chef][1]-(4/loot_chef_speedmod) then
						if beat < loot_minigame_notedata[loot_curnote_chef][1]+0.5 then
							loot_chef_spawn_note(loot_minigame_notedata[loot_curnote_chef][1],loot_minigame_notedata[loot_curnote_chef][2],loot_chef_speedmod);
						end
						loot_curnote_chef = loot_curnote_chef + 1;
					end
					
					--ALIX
					if loot_curnote_alex <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_curnote_alex][1]-2 then
						if beat < loot_minigame_notedata[loot_curnote_alex][1]+0.5 then
							loot_alex_spawn_note(loot_minigame_notedata[loot_curnote_alex][1],loot_minigame_notedata[loot_curnote_alex][2]);
						end
						loot_curnote_alex = loot_curnote_alex + 1;
					end
					
					--doctor
					if loot_curnote_doctor <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_curnote_doctor][1]-3.5 then
						if beat < loot_minigame_notedata[loot_curnote_doctor][1]+0.5 then
							loot_doctor_spawn_note(loot_minigame_notedata[loot_curnote_doctor][1],loot_minigame_notedata[loot_curnote_doctor][2]);
						end
						loot_curnote_doctor = loot_curnote_doctor + 1;
					end
					
					--zelda
					if loot_curnote_zelda <= table.getn(loot_minigame_notedata) and beat > loot_minigame_notedata[loot_curnote_zelda][1]-1.5 then
						if beat < loot_minigame_notedata[loot_curnote_zelda][1]+0.5 then
							loot_zelda_spawn_note(loot_minigame_notedata[loot_curnote_zelda][1],loot_minigame_notedata[loot_curnote_zelda][2]);
						end
						loot_curnote_zelda = loot_curnote_zelda + 1;
					end
					
				end
				
				---------------------------------------
				-- ACTION RPGS AINT GOT SHIT ON THIS --
				---------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					while curaction<=table.getn(mod_actions) and GAMESTATE:GetSongBeat()>=mod_actions[curaction][1] do
						if mod_actions[curaction][3] or GAMESTATE:GetSongBeat() < mod_actions[curaction][1]+2 then
							if type(mod_actions[curaction][2]) == 'function' then
								mod_actions[curaction][2]()
							elseif type(mod_actions[curaction][2]) == 'string' then
								MESSAGEMAN:Broadcast(mod_actions[curaction][2]);
							end
						end
						curaction = curaction+1;
					end
				end
				
			end
			
			self:sleep(0.02);
			self:queuecommand('Update');

---------------------------------------------------------------------------------------
----------------------END DON'T TOUCH IT KIDDO-----------------------------------------
---------------------------------------------------------------------------------------
			
		end"
		
	/>
	
	<!--Handling messages here is still fun and profitable-->
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) rb_aux = self end"
	/>
	
	<!--This is for the time based mod reader-->
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); mod_time = tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<LAER Type="ActorFrame" OnCommand="%function(self) loot_allgames = self; self:SetDrawByZPosition(true) end" ><children>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_jb_alpha = self; self:hidden(1) end" ><children>
			<LAER File="jubeat" OnCommand="%function(self) loot_jb = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_iidx_alpha = self; self:hidden(1) end" ><children>	
			<LAER File="iidx" OnCommand="%function(self) loot_iidx = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_mai_alpha = self; self:hidden(1) end" ><children>
			<LAER File="maimai" OnCommand="%function(self) loot_mai = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_chef_alpha = self; self:hidden(1) end" ><children>
			<LAER File="chef" OnCommand="%function(self) loot_chef = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_alex_alpha = self; self:hidden(1) end" ><children>
			<LAER File="ALEX" OnCommand="%function(self) loot_alex = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_zelda_alpha = self; self:hidden(1) end" ><children>
			<LAER File="zelda" OnCommand="%function(self) loot_zelda = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_doctor_alpha = self; self:hidden(1) end" ><children>
			<LAER File="doctor" OnCommand="%function(self) loot_doctor = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
		<LAER Type="ActorFrame" OnCommand="%function(self) loot_car_alpha = self; self:hidden(1) end" ><children>
			<LAER File="car" OnCommand="%function(self) loot_car = self end"
			InitCommand="hidden,0;x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y" /></children></LAER>
	</children></LAER>
	
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_jb_alphac = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_iidx_alphac = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_mai_alphac = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_chef_alphac = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_alex_alphac = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_zelda_alphac = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_doctor_alphac = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_car_alphac = self end"/>
	
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_alex_sendpos = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_jb_sendpos = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_iidx_sendpos = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_mai_sendpos = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_chef_sendpos = self end"/>
	<CODE Type="Quad" OnCommand="hidden,1" InitCommand="%function(self) loot_doctor_sendpos = self end"/>
	
	<LAER File="../bg/discord" />
	
	<INPUTGAME
		Type="Quad" OnCommand="hidden,1"
		Debug1MessageCommand="%function(self)
			
		end"
		StepP1LeftPressMessageCommand="%function (self)
			loot_keys[6-5] = 1;
			loot_keytimer[1] = 0;
		end"
		StepP1DownPressMessageCommand="%function (self)
			loot_keys[7-5] = 1;
			loot_keytimer[2] = 0;
		end"
		StepP1UpPressMessageCommand="%function (self)
			loot_keys[8-5] = 1;
			loot_keytimer[3] = 0;
		end"
		StepP1RightPressMessageCommand="%function (self)
			loot_keys[9-5] = 1;
			loot_keytimer[4] = 0;
		end"
		StepP1LeftLiftMessageCommand="%function (self)
			loot_keys[6-5] = 0;
		end"
		StepP1DownLiftMessageCommand="%function (self)
			loot_keys[7-5] = 0;
		end"
		StepP1UpLiftMessageCommand="%function (self)
			loot_keys[8-5] = 0;
		end"
		StepP1RightLiftMessageCommand="%function (self)
			loot_keys[9-5] = 0;
		end"
		StepP2LeftPressMessageCommand="%function (self)
			loot_keys[6-1] = 1;
			loot_keytimer[5] = 0;
		end"
		StepP2DownPressMessageCommand="%function (self)
			loot_keys[7-1] = 1;
			loot_keytimer[6] = 0;
		end"
		StepP2UpPressMessageCommand="%function (self)
			loot_keys[8-1] = 1;
			loot_keytimer[7] = 0;
		end"
		StepP2RightPressMessageCommand="%function (self)
			loot_keys[9-1] = 1;
			loot_keytimer[8] = 0;
		end"
		StepP2LeftLiftMessageCommand="%function (self)
			loot_keys[6-1] = 0;
		end"
		StepP2DownLiftMessageCommand="%function (self)
			loot_keys[7-1] = 0;
		end"
		StepP2UpLiftMessageCommand="%function (self)
			loot_keys[8-1] = 0;
		end"
		StepP2RightLiftMessageCommand="%function (self)
			loot_keys[9-1] = 0;
		end"
		
	/>
	
	<LAER Type="Quad" OnCommand="x,sw/2;y,sh/2;zoomto,sw,sh;cropright,0.4;faderight,0.5;diffuse,1,0,0,0"
	Fk_P1_W8MessageCommand="%function(self)
		local beat = GAMESTATE:GetSongBeat();
		if beat > 133 and beat < 194 or beat > 244 and beat < 252 then
			self:playcommand('Mine')
		end
	end"
	MineCommand="finishtweening;diffusealpha,.4;linear,0.3;diffusealpha,0;" />
	
	<LAER Type="Quad" OnCommand="x,sw/2;y,sh/2;zoomto,sw,sh;cropleft,0.4;fadeleft,0.5;diffuse,1,0,0,0"
	Fk_P2_W8MessageCommand="%function(self)
		local beat = GAMESTATE:GetSongBeat();
		if beat > 133 and beat < 194 or beat > 244 and beat < 252 then
			self:playcommand('Mine')
		end
	end"
	MineCommand="finishtweening;diffusealpha,.4;linear,0.3;diffusealpha,0;" />
	
	<LAER Type="Quad" OnCommand="x,sw/2;y,sh/2;zoomto,sw,sh;diffuse,1,1,1,0;" WhiteFlashMessageCommand="diffusealpha,1;linear,1;diffusealpha,0;" />
	
</children></ActorFrame>