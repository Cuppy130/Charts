<ActorFrame><children>
<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self)

		function normalize(value,min,max,nmin,nmax)
			return nmin + (value-min)*(nmax-nmin)/(max-min)
		end

		-- world's ugliest function
		-- ease_wiggle now supports absolute values
		function ease_wiggle(beat,len,amt,step,str,ease,t,pn,abs)
		    local s,count,pStart,pEnd,cur,prev,e = 0,1,0,0,-amt,amt,0
		    abs = abs or false
		    if t == 'end' then e = len elseif t == 'len' then e = (beat+len) end
		    if abs == true then prev,cur,s = 0,-cur,step end
		    for i = beat,(e-s),step do
		        if abs == false then
		            if i == beat then pStart = 0 else pStart = prev end
		            if i == e then pEnd = 0  else pEnd = cur end
		        elseif abs == true then
		            if count == -1 then cur,prev = 0,amt elseif count == 1 then cur,prev = amt,0 end
		            pStart,pEnd = prev,cur
		        end
		        mod_ease(i,step,pStart,pEnd,str,'len',ease,pn,0.2)
		        if abs == false then cur,prev = -cur,-prev
		        elseif abs == true then count = -count
		        end
		    end
		end

		function mod_bounce(beat,length,start,apex,mod,ease,inverse,pn)
			local i,o = 'in','out'
			if inverse then i,o = 'out','in' end
			mod_ease(beat, (length/2), start, apex, mod, 'len', _G[o..''..tostring(ease)],pn)
			mod_ease(beat+(length/2), (length/2), apex, start, mod, 'len', _G[i..''..tostring(ease)],pn,0.2)
		end

		function mod_quickswaps(beat,len,which,speed,step,pn)
			for i = beat,(beat+len)-(step*2),(step*2) do
				switcheroo_add(i,tostring(which),speed,step,nil)
				switcheroo_add(i+step,'normal',speed,step,nil)
			end
		end

		function bouncy_wiggle(beat,len,step,start,apex,mod,t,ease,abs,inverse,pn,inc)
			local ass = 0
			local f = 1 
			if t == 'end' then shit = len else shit = (beat+len) end
			if not inc then inc = 0 end
			for i = beat,(shit-step),step do
				if abs == true then fuck = (apex+ass) else fuck = (apex+ass)*f end
				mod_bounce(i,step,start,fuck,mod,tostring(ease),inverse,pn)
				f=-f
				ass = ass + inc
			end
		end

		function SpawnPlayers(beat,lower,upper,which,persist)
			local offset = -0.1
			local w = tostring(which)
			if which == 'despawn' then offset = -offset end
			mod_message(beat+offset,function(self)
				for i = lower,upper,1 do
					local a = _G['P'..i]
					if a then
						if w == 'spawn' then
							a:SetAwake(true)
						elseif w == 'despawn' then
							a:SetAwake(false)
						end
						a:zoom(0)
					end
				end
			end,persist)
			mod_message(beat,function(self)
				for i = lower,upper,1 do
					local a = _G['P'..i]
					if a then
						if w == 'spawn' then
							a:hidden(0)
							a:zoom(1)
						elseif w == 'despawn' then
							a:zoom(0)
							a:hidden(1)
						end
					end
				end
			end,persist)
		end

		function mod_intox(beat,length,mod,amt,speed,period,ease,pn)
			mod_insert(beat,length, '*-1 '..speed..' '..mod..'speed,*-1 '..period..' '..mod..'period','len',pn)
			mod_insert(beat+(length),0.1, '*-1 no '..mod..'speed,*-1 no '..mod..'period','len',pn)
			mod_ease(beat, length, amt, 0, mod, 'len', ease, pn, 0.2)
		end

	end"
/>
</children></ActorFrame>