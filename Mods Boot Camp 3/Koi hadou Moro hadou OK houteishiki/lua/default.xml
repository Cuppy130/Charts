<ActorFrame
InitCommand="%function(self)

	--NOTE: This is halfspeeded because I am a dumbass

	songName = GAMESTATE:GetCurrentSong():GetSongDir();
	
	mod_globaloffset = PREFSMAN:GetPreference('GlobalOffsetSeconds');
	
	sw = SCREEN_WIDTH
	sh = SCREEN_HEIGHT --shortcuts
	
	function Plr(pn)
		return _G['P'..pn]
	end
	function GetJud(pn)
		return _G['jud'..pn]
	end
	function GetCom(pn)
		return _G['com'..pn]
	end
	
	function mod_do(str,pn)
		if pn then
			GAMESTATE:ApplyGameCommand('mod,'..str,pn)
		else
			GAMESTATE:ApplyGameCommand('mod,'..str)
		end
	end
	
	function taro_Sound(str)
		local met = GAMESTATE:GetCurrentSong():GetSongDir();
		SOUND:PlayOnce(met..'lua/'..str..'.ogg');
	end
	
	function math.clamp(val,min,max)
		if val < min then return min end
		if val > max then return max end
		return val
	end
	
	loot_mainscore1 = 0
	loot_mainscore2 = 0
	loot_scoreP1 = 0
	loot_scoreP1prev = 0
	loot_scoreP2 = 0
	loot_scoreP2prev = 0
	
	ama_bonus = {0,0}
	
	ama_dirs = {90,0,180,-90}
	ama_addx = {-48,-16,16,48}
	ama_addy = {0,30,-30,0}
	
end"
><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,1000"
	/>
	
	<Layer File="spellcard.xml" />
	<Layer File="modhelpers.xml" />
	<Layer File="easing.xml" />
	<Layer File="../easewiggles.xml" />
	<Layer File="../easewiggles2.xml" />
	<Layer File="../easewiggles3.xml" />
	<Layer File="../easewiggles4.xml" />
	
	<Layer
		Type="Quad"
		OnCommand="hidden,1"
		InitCommand="%function(self)
			
			P1, P2, jud1, com1, jud2, com2 = nil
		
			mawaru_keys = {0,0,0,0,0,0,0,0}
			mawaru_held = {0,0,0,0,0,0,0,0}
			mawaru_lockinput = {0,0}
		
			checked = false;
			
			ama_curnote = {1,1}
			ama_science0 = {
				{107,0},
				{107.5,1},
				{108,0},
				{108.5,1},
			
				{387,0},
				{387.5,2},
				{388,1},
				{388.5,3},
			
				{395,3},
				{395.5,0},
				{396,1},
				{396.5,2},
				
				{9999,0},
			}
			ama_science1 = {
				{107,0},
				{107.5,2},
				{108,1},
				{108.5,3},
			
				{387,0},
				{387.5,1},
				{388,3},
				{388.5,1},
			
				{395,1},
				{395.5,2},
				{396,2},
				{396.5,1},
				
				{9999,0},
			}
			
			ama_science = {{},{}}
			
			slumpo = false
			for pn=1,2 do
				if GAMESTATE:IsPlayerEnabled(pn-1) then
					if GAMESTATE:GetCurrentSteps(pn-1):GetDifficulty() == 5 then
						slumpo = true
						ama_science[pn] = ama_science1
					else
						ama_science[pn] = ama_science0
					end
				end
			end
			
			ama_btimer = 0
			ama_bdelay = .2
			ama_buptr = {1,1}
			ama_bubbles = {{},{}}
			function ama_make_bubble(obj,which)
				table.insert(ama_bubbles[which],obj)
			end
			function ama_get_bubble(which)
				local a = ama_bubbles[which][ ama_buptr[which] ]
				ama_buptr[which] = ama_buptr[which]+1
				if ama_buptr[which] > table.getn(ama_bubbles[which]) then
					ama_buptr[which] = 1
				end
				return a
			end
			
			---------------------------------------------------------
			---------DOCUMENTATION-----------------------------------
			---------------------------------------------------------
			
			--function perframe( beat, endBeat )
				--return true if the current beat is between 'beat' and 'endBeat'
			
			--function mod_shader(beat,key,which)
				--turn on shader key at specified beat (up to 10 keys available, defined by 'which' = 0-9
				
			--function mod_insert(beat,len,mod,len_or_end,pn)
				--insert mod into beat mods table
			--function mod_insert2(time,len,mod,len_or_end,pn)
				--insert mod into time mods table
				
			--function mod_message(beat,msg,persistent)
				--insert something into the actions table.
				--msg can also be a function. If string, a message gets broadcast at that beat
				--if 'persistent' is true, message will run even if editor starts at a beat past it
				
			--function mod_blacklist(t,n)
				--check if number n occurs in table t
				--useful for doing 'every beat EXCEPT the contents of t'
				
			--function simple_m0d(beat,strength,mult,mod)
			--function simple_m0d2(beat,strength,mult,mod,pn)
			--function simple_m0d3(beat,strength,duration,bpm,mod,pn)
				--activate mods at specific beat but also deactivate them
				
			--function mod_wiggle(beat,num,div,amt,speed,mod,pn,first)
				--alternates a mod back and forth before resetting to 0
				
			--function mod_springt(time,strength,dur,mod,pn)
				--time-based per-frame alternating mod that decreases based on how much time is left.
					--think doorstopper
			
			--function mod_springt2(time,strength,dur,mod,pn)
				--time-based per-frame alternating mod
			
			--function mod_onebeat(beat,strength,pn)
				--turns on beat for the beat specified, at the desired strength	
			
			--function switcheroo_add(beat,which,speed,len,pn)
				--adds a column swap at the desired beat
			--[[	switcheroos = {normal = {0,0}, ldur = {0,0}, reset = {0,0},
					flip = {100,0}, rudl = {100,0}, invert = {0,100}, dlru = {0,100},
					ludr = {25,-75}, rdul = {75,75}, drlu = {25,125}, ulrd = {75,-125}, urld = {100,-100}}
			]]
			
			--use a variable called 'switcheroo_width' to change how much space is between each column
			--e.g. switcheroo_width = 2 for ayakashi
			
			--function mod_sugarkiller(beat,duration,speed,minstealth,maxstealth,pn)
				--portable version of the effect from sugarkill X
				
			--function doSpline(spd, axis, path, col)
				--draws spline 'path' in specified axis, for specific col. Offsets are *10000, but positions use *spd
				
			--function doSplineAll(spd, axis, path)
				--same as above, but for all columns
				--(faster performance than using doSpline 4 times due to more efficient concat)
			
			--function mindf_rotateAndCounter(xDegrees, yDegrees, zDegrees, player)
				--counteract euler rotations after rotating player in multiple axes, using a TON of math.
			
			
			---------------------------------------------------------
			--------END DOCUMENTATION--------------------------------
			---------------------------------------------------------
			
			local m = mod_insert
			local m2 = mod_message
			local me = mod_ease
			
			
			local l = 'len'
			local e = 'end'
			
			
			--NOTE: This function counteracts the halfspeed because I am a dumbass
			function m22(beat,msg,p)
				table.insert(mod_actions,{beat*2,msg,p});
			end
			
			
			
			
			init_modsp1 = '';
			init_modsp2 = '';
			
			mod_plr = {};
			
			mod_firstSeenBeat = GAMESTATE:GetSongBeat()*2; --necessary to prevent long freezes
			
			
			
			
			
			
			
			
			
			
			
---------------------------------------------------------------------------------------
----------------------Begin tables 'n stuff--------------------------------------------
---------------------------------------------------------------------------------------

			--beat based mods
			--{beat_start, beat_end, mods, len_or_end, player_number}
			mods = {
				{0,9999,'*2 2.5x, *1000 no beat, *10000 -99999 cover','end'},
			}
			
			--switcheroos = {{0,0},{100,0},{0,100},{25,-75},{75,75},{25,125},{75,-125},{100,-100}}
			
			
			
			
			
			
			
			--time based mods
			mod_time = 0;
			--{time_start, time_end, mods, len_or_end, player_number}
			mods2 = {
				--{0,200.345,'3x','end',1},
			}
			
			
			
			
			--this is both a message broadcaster and a function runner
			--if you put {beat,'String'}, then 'String' is broadcast as a message on that beat
			--if you put {beat,function() somecode end}, then function() is run at that beat
			--see example on beat 32
			
			curaction = 1;
			--{beat,thing,persists}
			mod_actions = {
			
			
				
			}
			
			
			
			
			
			
			--beat-based ease mods
			--{time_start, time_end, mod_start, mod_end, mod, len_or_end, ease_type, player_number, sustaintime, optional_param1, optional_param2}
			--valid ease types are:
				--linear
				--inQuad    outQuad    inOutQuad    outInQuad
				--inCubic   outCubic   inOutCubic   outInCubic
				--inQuart   outQuart   inOutQuart   outInQuart
				--inQuint   outQuint   inOutQuint   outInQuint
				--inSine    outSine    inOutSine    outInSine
				--inExpo    outExpo    inOutExpo    outInExpo
				--inCirc    outCirc    inOutCirc    outInCirc
				--inElastic outElastic inOutElastic outInElastic    --can take 2 optional parameters - amplitude & period
				--inBack    outBack    inOutBack    outInBack       --can take 1 optional parameter  - spring amount
				--inBounce  outBounce  inOutBounce  outInBounce
				
			mods_ease = {
				-- EXAMPLE TWEEN: from beat 0 to 4, make rotationz go from 360 to 0 with the inOutBack tween
				--{0,4,360,0,'rotationz','end',inOutBack},
			}
			
			
			
			ama_arm = {4,4}
			
			ama_trans = {
				j_1to2 = 4,
				j_1to3 = 7,
				j_1to4 = 9,
				j_2to1 = 4,
				j_2to3 = 8,
				j_2to4 = 5,
				j_3to1 = 7,
				j_3to2 = 8,
				j_3to4 = 6,
				j_4to1 = 9,
				j_4to2 = 5,
				j_4to3 = 6,
			}
			
			ama_notes = {{},{}}
			ama_nptr = {0,0}
			
			function ama_add_note(obj,pn)
				table.insert(ama_notes[pn],obj)
			end
			
			function ama_get_note(pn)
				ama_nptr[pn] = ama_nptr[pn]+1
				return ama_notes[pn][math.mod(ama_nptr[pn],table.getn(ama_notes[pn]))+1]
			end
			
			function ama_isGame(beat)
				if beat > 105 and beat < 110 then return true
				elseif beat > 385 and beat < 398 then return true
				end
				return false
			end
			
			function ama_color_note(obj,beat)
				if beat-math.floor(beat) == 0 then
					obj:diffuse(255/255,102/255,51/255,1)
				else
					obj:diffuse(51/255,102/255,255/255,1)
				end
			end
			
			function game_update(beat)
			
				for pn=1,2 do
					
					if GAMESTATE:IsPlayerEnabled(pn-1) then
					
						--note spawn logic
					
						while beat > ama_science[pn][ama_curnote[pn] ][1]-3 do
							if beat < ama_science[pn][ama_curnote[pn] ][1]-2 then
								
								local a = ama_get_note(pn)
								if a then
									local b = a:GetChild('')
									if b then
									
										--if pn == 2 then Trace('spawn for p2') end
										
										a:finishtweening()
										a:hidden(0)
										a:zoom(.8)
										a:x(sw*0.5 + (sw*0.25)*(pn*2-3) + 28 )
										a:y(sh-138)
										a:decelerate(90/256)
										a:addy(-200)
										a:accelerate(90/256)
										a:addy(200)
										a:queuecommand('Hide')
										
										ama_color_note(b,ama_science[pn][ama_curnote[pn] ][1])
										b:x(ama_addx[ ama_science[pn][ama_curnote[pn] ][2] + 1 ]*0.25)
										b:y(ama_addy[ ama_science[pn][ama_curnote[pn] ][2] + 1 ]*0.25)
										b:rotationz( ama_dirs[ ama_science[pn][ama_curnote[pn] ][2] + 1 ] )
										b:diffusealpha(10)
										b:linear(180/256)
										b:addx(-160 + ama_addx[ ama_science[pn][ama_curnote[pn] ][2] + 1 ]*0.5 )
										b:addy(-20 + ama_addy[ ama_science[pn][ama_curnote[pn] ][2] + 1 ]*0.5 )
										b:diffusealpha(0)
										
									end
								end
								
								
							end
							ama_curnote[pn] = ama_curnote[pn]+1
						end
					
					
					
					
					
					
						--input logic
				
						if mawaru_lockinput[pn]>0 then
							mawaru_lockinput[pn] = mawaru_lockinput[pn]-0.02
						end
					
						local bpn = pn-1;
						for i=1,4 do
							
							----------------------handle button presses-------------------
							if mawaru_lockinput[pn] <= 0 and ama_isGame(beat) then
								
								if mawaru_keys[i+(bpn*4)] == 1 and mawaru_held[i+(bpn*4)] == 0 then
									
									--Trace( 'press key '..i);
									
									local old = ama_arm[pn]
									local new = i
									
									ama_arm[pn] = i
									
									if old ~= new then
										
										_G['ama_bodyp'..pn]:finishtweening()
										_G['ama_bodyp'..pn]:setstate( 1 )
										_G['ama_bodyp'..pn]:sleep( 0.05 )
										_G['ama_bodyp'..pn]:queuecommand( 'Reset' );
										
										_G['ama_handp'..pn]:finishtweening()
										_G['ama_handp'..pn]:setstate( ama_trans[ 'j_'..old..'to'..new ] )
										_G['ama_handp'..pn]:sleep( 0.05 )
										_G['ama_handp'..pn]:queuecommand( 'P'..pn..'_'..new )
									
										mawaru_lockinput[pn] = 0.1;
									end
									
									mawaru_held[i+(bpn*4)] = true;
									
								end
								
							end
							
							----------------------don't touch this------------------------
							--release all buttons - used for detecting if a button is newly pressed, as opposed to held
							if mawaru_keys[i+(bpn*4)] == 0 then
								mawaru_held[i+(bpn*4)] = 0
							end
							---------------------end don't touch this----------------------
							
						end
					
					end
				end
				
			end
			
			ama_belts = {}
			ama_bptr = 0
			
			function ama_add_belt(obj)
				
				table.insert(ama_belts,{actor=obj,x=obj:GetX(),y=obj:GetY(),frame=0,animtime=0,speed=0})
				
			end
			
			function ama_get_belt()
				ama_bptr = ama_bptr+1
				local a = ama_belts[math.mod(ama_bptr,table.getn(ama_belts))+1]
				return a
			end
			
			ama_yspd = 0;
			
			function physics_update(beat)
				
				for i=1,table.getn(ama_belts) do
				
					local mult = -1
					
					if math.mod(i,2) == 0 then
						mult = 1
					end
					
					local b = ama_belts[i]
					if b and b.active then
						
						b.animtime = b.animtime+math.abs(2*(b.speed/50))
						while b.animtime >= 0.05 do
							if b.speed < 0 then
								b.frame = b.frame+1
								if b.frame > 5 then b.frame = 0 end
							else
								b.frame = b.frame-1
								if b.frame < 0 then b.frame = 5 end
							end
							b.animtime = b.animtime-0.05;
						end
						
						b.actor:hidden(0)
						
						b.actor:setstate(b.frame)
						
						b.actor:x(b.x + belt_addx:GetX());
						b.actor:y(b.y + belt_addx:GetY());
						
						b.speed = curl_belt_control:GetX()*mult
						
						if beat > 320 and beat < 370 and b.y + belt_addx:GetY() < -60 then
							b.y = b.y + belt_vert_spacing*4
						end
						
						b.actor:diffusealpha( math.clamp((380-beat)/4,0,1) )
						
						--Trace( b.x );
				
					end
				end
				
				ama_scanners:diffusealpha( math.clamp((380-beat)/4,0,1) )
				
				ama_yspd = math.clamp((beat-320)/8,0,1)*-1 + math.clamp((beat-374)/4,0,1)*-2
				
				if ama_yspd ~= 0 then
					belt_addx:addy(ama_yspd)
				end
				
				ama_scanners:y( sh/2 + belt_addx:GetY() -  belt_vert_spacing*0.5 - 16 )
				
				local sizes = {curl_belt_sizes:GetX(),curl_belt_sizes:GetY(),curl_belt_sizes:GetZ(),curl_belt_sizes:getaux()}
				
				for i=1,table.getn(curl_boxes) do
					
					local a = curl_boxes[i];
					local b = a.actor;
					
					a.x = b:GetX();
					a.y = b:GetY()+(curl_pfheight/2);
					
					if a.active then
						--gravity
						
						a.skew = a.skew+(a.xspd - a.skew)/10
						
						for j=1,table.getn(ama_belts) do
						
							local d = ama_belts[j]
							
							if d and d.active then
							
								local cx = d.x
								local cy = d.y
								
								if a.y > cy-20 and a.y < cy+20 and math.abs(a.x-cx) < 250 then
									b:y(cy-20-(curl_pfheight/2));
									a.y = cy-20;
									if a.yspd > 2 then
										a.yspd = a.yspd*-0.4;
										b:addy(-1);
										a.y = a.y-1;
										a.xspd = a.xspd+(((0.7*d.speed) - a.xspd)/3);
									else
										a.yspd = 0;
									end
								end
								if a.y == cy-20 then
									if a.yspd == 0 then
										a.xspd = 0.7*d.speed;
									end
								end
								if a.y < cy-20 or a.y > cy+20 or math.abs(a.x-cx) > 250 then
									if a.yspd < curl_maxfall then
										a.yspd = a.yspd+curl_fallspd
									end
								end
								
								if beat < 300 and a.y > cy-20 and math.abs(a.x-cx) > 250 then
									a.rot = a.rot+(curl_fallspd*5*a.xspd);
								end
								if beat > 300 then
									a.rot = 0;
								end
							
							end
							
						end
						
						if sizes[i] > 0 then
							b:addx(a.xspd*2);
						end
						b:addy(a.yspd*2);
						
						b:rotationz(a.rot)
						
					end
					
				end
				
				
				if beat < 384 and beat > 314 or beat < 305 then
					for pn = 1,2 do
						local w = pn
						if ama_flicker == -1 then
							w = w+2
						end
						local a = Plr(pn)
						if a and curl_boxes[w] and curl_boxes[w].active and sizes[w] then
							a:zoom(curl_p1scale * sizes[w])
							a:x(curl_boxes[w].x + belt_addx:GetX());
							a:y(curl_boxes[w].y - curl_pfheight/2 + belt_addx:GetY() + curl_pfheight/2*(1-sizes[w]) );
							a:z(0)
							a:rotationz(curl_boxes[w].rot);
							if beat > 300 then
								a:skewx(0.2*curl_boxes[w].skew)
							end
						else
							if a then
								a:zoom(0)
							end
						end
						--[[
						if w == 1 then
							mod_do('*10000 90 flip',pn)
						else
							mod_do('*10000 10 flip',pn)
						end
						]]
					end
				end
				
			end
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			m2(0,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(240/256)
						a:x(sw/2 + 160*(pn*2-3) )
					end
				end
			end)
			
			m2(0.2,function()
				local a = ama_get_belt()
				--Trace(tostring(a))
				if a then
					a.x = sw/2
					a.y = sh/2
					a.active = true;
					a.actor:hidden(0);
				end
			end,true)
			
			m2(4,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:x(sw/2 + 160*(pn*2-3) )
					end
				end
			end,true)
			
			curl_boxes = {}
			
			function curl_spawnbox(pos, y, which)
				local a = curl_boxes[1]
				if which then
					a = curl_boxes[which]
				else
					a = curl_getbox();
				end
				local b = a.actor;
				
				if not y then y = -100 end
				
				--b:hidden(0);
				b:zoom(0.3);
				
				local xp = 170;
				
				xp = SCREEN_CENTER_X-150*pos
				
				if GAMESTATE:GetSongBeat() > 4 then
					if pos == -1 then MESSAGEMAN:Broadcast('Light1'); end
					if pos == 1 then MESSAGEMAN:Broadcast('Light2'); end
				end
				
				b:x(xp);
				b:y(y);
				a.active = true;
				
				a.xspd = 0;
				a.yspd = 0;
				a.rot = 0;
				
				--Trace( 'Spawn' )
				
			end
			
			curl_bptr = 1;
			function curl_getbox()
				local r = curl_bptr;
				curl_bptr = curl_bptr+1;
				if curl_bptr > table.getn(curl_boxes) then
					curl_bptr = 1;
				end
				return curl_boxes[r]
			end
			
			function curl_setbox(obj)
				obj:setstate(table.getn(curl_boxes));
				obj:animate(0);
				table.insert(curl_boxes,{actor = obj,x=0,y=0,xspd=0,yspd=0,active=false,rot=0,skew=0});
			end
			
			curl_fallspd = 0.1;
			curl_maxfall = 10;
			
			curl_pfheight = 116;
			
			curl_p1scale = 0.45;
			
			
			-----------------------------------
			---------conveyor------------------
			-----------------------------------
			
			m2(1,function() curl_spawnbox(1) curl_spawnbox(0) curl_spawnbox(-1) end, true)
			
			m(16,107,'*10 90 reverse, *10 100 sudden, *1000 120 suddenoffset, -50 mini, 10 flip',e);
			
			m2(0,function()
				
				belt_addx:y(sh*0.6)
				
			end,true)
			
			m2(8,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:wag()
						a:effectclock('timer')
						a:effectperiod(1/60)
						a:effectmagnitude(0,0,10)
						a:rotationz(30)
						a:zoom(1.3)
						a:sleep(60/256)
						a:zoom(1)
						a:rotationz(-30)
					end
				end
			end)
			m2(10,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:stopeffect()
						a:bounceend(80/256)
						a:rotationz(180)
						a:zoom(0.7)
					end
				end
			end)
			
			m2(11.5,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:wag()
						a:effectclock('timer')
						a:effectperiod(1/60)
						a:effectmagnitude(0,0,10)
						a:rotationz(180+30)
						a:zoom(.75)
						a:sleep(60/256)
						a:zoom(.6)
						a:rotationz(180-30)
					end
				end
			end)
			
			m2(13.5,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:stopeffect()
						a:decelerate(60/256)
						a:rotationz(360)
						a:zoom(0)
						a:sleep(0)
						a:rotationz(0)
					end
				end
			end)
			
			m2(16,function()
				ama_bgcover:diffusealpha(0)
				ama_bgcover2:diffusealpha(1)
				ama_bgcover2:linear(480/256)
				ama_bgcover2:diffusealpha(0)
				ama_flashback:linear(480/256)
				ama_flashback:diffusealpha(1)
				
				MESSAGEMAN:Broadcast('Open');
				
				ama_graybg:zoom(1)
				
			end)
			m2(24,function()
				ama_bgcover:diffusealpha(0)
				ama_bgcover2:diffusealpha(0)
				ama_flashback:diffusealpha(1)
				ama_graybg:zoom(1)
				
				
				
			end,true)
			m2(32,function()
				
				belt_addx:decelerate(120/256)
				belt_addx:y(0)
				
				MESSAGEMAN:Broadcast('WhiteOn')
				
			end)
			m2(34,function()
				belt_addx:y(0)
			end,true)
			
			m2(32,'Drip1');
			m2(34,'Drip2');
			m2(36,'Drip3');
			
			m2(34,function()
				curl_belt_sizes:decelerate(90/256)
				curl_belt_sizes:x(1)
				curl_belt_sizes:sleep(30/256)
				curl_belt_sizes:decelerate(90/256)
				curl_belt_sizes:y(1)
				curl_belt_sizes:sleep(30/256)
				curl_belt_sizes:decelerate(90/256)
				curl_belt_sizes:z(1)
				curl_belt_sizes:aux(1)
				curl_belt_sizes:sleep(30/256)
			end)
			
			m2(40,function()
				curl_belt_control:accelerate(240/256)
				curl_belt_control:x(-2)
			end)
			
			for i=0,2 do
				m2(46+8*i,function() curl_spawnbox(-1) end)
			end
			
			m2(68,function()
				--[[
				curl_belt_control:x(5)
				curl_belt_control:decelerate(60/256)
				curl_belt_control:x(0)
				curl_belt_control:sleep(0)
				curl_belt_control:x(-5)
				curl_belt_control:decelerate(60/256)
				curl_belt_control:x(0)
				curl_belt_control:sleep(0)
				curl_belt_control:x(-5)
				curl_belt_control:decelerate(60/256)
				curl_belt_control:x(0)
				curl_belt_control:sleep(0)
				curl_belt_control:x(5)
				curl_belt_control:decelerate(60/256)
				curl_belt_control:x(0)
				curl_belt_control:accelerate(60/256)
				curl_belt_control:x(2)
				]]
				
				curl_belt_control:decelerate(120/256)
				curl_belt_control:x(0)
				curl_belt_control:accelerate(240/256)
				curl_belt_control:x(2)
				
			end)
			
			m2(78,function() curl_spawnbox(1) end)
			m2(86,function() curl_spawnbox(1) end)
			
			m2(97,function()
				MESSAGEMAN:Broadcast('GameUp')
				belt_addx:accelerate(120/256)
				belt_addx:addy(-sh*0.3)
				belt_addx:decelerate(120/256)
				belt_addx:addy(-sh*0.3)
			end)
			
			m2(99.5,function()
				curl_belt_sizes:accelerate(180/256)
				curl_belt_sizes:x(0)
				curl_belt_sizes:y(0)
				curl_belt_sizes:z(0)
				curl_belt_sizes:aux(0)
			end)
			
			m2(105,function()
				belt_addx:y(-sh*0.6)
				
				ama_belts[2].y = sh*-0.1
				ama_belts[2].actor:hidden(1)
			end,true)
			
			-----------------------------------
			
			m2(104,function()
				for pn=1,2 do
					if GAMESTATE:IsPlayerEnabled(pn-1) then
						if _G['g_bodyp'..pn] then
							_G['g_bodyp'..pn]:setstate(0)
						end
						if _G['g_headp'..pn] then
							_G['g_headp'..pn]:setstate(0)
						end
					end
				end
			end)
			
			m2(105,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:finishtweening();
						a:x(sw/2)
						a:z(3)
						a:y(sh/2)
						a:zoom(1)
						a:rotationz(0)
					end
					local a = GetJud(pn)
					if a then
						a:x(160*(pn*2-3))
					end
					local a = GetCom(pn)
					if a then
						a:basezoomx(0)
						a:basezoomy(0)
						a:x(160*(pn*2-3))
					end
				end
			end,true)
			
			m(104,109,'*1000 stealth, *1000 -100 reverse',e)
			m(104,140,'*1000 250 invert',e,1)
			m(104,140,'*1000 -250 invert',e,2)
			
			m(105,4,'*1000 hidden',l);
			m(109,1,'*1000 no hidden',l);
			
			me(107,5,50,0,'stealth',l,linear)
			me(107,5,-100,0,'reverse',l,inOutQuad)
			
			m2(112,'GameOff');
			
			m2(118,function()
				for pn=1,2 do
					local a = GetCom(pn)
					if a then
						a:basezoomx(1)
						a:basezoomy(1)
					end
				end
			end,true)
			
			m2(120,function()
				ama_normalbgfg:diffusealpha(0);
				ama_flashback:diffusealpha(0);
				ama_normalbg:diffusealpha(1);
				ama_game:hidden(1)
			end,true)
			
			for i=112,140,2 do
				m(i+0,0.25,'*1000 30 stealth',l,1)
				m(i+0.25,0.25,'*1000 no stealth',l,1)
				m(i+0.5,0.25,'*1000 30 stealth',l,1)
				m(i+0.75,0.25,'*1000 no stealth',l,1)
				m(i+1,0.25,'*1000 30 stealth',l,2)
				m(i+1.25,0.25,'*1000 no stealth',l,2)
				m(i+1.5,0.25,'*1000 30 stealth',l,2)
				m(i+1.75,0.25,'*1000 no stealth',l,2)
			end
			
			me(140,144,250,0,'invert',e,inOutQuad,1)
			me(140,144,-250,0,'invert',e,inOutQuad,2)
			me(140,144,0,50,'brake',e,inOutQuad)
			
			m(144,176,'50 brake',e)
			m(176,205.5,'50 brake',e)
			
			m(107,140,'*10000 0.5x, *10000 C500',e)
			
			--m(112,140,'*30 400 wave',e)
			
			me(115,140,0,400,'wave',e,outQuad)
			
			me(140,4,400,0,'wave',l,linear)
			
			simple_m0d2(127-.2,220,.6,'distant',1)
			simple_m0d2(129-.2,220,.6,'distant',2)
			simple_m0d2(131-.2,220,.6,'distant',1)
			simple_m0d2(133-.2,220,.6,'distant',2)
			simple_m0d2(135-.2,220,.6,'distant',1)
			
			--m(111.5,139.5,'*1000 150 beat',e)
			
			
			function mod_ease_wiggle(doot,mult,mod,max)
				if not max then max = mult end
				local fluct = 1
				for i=1,table.getn(doot)-1 do
				
					local m = mult + (max-mult)*((i-1)/table.getn(doot))
				
					local b = doot[i][1]
					local len = doot[i+1][1]-doot[i][1]
					local tlen = math.min(len,1)
					local sus = len-tlen
					local amt = -100*fluct*m
					local newamt = 100*fluct*m
					if i == 1 then
						amt = 0
					end
					me(b,tlen,amt,newamt,mod,l,outQuad,nil,sus)
					fluct=fluct*-1
				end
			end
			
			mod_wiggle(118.5,2,2,200,1,'drunk');
			mod_wiggle(124,6,2,200,1,'drunk');
			
			me(136,1,0,100,'drunk',l,outQuad)
			me(137,1,100,-100,'drunk',l,outQuad)
			me(138,0.5,-100,100,'drunk',l,outQuad)
			me(138.5,1,100,-100,'drunk',l,outQuad)
			me(139.5,4.5,-100,0,'drunk',l,outElastic,nil,nil,2,1)
			
			me(143,1,-200,0,'tipsy',l,outQuad)
			
			mod_ease_wiggle(easewiggles,1,'tipsy')
			
			
			
			-----------------------------------
			-------------verse1
			
			me(140,4,0,100,'centered',l,linear)
			m(144,232,'*1000000 centered',e,1)
			m(144,233.5,'*1000000 centered',e,2)
			m2(140,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(240/256)
						a:zoomz(0)
						a:x(sw/2)
					end
				end
			end)
			m2(144,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:zoomz(0)
						a:x(sw/2)
					end
				end
			end,true)
			
			--
			
			function ama_rotateto(beat,ang,dur)
				m2(beat,function()
					local new = ama_angle:GetX()
					ama_angle:stoptweening()
					ama_angle:accelerate(dur*0.33*60/256)
					ama_angle:x((new+ang)/2)
					ama_angle:decelerate(dur*0.66*60/256)
					ama_angle:x(ang)
				end)
			end
			
			
			
			
			
			ama_rotateto(150,180,3)
			ama_rotateto(158,0,3)
			ama_rotateto(166,-180,3)
			ama_rotateto(174,-45,3)
			ama_rotateto(182,45,3)
			ama_rotateto(190,-135,3)
			ama_rotateto(198,-225,3)
			
			m2(206,function()
				ama_angle:stoptweening()
				ama_angle:decelerate(2*60/256)
				ama_angle:x(-360)
				ama_angle:sleep(0)
				ama_angle:x(0)
				
				local a = Plr(2)
				if a then
					a:y(sh/2 - sh/2 - 64)
					a:decelerate(120/256)
					a:y(sh/2 - 32)
				end
				
				for pn=1,2 do
					local a = GetJud(pn)
					if a then
						a:decelerate(120/256)
						a:x(0)
					end
					local a = GetCom(pn)
					if a then
						a:decelerate(120/256)
						a:x(0)
					end
				end
				
			end)
			
			m2(210,function()
				ama_angle:stoptweening()
				ama_angle:x(0)
				
				local a = Plr(2)
				if a then
					a:y(sh/2 - 32)
				end
				
				for pn=1,2 do
					local a = GetJud(pn)
					if a then
						a:x(0)
					end
					local a = GetCom(pn)
					if a then
						a:x(0)
					end
				end
				
			end,true)
			
			m(206,236.5,'*1000 reverse,*1000 1.5x,*100000 no bumpy,*10000 no sudden,*100 no brake',e,2)
			m(208,236.5,'*1000 no reverse,*1000 1.5x,*100000 no bumpy,*10000 no sudden,*100 no brake',e,1)
			
			function ama_dolphinto(beat,p,dur)
				m2(beat,function()
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							if p == pn then
								a:y( sh/2 - (sh/2 + 74)*(pn*2-3) )
								a:accelerate( dur*0.5*60/256 )
								a:y( ((sh/2 - (sh/2 + 74)*(pn*2-3)) + (sh/2 + 32*(pn*2-3)))/2 )
								a:decelerate( dur*0.5*60/256 )
								a:y( sh/2 - 32*(pn*2-3) )
							else
								a:y( sh/2 - 32*(pn*2-3) )
								a:accelerate( dur*0.5*60/256 )
								a:y( ((sh/2 - (sh/2 + 74)*(pn*2-3)) + (sh/2 + 32*(pn*2-3)))/2 )
								a:decelerate( dur*0.5*60/256 )
								a:y( sh/2 - (sh/2 + 74)*(pn*2-3) )
							end
						end
					end
				end)
			end
			
			function ama_digto(beat,where,dur)
				m2(beat,function()
					
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							if math.abs(a:GetY()-sw/2) > 200 then
								a:linear(dur*60/256)
								a:x(where)
							end
						end
					end
					
				end)
			end
			
			if FUCK_EXE then
				m(0,104,'*1000 -80 drawsizeback',e)
			end
			
			if FUCK_EXE then
				m(140,240,'*1000 -80 drawsizeback',e)
			end
			
			m(213,235,'*1000 no flip, *1000 no invert',e)
			if not slumpo then
				me(211,6,00,00,'flip',l,linear,1)
				me(215,6,100,100,'flip',l,linear,2)
				me(219,6,0,0,'flip',l,linear,1)
				me(223,6,100,100,'flip',l,linear,2)
			else
				me(211,6,100,100,'flip',l,linear,1)
				me(215,6,100,100,'invert',l,linear,2)
				me(219,6,100,100,'flip',l,linear,1)
				me(223,6,100,100,'invert',l,linear,2)
			end
			
			ama_dolphinto(211,1,2)
			ama_digto( 213, sw*0.25, 1 )
			ama_dolphinto(215,2,2)
			ama_digto( 217, sw*0.75, 1 )
			ama_dolphinto(219,1,2)
			ama_digto( 221, sw*0.5, 1 )
			ama_dolphinto(223,2,2)
			ama_digto( 225, sw*0.25, 1 )
			ama_dolphinto(227,1,2)
			ama_digto( 229, sw*0.75, 1 )
			--ama_dolphinto(231,2,2)
			
			m2(232,function()
				local a = Plr(1)
				if a then
					a:decelerate(90/256)
					a:y(sh/2)
				end
			end)
			m2(233.5,function()
				local a = Plr(2)
				if a then
					a:decelerate(90/256)
					a:y(sh/2)
				end
			end)
			
			me(232,233.5,2,2.5,'xmod',e,outQuad,1,236.5)
			me(233.5,235,2,2.5,'xmod',e,outQuad,2,236.5)
			
			me(232,233.5,100,0,'centered',e,outQuad,1,236.5)
			
			me(233.5,235,100,0,'centered',e,outQuad,2,236.5)
			me(233.5,235,100,0,'reverse',e,outQuad,2,236.5)
			
			
			
			m2(236.5,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:linear(90/256)
						a:x(sw/2)
						if pn == 1 then a:z(1) else a:z(0) end
					end
				end
			end)
			m2(256,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						if pn == 2 then a:z(1) else a:z(0) end
					end
				end
			end)
			
			me(236.5,238,0,100,'mini',e,linear,nil,272);
			
			me(236.5,238,2.5,1.04,'xmod',e,linear,nil,272);
			
			me(236.5,238,0,100,'sudden',e,linear,nil,272);
			m(236,272,'*1000 -10 suddenoffset',e)
			
			me(240,16,0,200,'centered',l,linear,1)
			me(256,16,200,0,'centered',l,linear,1)
			me(240,16,200,0,'centered',l,linear,2)
			me(256,16,0,200,'centered',l,linear,2)
			
			me(236.5,238,0,100,'reverse',e,linear,2)
			me(236.5,238,0,200,'centered',e,linear,2)
			me(236.5,238,2.5,0,'xmod',e,linear,2,252)
			m(238,272,'*1000 reverse, *1000 200 centered',e,2)
			
			m(240,254,'*10000 stealth',e,2)
			m(254,268,'*10000 stealth',e,1)
			m(240,254,'*10000 dark',e,1)
			m(254,268,'*10000 dark',e,2)
			
			me(252,4,0,100,'stealth',l,linear,1)
			me(252,4,0,100,'dark',l,linear,2)
			me(252,4,100,0,'stealth',l,linear,2)
			me(252,4,100,0,'dark',l,linear,1)
			
			me(252,4,0,1.04,'xmod',l,outQuad,2);
			me(268,4,1.04,0,'xmod',l,outQuad,2);
			
			me(252,256,1.04,0,'xmod',e,outQuad,1,268);
			me(268,4,0,1.04,'xmod',l,outQuad,1);
			
			me(268,4,100,0,'stealth',l,linear,1)
			me(268,4,100,0,'dark',l,linear,2)
			me(268,4,0,100,'stealth',l,linear,2)
			
			m(272,1,'*10000 no reverse, *10000 no centered',l,2)
			me(272,276,0,40,'centered',e,outQuad,nil,314)
			me(272,276,0,20,'reverse',e,outQuad,nil,314)
			
			m2(268,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:x(sw/2 + 160*(pn*2-3) )
						a:z(0)
						a:zoomz(1)
					end
				end
			end,true)
			
			
			
			
			-------------------------------
			--bubbles
			
			--[[
			m(287.5,9,'*10000 150 beat',l)
			m(303.5,5,'*10000 150 beat',l)
			]]
			for i=288,296 do
				me(i,.8,50,100,'mini',l,outQuad)
			end
			m(296,304,'*10 dizzy',e)
			simple_m0d2(300,200,.8,'bumpy')
			simple_m0d2(302,200,.8,'bumpy')
			for i=304,308 do
				me(i,.8,50,100,'mini',l,outQuad)
			end
			
			m2(271,function()
				
				for i=1,table.getn(ama_bubbles[2]) do
						
					local a = ama_bubbles[2][i]
					
					if a then
						a:x( math.random() * sw*0.8 + sw*0.1 )
						a:y( math.random() * sh )
						a:aux( math.random() * 2 * math.pi )
						a:zoomz( 0.8+math.random()*0.4 )
					end
					
				end
				
				ama_ddr:hidden(0)
				
				ama_bubblecover:diffusealpha(1)
				ama_bubblecover:sleep(60/256)
				ama_bubblecover:linear(240/256)
				ama_bubblecover:diffusealpha(0)
				
			end)
			
			m2(272,function()
				ama_control:decelerate(480/256)
				ama_control:x(160)
				
			end)
			
			m(272,314,'*100 mini, *100 sudden, *100 30 suddenoffset',e)
			
			m2(308,function()
				local a = Plr(2)
				if a then
					a:z(5)
					a:y( ama_ypos[2] )
					a:linear(6*60/256)
					a:y(sh+200)
					a:rotationz(720)
				end
				
				ama_bubbles[1][2]:setstate(1)
				ama_bubbles[1][2]:linear(.4)
				ama_bubbles[1][2]:diffusealpha(0)
				ama_bubbles[1][2]:zoom(.9)
				
				ama_bubblecover:linear(240/256)
				ama_bubblecover:diffusealpha(1)
				
			end)
			
			m2(312,function()
				
				ama_ddr:hidden(1)
				
			end)
			
			m2(408,function()
				
				ama_ddr:hidden(0)
				
				for i=1,table.getn(ama_bubbles[2]) do
						
					local a = ama_bubbles[2][i]
					
					if a then
						a:x( math.random() * sw*0.8 + sw*0.1 )
						a:y( math.random() * sh )
						a:aux( math.random() * 2 * math.pi )
						a:zoomz( 0.8+math.random()*0.4 )
					end
					
				end
				
				ama_bubble_container_af:hidden(0)
				ama_bubblecover:diffusealpha(1)
				ama_bubblecover:linear(240/256)
				ama_bubblecover:diffusealpha(0)
				
			end)
			m2(464,function()
				
				ama_bubblecover:linear(480/256)
				ama_bubblecover:diffusealpha(1)
				
			end)
			
			m(312,2,'*1000 stealth',l)
			
			m(314,1,'*1000 no centered, *1000 no stealth',l)
			
			--[[
			m2(314,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:x(sw/2 + 160*(pn*2-3))
						a:y(sh+64)
						a:rotationx(0)
						a:rotationy(0)
						a:rotationz(0)
					end
				end
			end)
			
			m2(314,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:decelerate(120/256)
						a:y(sh/2 + 0.66*((sh+64) - (sh/2)) )
						a:decelerate(120/256)
						a:y(sh/2 + 0.33*((sh+64) - (sh/2)) )
						a:decelerate(120/256)
						a:y(sh/2)
					end
				end
			end)
			
			me(314,2,50,33,'reverse',l,outQuart)
			me(316,2,33,16,'reverse',l,outQuart)
			me(318,2,16,0,'reverse',l,outQuart)
			]]
			
			
			
			
			---------------------------------
			---conveyor
			---------------------------------
			
			if FUCK_EXE then
				m(312,384,'*1000 -80 drawsizeback',e)
			end
			
			m(312,384,'*10 90 reverse, *10 100 sudden, *1000 100 suddenoffset, -50 mini, 10 flip, *1000 2.2x',e);
			
			belt_vert_spacing = 160;
			
			
			m2(304,function()
				belt_addx:y(sh*0.6)
			end,true)
			
			m2(308,function()
				curl_belt_sizes:x(0)
				curl_belt_sizes:y(0)
				curl_belt_sizes:z(0)
				curl_belt_sizes:aux(0)
				belt_addx:y(sh*0.6)
				belt_addx:decelerate(240/256)
				belt_addx:y(0)
				curl_spawnbox(1 - 1,sh/2-100,1)
				curl_spawnbox(0 - 1,sh/2-100,2)
				curl_spawnbox(-1 - 1,sh/2-100,3)
				curl_spawnbox(-1 - 1,9999,4)
				curl_belt_control:x(0)
				
				ama_scanners:hidden(0);
				
				curl_fallspd = 0.075
				
				ama_bptr = 0
				
				for i=1,4 do
					local m = 1
					if math.mod(i,2) == 0 then
						m = -1
					end
					local b = ama_get_belt()
					if b then
						b.x = sw/2 + 100*m
						b.y = sh/2 + belt_vert_spacing*(i-1)
						b.active = true;
						b.actor:hidden(1);
					end
				end
				
				ama_game:playcommand('Reload')
				ama_game:hidden(0)
				MESSAGEMAN:Broadcast('WhiteOn')
				
				curl_belt_control:x(-2.5)
				
			end, true)
			
			m2(312,'Drip2');
			m2(314,'Drip3');
			m2(316,'Drip4');
			
			m2(314,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:finishtweening()
						a:rotationx(0)
						a:rotationy(0)
						a:rotationz(0)
					end
				end
			end,true)
			
			m2(314,function()
				curl_belt_sizes:decelerate(90/256)
				curl_belt_sizes:x(1)
				curl_belt_sizes:sleep(30/256)
				curl_belt_sizes:decelerate(90/256)
				curl_belt_sizes:y(1)
				curl_belt_sizes:sleep(30/256)
				curl_belt_sizes:decelerate(90/256)
				curl_belt_sizes:z(1)
				curl_belt_sizes:aux(1)
				curl_belt_sizes:sleep(30/256)
				
			end)
			
			m2(320.5,function()
				curl_spawnbox(-1 - 1,nil,4)
			end)
			
			
			m(352,382,'bumpy, 50 wave, 2.8x',e)
			
			mod_ease_wiggle(easewiggles3,.5,'drunk',.8);
			mod_ease_wiggle(easewiggles4,.5,'drunk',1.1);
			
			
			
			
			
			
			
			m2(377,function()
				MESSAGEMAN:Broadcast('GameUp')
				ama_game:hidden(0)
			end)
			
			m2(379.5,function()
				curl_belt_sizes:accelerate(180/256)
				curl_belt_sizes:x(0)
				curl_belt_sizes:y(0)
				curl_belt_sizes:z(0)
				curl_belt_sizes:aux(0)
				
			end)
			
			-----------------------------------
			
			m2(384,function()
				for pn=1,2 do
					if GAMESTATE:IsPlayerEnabled(pn-1) then
						if _G['g_bodyp'..pn] then
							_G['g_bodyp'..pn]:setstate(0)
						end
						if _G['g_headp'..pn] then
							_G['g_headp'..pn]:setstate(0)
						end
					end
				end
			end)
			
			m2(385,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:finishtweening();
						a:x(sw/2)
						a:z(3)
						a:y(sh/2)
						a:zoom(1)
						a:rotationz(0)
						a:skewx(0)
					end
					local a = GetJud(pn)
					if a then
						a:x(160*(pn*2-3))
					end
					local a = GetCom(pn)
					if a then
						a:basezoomx(0)
						a:basezoomy(0)
						a:x(160*(pn*2-3))
					end
				end
				ama_scanners:hidden(1)
			end,true)
			
			m(384,397,'*1000 stealth, *1000 -100 reverse',e)
			m(384,999,'*1000 250 invert',e,1)
			m(384,999,'*1000 -250 invert',e,2)
			
			m(385,12,'*1000 hidden',l);
			m(397,1,'*1000 no hidden',l);
			
			me(397,7,50,0,'stealth',l,linear)
			me(397,7,-100,0,'reverse',l,inOutQuad)
			
			m2(400,'GameOff');
			
			m2(400,function()
				for pn=1,2 do
					local a = GetCom(pn)
					if a then
						a:basezoomx(1)
						a:basezoomy(1)
					end
				end
			end,true)
			
			m2(408,function()
				ama_normalbgfg:diffusealpha(0);
				ama_flashback:diffusealpha(0);
				ama_normalbg:diffusealpha(1);
				ama_game:hidden(1)
			end,true)
			
			
			----------------------
			--ending
			
			--[[
			for i=1,3 do
				me(400+i*8,3.5,0,100,'tornado',l,outQuad,nil,2)
				me(405.5+i*8,2,100,0,'tornado',l,outQuad)
				me(400+i*8,3.5,0,100,'tipsy',l,outQuad,nil,2)
				me(405.5+i*8,2,100,0,'tipsy',l,outQuad)
			end
			]]
			
			local function chururu(beat)
				
				local b = beat
				me(b+0.0,.5,0,100,'drunk',l,outQuad)
				me(b+0.5,.5,100,-100,'drunk',l,outQuad)
				me(b+1.0,.5,-100,100,'drunk',l,outQuad)
				me(b+1.5,1,100,-100,'drunk',l,outQuad)
				me(b+2.5,1,-100,0,'drunk',l,outQuad)
				
				me(b+3.5,2,0,100,'tornado',l,outQuad)
				me(b+5.5,1,100,0,'tornado',l,outQuad)
				
			end
			
			for i=1,7 do
				chururu(i*8+400)
			end
			
			--wenis
			
			if slumpo then
				m(400,460,'*10000 0.7x, *10000 C500',e)
				me(400,460,0,240,'wave',e,outQuad)
				me(460,4,240,0,'wave',l,linear)
			else
				m(400,460,'*10000 0.5x, *10000 C500',e)
				me(400,460,0,360,'wave',e,outQuad)
				me(460,4,360,0,'wave',l,linear)
			end
			
			
			
			
			
			ama_fps = 60
			
			simple_m0d2(306+127-.2,100,.6,'distant',1)
			simple_m0d2(306+129-.2,100,.6,'distant',2)
			simple_m0d2(306+131-.2,100,.6,'distant',1)
			simple_m0d2(306+133-.2,100,.6,'distant',2)
			
			mod_wiggle(444,6,2,200,1,'drunk');
			
			mod_ease_wiggle(easewiggles2,.8,'tipsy');
			
			me(464,8,250,0,'invert',l,linear,1,999)
			me(464,8,-250,0,'invert',l,linear,2,999)
			
			--me(464,8,0,50,'drunk',l,linear,nil,999)
			me(464,8,0,30,'flip',l,linear,nil,999)
			me(464,8,0,-100,'mini',l,linear,nil,999)
			me(464,8,0,60,'centered',l,linear,nil,999)
			me(464,8,2.5,1.6,'xmod',l,linear,nil,999)
			me(464,8,0,90,'brake',l,linear,nil,999)
			
			m2(464-.1,function()
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:zoom(1)
						a:zoomz(1)
						a:z(0)
						a:rotationx(0)
						a:rotationy(0)
						a:rotationz(0)
						a:linear(.1)
						a:rotationz(20*(pn*2-3))
						a:linear(180/256 - .1)
						a:rotationz(0)
						a:linear(.1)
						a:rotationz(-20*(pn*2-3))
						a:linear(180/256 - .1)
						a:rotationz(0)
						a:sleep(0)
						a:rotationz(360*(pn*2-3))
						a:decelerate(120/256)
						a:rotationz(0)
						a:sleep(0)
					end
				end
				
				SongForeground:z(0)
				
				ama_bamboozle:hidden(0)
				ama_bamboozle:x(sw/2 + 10)
				ama_bamboozle:setstate(0)
				ama_bamboozle:linear(8*60/256)
				ama_bamboozle:addy(-240)
				
			end)
			
			m2(476,function()
				ama_bamboozle:setstate(1)
				ama_bamboozle:sleep(1)
				ama_bamboozle:accelerate(.3)
				ama_bamboozle:addy(240)
				
				MESSAGEMAN:Broadcast('Heart')
			end)
			
			
			----------------------------------
			-----------fill stuff
			
			me(67.5,1,0,-100,'mini',l,outQuad)
			me(68.5,1,-100,0,'mini',l,outQuad)
			me(69.5,1,0,-100,'mini',l,outQuad)
			me(70.5,1,-100,0,'mini',l,outQuad)
			
			me(67.5,1,2.5,1.5,'xmod',l,outQuad)
			me(68.5,1,1.5,2.5,'xmod',l,outQuad)
			me(69.5,1,2.5,1.5,'xmod',l,outQuad)
			me(70.5,1,1.5,2.5,'xmod',l,outQuad)
			
			me(67.5,1,0,100,'tornado',l,outQuad)
			me(68.5,1,100,0,'tornado',l,outQuad)
			me(69.5,1,0,100,'flip',l,outQuad)
			me(70.5,1,100,0,'flip',l,outQuad)
			
			me(347.5,1,0,-100,'mini',l,outQuad)
			me(348.5,1,-100,0,'mini',l,outQuad)
			me(349.5,1,0,-100,'mini',l,outQuad)
			me(350.5,1,-100,0,'mini',l,outQuad)
			
			me(347.5,1,2.5,1.5,'xmod',l,outQuad)
			me(348.5,1,1.5,2.5,'xmod',l,outQuad)
			me(349.5,1,2.5,1.5,'xmod',l,outQuad)
			me(350.5,1,1.5,2.5,'xmod',l,outQuad)
			
			me(347.5,1,0,100,'tornado',l,outQuad)
			me(348.5,1,100,0,'tornado',l,outQuad)
			me(349.5,1,0,100,'flip',l,outQuad)
			me(350.5,1,100,0,'flip',l,outQuad)
			
			m2(205.5,function()
				ama_xd:hidden(0)
				ama_xd:animate(0)
				ama_xd:setstate(0)
			end)
			m2(207,function()
				ama_xd:setstate(1)
			end)
			m2(208.5,function()
				ama_xd:hidden(1)
			end)
			
			for i=0,3 do
				
				simple_m0d2(8*i+240-.1,100,.5,'tipsy')
				mod_wiggle(8*i+241-.1,3,2,200,1.2,'drunk')
				simple_m0d2(8*i+243-.1,100,.5,'tipsy')
				mod_wiggle(8*i+244-.1,3,2,-200,1.2,'drunk')
				
			end
			
			me(272,276,0,70,'drunk',e,outQuad,1,308)
			me(272,276,0,-70,'drunk',e,outQuad,2,308)
			me(308,4,70,0,'drunk',e,linear,1)
			me(308,4,-70,0,'drunk',e,linear,2)
			
			
			
			m(86,2,'*10000 2512 dizzy',l)
			m(88,1,'*10000 no dizzy',l)
			m(366,2,'*10000 2512 dizzy',l)
			m(368,1,'*10000 no dizzy',l)
			
			m2(366,function()
			
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:vibrate()
						a:effectmagnitude(0,20,0)
					end
				end
				
			end)
			m2(368,function()
			
				for pn=1,2 do
					local a = Plr(pn)
					if a then
						a:stopeffect()
					end
				end
				
			end)
			
			if FUCK_EXE then
				m(240,272,'*10000 stealthpastreceptors',e)
			end
			
			for i=404,463,2 do
				m(i+0,0.25,'*1000 30 stealth',l,1)
				m(i+0.25,0.25,'*1000 no stealth',l,1)
				m(i+0.5,0.25,'*1000 30 stealth',l,1)
				m(i+0.75,0.25,'*1000 no stealth',l,1)
				m(i+1,0.25,'*1000 30 stealth',l,2)
				m(i+1.25,0.25,'*1000 no stealth',l,2)
				m(i+1.5,0.25,'*1000 30 stealth',l,2)
				m(i+1.75,0.25,'*1000 no stealth',l,2)
			end
			
			function simple_k1ck(beat,amt,dur,mod,pn)
				me(beat,dur,amt,0,mod,l,outQuad,pn)
			end
			function simple_k1ck2(beat,amt,dur,mod,pn)
				me(beat-.25,.25,0,amt,mod,l,linear,pn,.1)
				me(beat+.1,dur-.35,amt,0,mod,l,outQuad,pn)
			end
			
			simple_k1ck(300,300,1,'bumpy')
			
			simple_k1ck2(464,300,2.5,'drunk')
			simple_k1ck2(464,300,2.5,'tipsy')
			
			simple_k1ck2(467,-300,2.5,'drunk')
			simple_k1ck2(467,300,2.5,'tipsy')
			
			ama_game1score = {-1,-1}
			ama_game2score = {-1,-1}
			
			m2(110,function()
			
				local anyright = false
				
				for pn=1,2 do
					if GAMESTATE:IsPlayerEnabled(pn-1) then
						
						if ama_game1score[pn] > 3 and not GAMESTATE:IsCourseMode() or GAMESTATE:IsCourseMode() and _G['loot_scoreP'..pn] > _G['loot_mainscore'..pn] then
							_G['g_bodyp'..pn]:setstate(1)
							_G['g_headp'..pn]:setstate(1)
							anyright = true
							MESSAGEMAN:Broadcast('RightP'..pn)
							ama_bonus[pn] = ama_bonus[pn]+0.5
						else
							MESSAGEMAN:Broadcast('P'..pn..'Fuckup');
						end
						
					end
				end
				
				if anyright then
					taro_Sound('good')
				else
					taro_Sound('glass')
					taro_Sound('wrong')
				end
				
			end)
			
			m2(398,function()
			
				local anyright = false
				
				for pn=1,2 do
					if GAMESTATE:IsPlayerEnabled(pn-1) then
						
						if ama_game2score[pn] > 7 and not GAMESTATE:IsCourseMode() or GAMESTATE:IsCourseMode() and _G['loot_scoreP'..pn] > _G['loot_mainscore'..pn] then
							_G['g_bodyp'..pn]:setstate(1)
							_G['g_headp'..pn]:setstate(1)
							anyright = true
							MESSAGEMAN:Broadcast('RightP'..pn)
							ama_bonus[pn] = ama_bonus[pn]+0.5
						else
							MESSAGEMAN:Broadcast('P'..pn..'Fuckup');
						end
						
					end
				end
				
				if anyright then
					taro_Sound('good')
				else
					taro_Sound('glass')
					taro_Sound('wrong')
				end
				
			end)
			
			m2(481.25,function()
				
				if FUCK_EXE and STATSMAN:GetCurStageStats() then
					for pn = 1,2 do
						if GAMESTATE:IsPlayerEnabled(pn-1) then
							local poss = STATSMAN:GetCurStageStats():GetPlayerStageStats(pn-1):GetPossibleDancePoints()
							local act = STATSMAN:GetCurStageStats():GetPlayerStageStats(pn-1):GetActualDancePoints()
							
							STATSMAN:GetCurStageStats():GetPlayerStageStats(pn-1):SetPossibleDancePoints( poss + (poss/100) )
							
							_G['uksrt_p'..pn..'bonus'] = ama_bonus[pn]
							_G['uksrt_p'..pn..'moneyscore'] = ama_bonus[pn]
							local bonus = ama_bonus[pn]*(poss/100)
							
							STATSMAN:GetCurStageStats():GetPlayerStageStats(pn-1):SetActualDancePoints(act+bonus)
							
						end
					end
				end
				
			end)
			
			m22(12,function()
				
				ama_cast:hidden(0)
				ama_cast:x(sw/2 + 100)
				ama_cast:y(sh + 384)
				ama_cast:decelerate(.4)
				ama_cast:y(sh + 40)
				
			end)
			
			m22(15,function()
				
				ama_cast:playcommand('Cast')
				ama_cast:sleep(.8)
				ama_cast:accelerate(.4)
				ama_cast:y(sh + 384)
				ama_cast:queuecommand('Hide')
				ama_cast:queuecommand('Return')
				
			end)
			
			m22(154,function()
				
				ama_cast:hidden(0)
				ama_cast:zoom(.9)
				ama_cast:zoomx(-.9)
				ama_cast:x(sw/2 - 160)
				ama_cast:y(sh + 384)
				ama_cast:decelerate(.4)
				ama_cast:y(sh + 30)
				
			end)
			
			m22(155,function()
				
				ama_cast:playcommand('Cast')
				ama_cast:sleep(.8)
				ama_cast:accelerate(.4)
				ama_cast:y(sh + 384)
				ama_cast:queuecommand('Hide')
				ama_cast:queuecommand('Return')
				
			end)
			
			m22(189.75,function()
				
				ama_flashback:linear(120/128)
				ama_flashback:diffusealpha(1)
				
				ama_normalbg:linear(120/128)
				ama_normalbg:diffusealpha(0)
				ama_bubblecover:diffusealpha(0)
				ama_bubble_container_af:hidden(1)
				
			end)
			
			m22(199,function()
				
				ama_flashback:linear(120/128)
				ama_flashback:diffusealpha(0)
				
				ama_normalbg:linear(120/128)
				ama_normalbg:diffusealpha(1)
				
			end)
			
			m2(140,function()
				ama_mini:hidden(0)
			end)
			m2(212,function()
				ama_mini:hidden(1)
			end)
			ama_mini_lastx = -9999
			
			
			
			
			
			
			
			--[[
			ama_science1 = {
				{107,0},
				{107.5,2},
				{108,1},
				{108.5,3},
			
				{387,0},
				{387.5,1},
				{388,3},
				{388.5,1},
			
				{395,1},
				{395.5,2},
				{396,2},
				{396.5,1},
				
				{9999,0},
			}
			]]
			
			m2(4,function()
				
				if FUCK_EXE then
					for pn=1,2 do
						local a = Plr(pn)
						if a then
						
							ama_science[pn] = {}
							
							local stuff = {
								a:GetNoteData(52,56),
								a:GetNoteData(192,202),
							}
							
							for i=1,table.getn(stuff) do
								for j=1,table.getn(stuff[i]) do
									
									if stuff[i][j] and stuff[i][j][3] ~= 'M' and stuff[i][j][3] < 100 then
										--Trace(tostring(stuff[i][j][3]))
										table.insert(ama_science[pn],{stuff[i][j][1]*2,stuff[i][j][2]})
									end
									
								end
							end
							
							table.insert(ama_science[pn],{9999,0})
							
						end
					end
				end
				
			end,true)
			
			
			
			
---------------------------------------------------------------------------------------
----------------------Sort the actions table-------------------------------------------
---------------------------------------------------------------------------------------
			
			function modtable_compare(a,b)
				return a[1] < b[1]
			end
			
			if table.getn(mod_actions) > 1 then
				table.sort(mod_actions, modtable_compare)
			end
			
			ama_flicker = 1
			
			ama_ypos = {sh*0.333,sh*0.666*1.1,sh*1,sh*1.333}
			
			self:queuecommand('Update');
			
		end"
		
		UpdateCommand="%function(self)

			if GAMESTATE:GetSongBeat()>=0 and not checked then
			
				local ThingsToGrab = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame',
										'Lyrics','SongBackground','SongForeground','Overlay','Underlay'}
				local ThingsToHide = {'LifeP1','LifeP2','BPMDisplay','LifeFrame','ScoreFrame','Overlay','Underlay'}
				
				for i,v in ipairs(ThingsToGrab) do
					_G[v] = SCREENMAN:GetTopScreen():GetChild(v) or nil
				end
				
				for i,v in ipairs(ThingsToHide) do
					if _G[v] then _G[v]:hidden(1) end
				end
				
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				
				--name players, judgment and combo
				for pn=1,2 do
					_G['P'..pn] = SCREENMAN:GetTopScreen():GetChild('PlayerP'..pn) or nil;
					if _G['P'..pn] then
						_G['jud'..pn] = _G['P'..pn]:GetChild('Judgment');
						_G['com'..pn] = _G['P'..pn]:GetChild('Combo');
					end
					
					if _G['ScoreP'..pn] then 
						_G['ScoreP'..pn]:zoom(0)
					end
					
				end
				
				screen = SCREENMAN:GetTopScreen();
				checked = true; --let this only run once
				
				screen:SetDrawByZPosition(true)
				
				if SongForeground then
					SongForeground:z(2)
				end
				
			end

			local beat = GAMESTATE:GetSongBeat()*2
			
---------------------------------------------------------------------------------------
----------------------Begin table handlers---------------------------------------------
---------------------------------------------------------------------------------------
			
			disable = false;
			if disable ~= true and beat > mod_firstSeenBeat+0.1 and checked then
			
				ama_flicker = ama_flicker*-1;
				
				-----------------------
				-- Player mod resets --
				-----------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i=1,2 do
						mod_do('clearall',i)
					end
				end
				
				------------------------------------------------------------------------------
				-- custom mod reader by TaroNuke edited by WinDEU and re-stolen by TaroNuke --
				------------------------------------------------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i,v in pairs(mods) do
						if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
							if beat >=v[1] then
								if (v[4] == 'len' and beat <=v[1]+v[2]) or (v[4] == 'end' and beat <=v[2]) then
									if table.getn(v) == 5 then
										mod_do(v[3],v[5]);
									else
										mod_do(v[3]);
									end
								end
							end
						else
							v[1] = 0;
							v[2] = 0;
							v[3] = '';
							v[4] = 'error';
							SCREENMAN:SystemMessage('Bad mod in beat-based table (line '..i..')');
						end
					end
				end
				
				-----------------------------------------------------------------------------------------------------
				-- WinDEU's time-based len/end version of the #swag custom mod reader #teamproofofconcept (c) 2015 --
				-----------------------------------------------------------------------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					for i,v in pairs(mods2) do
						if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
							if mod_time >=v[1] then
								if (v[4] == 'len' and mod_time <=v[1]+v[2]) or (v[4] == 'end' and mod_time <=v[2]) then
									if table.getn(v) == 5 then
										mod_do(v[3],v[5]);
									else
										mod_do(v[3]);
									end
								end
							end
						else
							v[1] = 0;
							v[2] = 0;
							v[3] = 'error';
							v[4] = 'error';
							SCREENMAN:SystemMessage('Bad mod in time-based table (line '..i..')');
						end
					end
				end
				
				--------------------------------------------------------------------------------------
				-- i dont know who this reader is but he looks like he is made out of EASE HAHAHAHA --
				-- original code by exschwasion, bastardized by taro for cmod support and less 'if' --
				--------------------------------------------------------------------------------------
				for i,v in pairs(mods_ease) do
					if v and table.getn(v) > 6 and v[1] and v[2] and v[3] and v[4] and v[5] and v[6] and v[7] then
						if beat >=v[1] then
							if (v[6] == 'len' and beat <=v[1]+v[2]) or (v[6] == 'end' and beat <=v[2]) then
								
								local duration = v[2];
								if v[6] == 'end' then duration = v[2] - v[1] end
								local curtime = beat - v[1]
								local diff = v[4] - v[3]
								local startstrength = v[3]
								local curve = v[7]
								local mod = v[5]
								
								local strength = curve(curtime, startstrength, diff, duration, v[10], v[11]) --extra parameters for back and elastic eases :eyes:
								
								local modstr = v[5] == 'xmod' and strength..'x' or (v[5] == 'cmod' and 'C'..strength or strength..' '..v[5])
								mod_do('*10000 '..modstr,v[8]);
								
							elseif (v[9] and ((v[6] == 'len' and beat <=v[1]+v[2]+v[9]) or (v[6] == 'end' and beat <=v[9]))) then
							
								local strength = v[4]
								
								local modstr = v[5] == 'xmod' and strength..'x' or (v[5] == 'cmod' and 'C'..strength or strength..' '..v[5])
								mod_do('*10000 '..modstr,v[8]);
								
							end
						end
					else
						SCREENMAN:SystemMessage('Bad mod in beat-based ease table (line '..i..')');
					end
				end
				
				--------------------
				-- Perframe stuff --
				--------------------
				
				game_update(beat)
				
				if beat > 16 and beat < 104 then
					
					physics_update(beat)
					
				end
				
				if beat > 308 and beat < 388 then
					
					physics_update(beat)
					
				end
				
				if beat > 140 and beat < 212 then
				
					local addx = -(sw/2 + 100)
					
					if beat >= 144 and beat < 148 then
						addx = -(sw/2 + 100)*(1-outQuart(beat-144,0,1,4))
					elseif beat >= 148 and beat < 206 then
						addx = 0
					elseif beat >= 204 and beat < 208 then
						addx = -(sw/2 + 100)*(inQuart(beat-204,0,1,4))
					else
						addx = -(sw/2 + 100)
					end
					
					ama_mini:x( sw/2 + addx -150*math.sin(math.rad(ama_angle:GetX())) )
					ama_mini:y( sh/2 + 112*.8 -112*math.cos(math.rad(ama_angle:GetX())) )
					
					if ama_mini_lastx > ama_mini:GetX()+1 then
						ama_mini:setstate(1)
						ama_mini:basezoomx(1)
					elseif ama_mini_lastx < ama_mini:GetX()-1 then
						ama_mini:setstate(1)
						ama_mini:basezoomx(-1)
					else
						ama_mini:setstate(0)
						ama_mini:basezoomx(1)
					end
					
					ama_mini_lastx = ama_mini:GetX()
					
				end
				
				if beat > 144 and beat < 208 then
				
					--ama_angle:x(beat*90/8)
					
					local wagger = math.min((beat-144)/32,1)
				
					local angr = math.rad(ama_angle:GetX()+90 + wagger*-15*math.sin(beat*0.5*math.pi))
					local angd = (ama_angle:GetX()+90 + wagger*-15*math.sin(beat*0.5*math.pi))
					
					local mult = 1
					if beat > 206 then
						mult = 1-((beat-206)/2)
					end
					
					for pn=1,2 do
						if pn == 1 or beat < 206 then
							local a = Plr(pn)
							if a then
								a:rotationx(mult*math.sin(angr))
								a:rotationy(mult*math.cos(angr))
								a:y( sh/2 + (1-(mult*mult))*(sh/2 + 64 ) )
							end
							--ref: cytokinesis
							--*4 50% Reverse,*4 50% Flip,*8 0.075x,*100000 100000% Bumpy,*10000 -95% SuddenOffset,*32 800% Sudden,50% Brake
							mod_do('*1000 49 reverse,*1000 0.06x,*100000 100000 bumpy,*10000 -95 suddenoffset,*1000 800 sudden',pn)
							mod_do('*1000 '..(25+25*math.cos(angr*2))..' flip')
						end
					end
					
				end
				
				--if beat > 206 then 
				if beat > 205.5 and beat < 208.5 then
					if beat > 205.5 and beat < 207 then
						ama_xd:y( sh - 220*outQuart((beat-205.5)/1.5,0,1,1) )
					elseif beat >= 207 and beat < 208 then
						ama_xd:y( sh - 220*(1-inQuart((beat-207)/1,0,1,1)) )
					elseif beat >= 208 then
						ama_xd:y(sh)
					end
				end
				
				if beat > 240 and beat < 256 then
					local pos = (beat-240)/16
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:x( sw/2 + (pn*2-3)*(-80+80*math.cos(pos*math.pi)) )
							--a:rotationz( (pn*2-3)*25*math.sin(pos*math.pi) )
							a:skewx( (pn*2-3)*-0.35*math.sin(pos*math.pi) )
							mod_do('*10000 '..((pn*2-3)*6*math.sin(pos*math.pi))..' dizzy',pn)
						end
					end
				end
				if beat > 256 and beat < 272 then
					local pos = (beat-240)/16
					for pn=1,2 do
						local a = Plr(pn)
						if a then
							a:x( sw/2 + (pn*2-3)*(-80+80*math.cos(pos*math.pi)) )
							--a:rotationz( (pn*2-3)*25*math.sin(pos*math.pi) )
							a:skewx( (pn*2-3)*-0.35*math.sin(pos*math.pi) )
							mod_do('*10000 '..((pn*2-3)*6*math.sin(pos*math.pi))..' dizzy',pn)
						end
					end
				end
				
				if beat > 272 and beat < 314 then
				
					ama_ym = (3 - 5*math.min((beat-272)/8,1))*1.1
					
					for i=1,4 do
						ama_ypos[i] = ama_ypos[i]+ama_ym
						if ama_ypos[i] < sh*-0.166 and beat < 300 then
							ama_ypos[i] = ama_ypos[i]+(sh+(sh*0.333))
						end
					end
				
					for pn=1,2 do
						local w = pn
						if ama_flicker == -1 then
							w = w+2
						end
						local a = Plr(pn)
						if a and (pn == 1 or beat < 308) then
							a:y(ama_ypos[w])
							a:x(sw/2 + ama_control:GetX()/160 * 100 *(pn*2-3) + 10*math.sin(beat*0.5*math.pi + w*0.125*math.pi) )
							a:rotationx( ama_control:GetX()/160 * 20 * math.sin( beat * 0.25 * math.pi ) )
							a:rotationy( ama_control:GetX()/160 * 20 * math.cos( beat * 0.25 * math.pi + w * 0.25 * math.pi ) )
							a:rotationz( ama_control:GetX()/160 * (pn*2-3) * 20 * math.sin( beat * 0.125 * math.pi ) )
							if w > 1 then
								a:zoom( ama_control:GetX()/160 )
							else
								a:zoom( 1 )
							end
						end
						local a = ama_bubbles[1][w]
						if a and (pn == 1 or beat < 308) then
							a:hidden(0)
							a:diffusealpha(.8)
							a:y(ama_ypos[w] + 15)
							a:x(sw/2 + ama_control:GetX()/160 * 100 *(pn*2-3) + 10*math.sin(beat*0.5*math.pi + w*0.125*math.pi) )
							a:zoom(.8 * ama_control:GetX()/160)
						end
					end
					
					for i=1,table.getn(ama_bubbles[2]) do
						
						local a = ama_bubbles[2][i]
						
						if a then
							a:hidden(0)
							a:diffusealpha(.4)
							a:addx( 2*math.sin(a:GetZoomZ()*beat*math.pi + a:getaux() ) )
							a:addy( -2 )
							a:zoom(.1)
							if a:GetY() < -50 then
								a:addy( sh + 100 )
							end
						end
						
					end
					
				end
				
				if beat > 104 and beat < 105 then
					
					loot_scoreP1prev = loot_scoreP1;
					loot_scoreP2prev = loot_scoreP2;
					
					if GAMESTATE:IsHumanPlayer(PLAYER_1) then
						local loot_scoreP1s = SCREENMAN:GetTopScreen():GetChild('ScoreP1'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP1'):GetText();
						if loot_scoreP1s then
							loot_mainscore1 = tonumber(string.sub(loot_scoreP1s,1,string.len(loot_scoreP1s) - 1) * 100);
						end
					end
					if GAMESTATE:IsHumanPlayer(PLAYER_2) then
						local loot_scoreP2s = SCREENMAN:GetTopScreen():GetChild('ScoreP2'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP2'):GetText();
						if loot_scoreP2s then
							loot_mainscore2 = tonumber(string.sub(loot_scoreP2s,1,string.len(loot_scoreP2s) - 1) * 100);
						end
					end
					
				elseif beat >= 105 and beat < 110 then
					
					if GAMESTATE:IsHumanPlayer(PLAYER_1) then
						local loot_scoreP1s = SCREENMAN:GetTopScreen():GetChild('ScoreP1'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP1'):GetText();
						if loot_scoreP1s then
							loot_scoreP1 = tonumber(string.sub(loot_scoreP1s,1,string.len(loot_scoreP1s) - 1) * 100);
						end
					end
					if GAMESTATE:IsHumanPlayer(PLAYER_2) then
						local loot_scoreP2s = SCREENMAN:GetTopScreen():GetChild('ScoreP2'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP2'):GetText();
						if loot_scoreP2s then
							loot_scoreP2 = tonumber(string.sub(loot_scoreP2s,1,string.len(loot_scoreP2s) - 1) * 100);
						end
					end
					
					if GAMESTATE:IsHumanPlayer(PLAYER_1) and loot_scoreP1 > loot_scoreP1prev and P1 then
						ama_game1score[1] = ama_game1score[1]+1
						--Trace( 'ama_game1score[1]++' )
					end
					if GAMESTATE:IsHumanPlayer(PLAYER_2) and loot_scoreP2 > loot_scoreP2prev and P2 then
						ama_game1score[2] = ama_game1score[2]+1
					end
					
					loot_scoreP1prev = loot_scoreP1;
					loot_scoreP2prev = loot_scoreP2;
					
				end
				
				if beat > 384 and beat < 385 then
					
					loot_scoreP1prev = loot_scoreP1;
					loot_scoreP2prev = loot_scoreP2;
					
					if GAMESTATE:IsHumanPlayer(PLAYER_1) then
						local loot_scoreP1s = SCREENMAN:GetTopScreen():GetChild('ScoreP1'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP1'):GetText();
						if loot_scoreP1s then
							loot_mainscore1 = tonumber(string.sub(loot_scoreP1s,1,string.len(loot_scoreP1s) - 1) * 100);
						end
					end
					if GAMESTATE:IsHumanPlayer(PLAYER_2) then
						local loot_scoreP2s = SCREENMAN:GetTopScreen():GetChild('ScoreP2'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP2'):GetText();
						if loot_scoreP2s then
							loot_mainscore2 = tonumber(string.sub(loot_scoreP2s,1,string.len(loot_scoreP2s) - 1) * 100);
						end
					end
					
				elseif beat >= 385 and beat < 398 then
					
					if GAMESTATE:IsHumanPlayer(PLAYER_1) then
						local loot_scoreP1s = SCREENMAN:GetTopScreen():GetChild('ScoreP1'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP1'):GetText();
						if loot_scoreP1s then
							loot_scoreP1 = tonumber(string.sub(loot_scoreP1s,1,string.len(loot_scoreP1s) - 1) * 100);
						end
					end
					if GAMESTATE:IsHumanPlayer(PLAYER_2) then
						local loot_scoreP2s = SCREENMAN:GetTopScreen():GetChild('ScoreP2'):GetChild('ScoreDisplayPercentage Percent'):GetChild('PercentP2'):GetText();
						if loot_scoreP2s then
							loot_scoreP2 = tonumber(string.sub(loot_scoreP2s,1,string.len(loot_scoreP2s) - 1) * 100);
						end
					end
					
					if GAMESTATE:IsHumanPlayer(PLAYER_1) and loot_scoreP1 > loot_scoreP1prev and P1 then
						ama_game2score[1] = ama_game2score[1]+1
					end
					if GAMESTATE:IsHumanPlayer(PLAYER_2) and loot_scoreP2 > loot_scoreP2prev and P2 then
						ama_game2score[2] = ama_game2score[2]+1
					end
					
					loot_scoreP1prev = loot_scoreP1;
					loot_scoreP2prev = loot_scoreP2;
					
				end
				
				if beat > 400 and beat < 463.9 then
					
					local mult = 0
					if beat > 400 and beat < 420 then
						mult = (beat-400)/20
					elseif beat >= 420 and beat < 460 then
						mult = 1
					elseif beat >= 460 and beat < 464 then
						mult = (464-beat)/4
					end
					
					for pn=1,2 do
						
						local a = Plr(pn)
						if a then
							a:zoomz(1+1*mult)
							a:zoom(1-.1*mult)
							a:rotationx(mult*-40)
							a:rotationy( 10*mult*math.sin(beat*math.pi*0.125) )
							a:rotationz( 10*mult*math.cos(beat*math.pi*0.125) )
						end
						
					end
					
				end
				
				if beat > 400 and beat < 500 then
					
					for i=1,table.getn(ama_bubbles[2]) do
						
						local a = ama_bubbles[2][i]
						
						if a then
							a:hidden(0)
							a:diffusealpha(.4)
							a:addx( 2*math.sin(a:GetZoomZ()*beat*math.pi + a:getaux() ) )
							a:addy( -2 )
							a:zoom(.1)
							if a:GetY() < -50 then
								a:addy( sh + 100 )
							end
						end
						
					end
					
				end
				
				---------------------------------------
				-- ACTION RPGS AINT GOT SHIT ON THIS --
				---------------------------------------
				if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
					while curaction<=table.getn(mod_actions) and beat>=mod_actions[curaction][1] do
						if mod_actions[curaction][3] or beat < mod_actions[curaction][1]+2 then
							if type(mod_actions[curaction][2]) == 'function' then
								mod_actions[curaction][2]()
							elseif type(mod_actions[curaction][2]) == 'string' then
								MESSAGEMAN:Broadcast(mod_actions[curaction][2]);
							end
						end
						curaction = curaction+1;
					end
				end
				
			end
			
			self:sleep(1/ama_fps);
			self:queuecommand('Update');

---------------------------------------------------------------------------------------
----------------------END DON'T TOUCH IT KIDDO-----------------------------------------
---------------------------------------------------------------------------------------
			
		end"
		
	/>
	
	<!--Handling messages here is still fun and profitable-->
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) ama_angle = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) ama_control = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) curl_belt_control = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1"
	InitCommand="%function(self) curl_belt_sizes = self end"
	/>
	<CODE Type="Quad" OnCommand="hidden,1;z,1"
	InitCommand="%function(self) belt_addx = self end"
	/>
	
	<!--This is for the time based mod reader-->
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); mod_time = mod_globaloffset+tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<Layer Type="ActorFrame" InitCommand="%function(self) ama_scanners = self end" OnCommand="hidden,1"><children>
		<Layer File="scanner" OnCommand="animate,0;setstate,0;x,sw/2;y,belt_vert_spacing*2;" />
		<Layer File="scanner" OnCommand="animate,0;hidden,1;setstate,2;x,sw/2-80;y,belt_vert_spacing*3;sleep,1;queuecommand,Check"
		CheckCommand="%function(self) if slumpo then self:hidden(0) end end" />
		<Layer File="scanner" OnCommand="animate,0;setstate,3;x,sw/2+220;y,belt_vert_spacing*4;" />
		<Layer File="scanner" OnCommand="animate,0;setstate,1;x,sw/2;y,belt_vert_spacing*5;" />
	</children></Layer>
	
	<Layer File="waste" OnCommand="x,sw/2-150;y,-32;zoom,.7;"
	Drip1MessageCommand="zoom,.7;y,-32;accelerate,120/256;y,sh/2-15;sleep,0;zoom,0;"
	Drip4MessageCommand="zoom,.7;y,-32;x,sw/2+300;accelerate,120/256;y,sh/2-15;sleep,0;zoom,0;" />
	<Layer File="waste" OnCommand="x,sw/2+0;y,-32;zoom,.7;" Drip2MessageCommand="zoom,.7;y,-32;accelerate,120/256;y,sh/2-15;sleep,0;zoom,0;" />
	<Layer File="waste" OnCommand="x,sw/2+150;y,-32;zoom,.7;" Drip3MessageCommand="zoom,.7;y,-32;accelerate,120/256;y,sh/2-15;sleep,0;zoom,0;" />
	
	<Layer Type="ActorFrame" InitCommand="%function(self) ama_game = self end" ReloadCommand="playcommand,On"
	OnCommand="y,sh" GameUpMessageCommand="playcommand,Go;y,sh;accelerate,120/256;addy,-sh/2;decelerate,120/256;addy,-sh/2;" ><children>
		<!--p1-->
		<Layer Type="Quad" OnCommand="stretchto,0,0,sw/2,sh;addy,-sh*0.4;fadetop,0.4;diffusealpha,0;"
		WhiteOnMessageCommand="linear,1;diffusealpha,1;"
		GoCommand="stretchto,0,0,sw/2,sh;addy,-sh*0.4;accelerate,120/256;addy,sh*0.2;decelerate,120/256;addy,sh*0.2;"
		GameOffMessageCommand="linear,1;diffusealpha,0;"
		/>
		
		<Layer File="teacher/g_body" InitCommand="%function(self) g_bodyp1 = self end" OnCommand="diffuse,.1,.1,.1,1;animate,0;setstate,2;y,sh-155;x,sw*0.25+102;"
		P1FuckupMessageCommand="setstate,3;"
		/>
		
		<Layer Type="ActorFrame" OnCommand="y,sh-248;x,sw*0.25+110;" ><children>
			<Layer File="teacher/g_head" InitCommand="%function(self) g_headp1 = self end"
			P1FuckupMessageCommand="setstate,3;"
			OnCommand="diffuse,.1,.1,.1,1;animate,0;setstate,2;" />
			<Layer File="teacher/centered_cens" OnCommand="hidden,0;vibrate;x,-10;y,10;effectmagnitude,1,1,0;linear,200;rotationz,50*360;" />
		</children></Layer>
		
		<Layer File="teacher/g_panic" OnCommand="hidden,1;diffuse,.1,.1,.1,1;y,sh-217;x,sw*0.25+102;"
		P1FuckupMessageCommand="hidden,0;"
		/>
		
		<Layer File="student/ama_body" NameCommand="%function(self) ama_bodyp1 = self end"
		OnCommand="playcommand,Name;animate,0;setstate,0;x,sw*0.25-72;y,sh-170;" P1FuckupMessageCommand="setstate,3;vibrate;effectmagnitude,2,2,0;sleep,1;queuecommand,StopVib"
		StopVibCommand="stopeffect;" ResetCommand="setstate,0;" />
		
		<Layer File="table" OnCommand="vertalign,bottom;y,sh;x,sw*0.25;zoomx,(sw/2)/320;" />
		
		<Layer File="student/ama_shake" NameCommand="%function(self) ama_handp1 = self end"
		OnCommand="playcommand,Name;hidden,0;animate,0;setstate,3;x,sw*0.25-72;y,sh-170;" P1FuckupMessageCommand="hidden,1;"
		P1_1Command="setstate,0;" P1_2Command="setstate,1;" P1_3Command="setstate,2;" P1_4Command="setstate,3;" />
		
		<Layer File="splat" OnCommand="y,sh-52;x,sw*0.25-32;hidden,1;" P1FuckupMessageCommand="hidden,0;" />
		<Layer File="fumes" OnCommand="zoom,.8;bob;effectmagnitude,0,5,0;diffusealpha,0;y,sh-120;x,sw*0.25-31;" P1FuckupMessageCommand="sleep,.3;linear,.3;diffusealpha,1;" />
		
		<Layer File="teacher/g_clipboard" OnCommand="hidden,0;diffuse,.1,.1,.1,1;y,sh-134;x,sw*0.25+164;" P1FuckupMessageCommand="hidden,1;" />
		
		
		
		
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,1) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		
		
		
		
		
		
		
		<!--p2-->
		<Layer Type="Quad" OnCommand="stretchto,sw/2,0,sw,sh;addy,-sh*0.4;fadetop,0.4;diffusealpha,0;"
		WhiteOnMessageCommand="linear,1;diffusealpha,1;"
		GoCommand="stretchto,sw/2,0,sw,sh;addy,-sh*0.4;accelerate,120/256;addy,sh*0.2;decelerate,120/256;addy,sh*0.2;"
		GameOffMessageCommand="linear,1;diffusealpha,0;"
		/>
		
		
		<Layer File="teacher/g_body" InitCommand="%function(self) g_bodyp2 = self end" OnCommand="diffuse,.1,.1,.1,1;animate,0;setstate,2;y,sh-155;x,sw*0.75+102;"
		P2FuckupMessageCommand="setstate,3;"
		/>
		
		<Layer Type="ActorFrame" OnCommand="y,sh-248;x,sw*0.75+110;" ><children>
			<Layer File="teacher/g_head" InitCommand="%function(self) g_headp2 = self end"
			P2FuckupMessageCommand="setstate,3;"
			OnCommand="diffuse,.1,.1,.1,1;animate,0;setstate,2;" />
			<Layer File="teacher/centered_cens" OnCommand="hidden,0;vibrate;x,-10;y,10;effectmagnitude,1,1,0;linear,200;rotationz,50*360;" />
		</children></Layer>
		
		<Layer File="teacher/g_panic" OnCommand="hidden,1;diffuse,.1,.1,.1,1;y,sh-217;x,sw*0.75+102;"
		P2FuckupMessageCommand="hidden,0;"
		/>
		
		<Layer File="student/ama_body" NameCommand="%function(self) ama_bodyp2 = self end"
		OnCommand="playcommand,Name;animate,0;setstate,0;x,sw*0.75-72;y,sh-170;" P2FuckupMessageCommand="setstate,3;vibrate;effectmagnitude,2,2,0;sleep,1;queuecommand,StopVib"
		StopVibCommand="stopeffect;" ResetCommand="setstate,0;" />
		
		<Layer File="table" OnCommand="vertalign,bottom;y,sh;x,sw*0.75;zoomx,(sw/2)/320;" />
		
		<Layer File="student/ama_shake" NameCommand="%function(self) ama_handp2 = self end"
		OnCommand="playcommand,Name;hidden,0;animate,0;setstate,3;x,sw*0.75-72;y,sh-170;" P2FuckupMessageCommand="hidden,1;"
		P2_1Command="setstate,0;" P2_2Command="setstate,1;" P2_3Command="setstate,2;" P2_4Command="setstate,3;" />
		
		<Layer File="splat" OnCommand="y,sh-52;x,sw*0.75-32;hidden,1;" P2FuckupMessageCommand="hidden,0;" />
		<Layer File="fumes" OnCommand="zoom,.8;bob;effectmagnitude,0,5,0;diffusealpha,0;y,sh-120;x,sw*0.75-31;" P2FuckupMessageCommand="sleep,.3;linear,.3;diffusealpha,1;" />
		
		<Layer File="teacher/g_clipboard" OnCommand="hidden,0;diffuse,.1,.1,.1,1;y,sh-134;x,sw*0.75+164;" P2FuckupMessageCommand="hidden,1;" />
		
		
		
		
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		<Layer Type="ActorFrame" OnCommand="hidden,1;sleep,0.02;queuecommand,Make" MakeCommand="%function(self) ama_add_note(self,2) end" HideCommand="hidden,1" ><children>
		<Layer File="note"/></children></Layer>
		
		
		<Layer Type="Quad" Condition="not GAMESTATE:IsPlayerEnabled(0)" OnCommand="stretchto,0,0,sw/2,sh;diffusealpha,1;"
		GameUpMessageCommand="linear,240/256;diffusealpha,1;" GameOffMessageCommand="sleep,240/256;linear,240/256;diffusealpha,0;" />
		<Layer Type="Quad" Condition="not GAMESTATE:IsPlayerEnabled(1)" OnCommand="stretchto,sw/2,0,sw,sh;diffusealpha,1;"
		GameUpMessageCommand="linear,240/256;diffusealpha,1;" GameOffMessageCommand="sleep,240/256;linear,240/256;diffusealpha,0;" />
		<Layer Type="Quad" OnCommand="stretchto,sw/2-3,0,sw/2+3,sh;diffuse,0,0,0,0;"
		GameUpMessageCommand="linear,240/256;diffusealpha,1;" GameOffMessageCommand="linear,240/256;diffusealpha,0;" />
		
		
		
		
		
		
		
	</children></Layer>
	
	
	
	<Layer Type="ActorFrame" InitCommand="%function(self) ama_cast = self end" OnCommand="x,sw/2;y,sh+40;hidden,1;" HideCommand="hidden,1;" ><children>
		
		<Layer File="cast/idle" ReturnCommand="diffusealpha,1;zoomx,1.05;zoomy,.95;linear,.2;zoom,1;" CastCommand="diffusealpha,0;"
		OnCommand="vertalign,bottom;pulse;effectperiod,1;effectclock,bgm;effectmagnitude,1,1,1;effectcolor2,.99,1.01,1,1;effectcolor1,1.01,.99,1,1;" />
		
		<Layer File="cast/_windup" ReturnCommand="diffusealpha,0;skewx,0;zoom,1;rotationz,0;" OnCommand="vertalign,bottom;diffusealpha,0;"
		CastCommand="diffusealpha,1;setstate,0;zoom,1;linear,50/128;skewx,-.0;rotationz,6;zoomx,1.04;sleep,0;diffusealpha,0;" />
		
		<Layer File="cast/_push" ReturnCommand="diffusealpha,0;skewx,0;zoom,1;" OnCommand="vertalign,bottom;diffusealpha,0;"
		CastCommand="sleep,50/128;queuecommand,Push" PushCommand="diffusealpha,1;setstate,0;zoomx,1.1;zoomy,0.9;skewx,.1;sleep,.08;decelerate,.3;zoom,1;skewx,0;" />
		
	</children></Layer>
	
	
	
	<Layer Type="ActorFrame" OnCommand="fov,60;" OpenMessageCommand="playcommand,O2;linear,800/256;z,1000;zoomz,SCREEN_WIDTH/640;" ><children>
		
		<Layer File="vial1" OnCommand="vertalign,bottom;y,sh*0.9;zoom,.8;x,sw*0.2;z,-500;diffusealpha,0;"
		O2Command="diffusealpha,1;sleep,400/256;linear,400/256;diffusealpha,0;" />
		<Layer File="vial2" OnCommand="vertalign,bottom;y,sh*0.9;zoom,.8;x,sw*0.8;z,-250;diffusealpha,0;"
		O2Command="diffusealpha,1;sleep,200/256;linear,400/256;diffusealpha,0;" />
		<Layer File="vial1" OnCommand="vertalign,bottom;y,sh*0.9;zoom,.8;x,sw*0.2;z,0;diffusealpha,0;"
		O2Command="diffusealpha,1;sleep,0/256;linear,400/256;diffusealpha,0;" />
		
		<Layer File="vialtex" OnCommand="diffusealpha,0;customtexturerect,0,0,1,1;texcoordvelocity,0,.4;fadetop,.1;fadebottom,.1;zoom,.7;blend,add;x,sw*0.2;y,sh*0.9-95;z,-500;"
		O2Command="cropbottom,.2;croptop,.1;diffusealpha,.7;sleep,400/256;linear,400/256;diffusealpha,0;" />
		<Layer File="vialtex" OnCommand="diffusealpha,0;customtexturerect,0,0,1,1;texcoordvelocity,0,.4;fadetop,.1;fadebottom,.1;zoom,.4;blend,add;x,sw*0.8;y,sh*0.9-65;z,-250;"
		O2Command="cropbottom,.2;croptop,.1;diffusealpha,.7;sleep,200/256;linear,400/256;diffusealpha,0;" />
		<Layer File="vialtex" OnCommand="diffusealpha,0;customtexturerect,0,0,1,1;texcoordvelocity,0,.4;fadetop,.1;fadebottom,.1;zoom,.7;blend,add;x,sw*0.2;y,sh*0.9-95;z,0;"
		O2Command="cropbottom,.2;croptop,.1;diffusealpha,.7;sleep,0/256;linear,400/256;diffusealpha,0;" />
		
	</children></Layer>
	
	<Layer Type="Quad" NameCommand="%function(self) ama_bgcover2 = self end" OnCommand="playcommand,Name;diffuse,0,0,0,0;stretchto,0,0,SCREEN_WIDTH,SCREEN_HEIGHT" />
	
	<Layer File="flashback" InitCommand="%function(self) ama_flashback = self end"
	OnCommand="stretchto,0,0,sw,sh;diffusealpha,0;" />
	
	<Layer File="../itg" InitCommand="%function(self) ama_normalbgfg = self end" GameUpMessageCommand="diffusealpha,1;croptop,1;fadetop,0.6;"
	OnCommand="stretchto,0,0,sw,sh;croptop,1;fadetop,0.6;diffuse,.5,.5,.5,1;" GameOffMessageCommand="linear,480/256;croptop,-0.6;" />
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	<Layer File="minimecha" InitCommand="%function(self) ama_mini = self end"
	OnCommand="hidden,1;animate,0;zoom,.8;x,sw/2;y,sh/2;pulse;vertalign,bottom;
	effectmagnitude,1,1,1;effectcolor1,1.02,.98,1,1;effectcolor2,.98,1.02,1,1;effectclock,bgm;effectperiod,1;" />
	
	
	<INPUTGAME
		Type="Quad" OnCommand="hidden,1"
		Debug1MessageCommand="%function(self)
		end"
		
		StepLeftP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 1; end
		end"
		StepP1LeftPressMessageCommand="%function (self)
			mawaru_keys[6-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-1] = 1;
			end
		end"
		StepP1LeftPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 1; end
		end"
		StepDownP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 1; end
		end"
		StepP1DownPressMessageCommand="%function (self)
			mawaru_keys[7-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-1] = 1;
			end
		end"
		StepP1DownPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 1; end
		end"
		StepUpP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 1; end
		end"
		StepP1UpPressMessageCommand="%function (self)
			mawaru_keys[8-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-1] = 1;
			end
		end"
		StepP1UpPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 1; end
		end"
		StepRightP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 1; end
		end"
		StepP1RightPressMessageCommand="%function (self)
			mawaru_keys[9-5] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-1] = 1;
			end
		end"
		StepP1RightPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 1; end
		end"
		
		LiftLeftP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 0; end
		end"
		StepP1LeftLiftMessageCommand="%function (self)
			mawaru_keys[6-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-1] = 0;
			end
		end"
		StepP1LeftLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-5] = 0; end
		end"
		LiftDownP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 0; end
		end"
		StepP1DownLiftMessageCommand="%function (self)
			mawaru_keys[7-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-1] = 0;
			end
		end"
		StepP1DownLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-5] = 0; end
		end"
		LiftUpP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 0; end
		end"
		StepP1UpLiftMessageCommand="%function (self)
			mawaru_keys[8-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-1] = 0;
			end
		end"
		StepP1UpLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-5] = 0; end
		end"
		LiftRightP1MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 0; end
		end"
		StepP1RightLiftMessageCommand="%function (self)
			mawaru_keys[9-5] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-1] = 0;
			end
		end"
		StepP1RightLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-5] = 0; end
		end"
		
		StepLeftP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 1; end
		end"
		StepP2LeftPressMessageCommand="%function (self)
			mawaru_keys[6-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-5] = 1;
			end
		end"
		StepP2LeftPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 1; end
		end"
		StepDownP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 1; end
		end"
		StepP2DownPressMessageCommand="%function (self)
			mawaru_keys[7-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-5] = 1;
			end
		end"
		StepP2DownPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 1; end
		end"
		StepUpP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 1; end
		end"
		StepP2UpPressMessageCommand="%function (self)
			mawaru_keys[8-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-5] = 1;
			end
		end"
		StepP2UpPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 1; end
		end"
		StepRightP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 1; end
		end"
		StepP2RightPressMessageCommand="%function (self)
			mawaru_keys[9-1] = 1;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-5] = 1;
			end
		end"
		StepP2RightPressedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 1; end
		end"
		
		LiftLeftP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 0; end
		end"
		StepP2LeftLiftMessageCommand="%function (self)
			mawaru_keys[6-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[6-5] = 0;
			end
		end"
		StepP2LeftLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[6-1] = 0; end
		end"
		LiftDownP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 0; end
		end"
		StepP2DownLiftMessageCommand="%function (self)
			mawaru_keys[7-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[7-5] = 0;
			end
		end"
		StepP2DownLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[7-1] = 0; end
		end"
		LiftUpP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 0; end
		end"
		StepP2UpLiftMessageCommand="%function (self)
			mawaru_keys[8-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[8-5] = 0;
			end
		end"
		StepP2UpLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[8-1] = 0; end
		end"
		LiftRightP2MessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 0; end
		end"
		StepP2RightLiftMessageCommand="%function (self)
			mawaru_keys[9-1] = 0;
			if PREFSMAN:GetPreference('InputDuplication') then
				mawaru_keys[9-5] = 0;
			end
		end"
		StepP2RightLiftedMessageCommand="%function (self) if not FUCK_EXE then
			mawaru_keys[9-1] = 0; end
		end"
	/>
	
	<Layer File="xd" InitCommand="%function(self) ama_xd = self end" OnCommand="hidden,1;vertalign,top;y,sh;x,sw*0.8;" />
	
	<Layer File="bamboozle" OnCommand="animate,0;vertalign,top;y,SCREEN_HEIGHT;hidden,1;x,sw/2;"
	InitCommand="%function(self) ama_bamboozle = self end"
	/>
	<Layer File="heart" OnCommand="diffusealpha,0;zoom,.9;x,sw/2-60;rotationz,-30;y,sh/2"
		HeartMessageCommand="diffusealpha,1;decelerate,.5;addx,-60;addy,-40;sleep,0;linear,.5;diffusealpha,0;"
	/>
	
	<Layer File="grade" OnCommand="diffusealpha,0;animate,0;x,sw*0.2;y,sh*0.4;zoom,.8;"
		RightP1MessageCommand="setstate,1;diffusealpha,1;sleep,0.1;diffusealpha,0;sleep,0.1;diffusealpha,1;sleep,.5;diffusealpha,0;"
		P1FuckupMessageCommand="setstate,0;diffusealpha,1;sleep,0.1;diffusealpha,0;sleep,0.1;diffusealpha,1;sleep,.5;diffusealpha,0;"
	/>
	<Layer File="grade" OnCommand="diffusealpha,0;animate,0;x,sw*0.7;y,sh*0.4;zoom,.8;"
		RightP2MessageCommand="setstate,1;diffusealpha,1;sleep,0.1;diffusealpha,0;sleep,0.1;diffusealpha,1;sleep,.5;diffusealpha,0;"
		P2FuckupMessageCommand="setstate,0;diffusealpha,1;sleep,0.1;diffusealpha,0;sleep,0.1;diffusealpha,1;sleep,.5;diffusealpha,0;"
	/>
	
</children></ActorFrame>