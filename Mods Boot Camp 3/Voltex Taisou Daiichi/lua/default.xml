<ActorFrame
    InitCommand="%function(self)

        songName = GAMESTATE:GetCurrentSong():GetSongDir();
    end"
><children>

	<Actor
		Type="Quad"
		InitCommand="hidden,1" OnCommand="sleep,1000" />
	
	<Layer File="easing" />
	<Layer File="modhelpers" />
	<Layer File="player_movement" />
	<Layer File="textsystem" />
	<Layer File="spellcard" />
	
	<Actor
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)

			
		
			debug_show = false;
			spb = .3
---------------------------------------------------------------------------------------
----------------------DON'T TOUCH IT KIDDO---------------------------------------------
---------------------------------------------------------------------------------------

			checked = false; P1=nil;P2=nil;P3=nil;P4=nil;jud1=nil;com1=nil;jud2=nil;com2=nil;jud3=nil;com3=nil;

			mod_plr = {};
			
			mod_firstSeenBeat = GAMESTATE:GetSongBeat();
			
---------------------------------------------------------------------------------------
----------------------END DON'T TOUCH IT KIDDO-----------------------------------------
---------------------------------------------------------------------------------------

            --beat based mods
            --{beat_start, beat_end, mods, len_or_end, player_number}
            mods = {
				{0,390,'*100000 -999999 cover, *1000 1x, *1000 C350, **100000 overhead','end'},
                {0,32,'*100000 stealth, *100000 dark','end'},
                {32,38,'*100000 dark','end'},
				
				{40,4,'*100000 no brake','len'},
				{44,4,'*20 75 mini','len'},
				{52,1,'*100000 no drunk','len'},
				{54,98,'*100000 225 invert','len',1},
				{54,98,'*100000 -225 invert','len',2},
				
				{55.5,83.5,'*100000 100 beat','end'},
				{83.5,86.5,'*100000 1000 beat','end'},
				{86.5,1,'*100000 no beat','len'},
				
				{69.5,1,'*20 50 hallway','len',1},
				{70.5,1,'*20 100 hallway','len',1},
				{71.5,.5,'*20 150 hallway','len',1},
				{69.5,1,'*20 -50 hallway','len',2},
				{70.5,1,'*20 -100 hallway','len',2},
				{71.5,.5,'*20 -150 hallway','len',2},
				{72,1,'*100000 0 hallway','len'},
				
				{72,.1,'*100000 50 stealth','len'},
				
				
				{99.5,4,'*100000 1000 beat','len'},
				{103.5,4,'*100000 no beat','len'},
				--{156,172,'*-1 0 dark,*-1 100 centered, *-1 100 reverse','end'},
				--{156,172,'*-1 1050 flip, *-1 1000 invert, *-1 100 alternate','end',1},
				--{156,172,'*-1 -100000 cross, *-1 100 alternate, *-1 50 flip','end',2},
				{160,176,'*100000 195 mini, *10000 -25 flip, *1000 50 stealth','end'},
				{191,320,'*50 500 invert','end',1},
				{191,320,'*50 500 invert','end',2},
				{192,195.5,'*10 30 incoming','end',1},
				{195.5,200,'*5 60 incoming','end',1},
				{198.25,199.25,'*50 -60 incoming','end',1},
				{199.25,200,'*50 60 incoming','end',1},
				{200,206,'*10 90 incoming','end',1},
				{206,207,'*10 60 incoming','end',1},
				{207,208,'*10 no hallway','end',1},
				{208,211.5,'*20 -30 incoming','end',1},
				{211.5,216,'*10 -60 incoming','end',1},
				{214.25,215.25,'*50 60 incoming','end',1},
				{215.25,216,'*50 -60 incoming','end',1},
				{216,223,'*10 -90 incoming','end',1},
				
				{191,192,'*20 no mini','end'},
				{191,.1,'*1000 -200 mini','len'},
				--{191.5,220.5,'*1000 100 beat','end'},
				{220.5,221.5,'*1000 no beat','end'},
				
				{192,195.5,'*10 30 hallway','end',2},
				{195.5,200,'*5 60 hallway','end',2},
				{198.25,199.25,'*50 -60 hallway','end',2},
				{199.25,200,'*50 60 hallway','end',2},
				{200,206,'*10 90 hallway','end',2},
				{206,207,'*10 60 hallway','end',2},
				{207,208,'*10 no hallway','end',2},
				{208,211.5,'*20 -30 hallway','end',2},
				{211.5,216,'*10 -60 hallway','end',2},
				{214.25,215.25,'*50 60 hallway','end',2},
				{215.25,216,'*50 -60 hallway','end',2},
				{216,223,'*10 -90 hallway','end',2},
				
				{256,284,'*10 90 stealth, *10 96 dark, *1000 0.5x','end'},
				{284,285,'*100 no tipsy, *100 no wave, *100 no drunk, *100 no mini','end'},
				{256,284,'*.1 -100 mini, *.25 150 tipsy, *.25 -100 wave','end',1},
				{256,284,'*.1 -100 mini,*.25 -150 drunk, *.25 100 wave','end',2},
				
				{286.5,.5,'*1000 10 mini, *1000 20 incoming','len'},
				{287,.5,'*1000 20 mini, *1000 40 incoming','len'},
				{287.5,.5,'*1000 30 mini, *1000 60 incoming','len'},
				
				{304,320,'*1000 100 reverse','end'},
				
				{324,4,'*10000 no brake, *1000 no mini, *1000 no flip','len'},
				{328,4,'*20 75 mini','len'},
				{336,1,'*10000 no drunk','len'},
				{340,1,'*10000 no tornado, *10000 no drunk','len'},
				
				{364,373,'*10000 no beat','end'},
				{355.5,364.5,'*10000 1000 beat','end',1},
				{355.5,364.5,'*10000 -1000 beat','end',2},
				{365.5,1,'*10000 1200 beat','len',1},
				{365.5,1,'*10000 -1200 beat','len',2},
				{367.5,1,'*10000 1400 beat','len',1},
				{367.5,1,'*10000 -1400 beat','len',2},
				{369.5,1,'*10000 1600 beat','len',1},
				{369.5,1,'*10000 -1600 beat','len',2},
				{371.5,1,'*10000 1800 beat','len',1},
				{371.5,1,'*10000 -1800 beat','len',2},
				
				{364,376,'*10000 150 boost','end'},
				{370,376,'*100000000 -100000 cross','end',1},
				{370,376,'*1000 100 stealth','end',2},
				{376,1,'*1000000 no cross, *10000 no stealth','len'},
				
				{383,30,'*1 -10000 mini, *1 50 flip, *1 50 reverse','len'},
            }
            
			for i=320,324,.5 do
				local valuething = (324-i)/4 * 100
				local valuething3 = (1-(324-i)/4) * 100
				local valuething2 = ((324-i)/4) * 500
				mod_insert(i,.5,'*1000 '.. valuething ..' reverse, *1000 '.. valuething2 ..' invert','len')
			end

			if FUCK_EXE then
				mod_insert(0,383,'*1000 stealthpastreceptors','end')
			end
			
			local dai_parity = 1
			local skipPattern = {0,.5,.75,1,1.5}
			for j=48,50,2 do
				for i,v in pairs(skipPattern) do
					table.insert(mods,{j+v,.1,'*100000 '.. dai_parity*100 .. ' drunk','len'})
					dai_parity = dai_parity * -1
				end
			end
			for j=332,338,2 do
				for i,v in pairs(skipPattern) do
					local tsss = (1-((340-(j+v))/8))*250+50
					if j+v > 336 then
						local ttss = (1-((340-(j+v))/4))*200
						table.insert(mods,{j+v,.1,'*100000 '.. dai_parity*ttss .. ' tornado','len'})
					end
					table.insert(mods,{j+v,.1,'*100000 '.. dai_parity*tsss .. ' drunk','len'})
					dai_parity = dai_parity * -1
				end
			end
						
			switcheroo_add(372,'invert',100,4)
			
			--beat-based ease mods
			--{time_start, time_end, mod_start, mod_end, mod, len_or_end, ease_type, player_number, sustaintime, optional_param1, optional_param2}
			--valid ease types are:
				--linear
				--inQuad    outQuad    inOutQuad    outInQuad
				--inCubic   outCubic   inOutCubic   outInCubic
				--inQuart   outQuart   inOutQuart   outInQuart
				--inQuint   outQuint   inOutQuint   outInQuint
				--inSine    outSine    inOutSine    outInSine
				--inExpo    outExpo    inOutExpo    outInExpo
				--inCirc    outCirc    inOutCirc    outInCirc
				--inElastic outElastic inOutElastic outInElastic    --can take 2 optional parameters - amplitude & period
				--inBack    outBack    inOutBack    outInBack       --can take 1 optional parameter  - spring amount
				--inBounce  outBounce  inOutBounce  outInBounce
				
			mods_ease = {
				-- EXAMPLE TWEEN: from beat 0 to 4, make rotationz go from 360 to 0 with the inOutBack tween
				{32,40,0,1.75,'xmod','end',outInBounce},
				{32,40,100,0,'drunk','end',outInBounce,1},
				{32,40,-100,0,'drunk','end',outInBounce,2},
				{32,40,100,0,'tipsy','end',outInBounce,1},
				{32,40,-100,0,'tipsy','end',outInBounce,2},
				{32,40,0,100,'brake','end',outInBounce},
				
				
				{40,.4,500,0,'tornado','len',linear},
				{44,.4,500,0,'tornado','len',linear},
				
				{48,.1,0,165,'mini','len',linear},
				{48.1,3.9,165,0,'mini','len',linear},
				{52,2,0,100,'stealth','len',inCubic},
				{52,2,0,100,'dark','len',inCubic},
				{54,2,100,0,'stealth','len',linear},
				{54,2,100,0,'dark','len',linear},
				
				{86,2,0,150,'mini','len',outCubic},
				{88,100,150,-75,'mini','end',linear},
				{88,100,0,25,'flip','end',linear},
				
				{152,4,225,0,'invert','len',outQuad,1},
				{152,4,-225,0,'invert','len',outQuad,2},
				{118.75,.75,-50,0,'mini','len',linear},
				{119.5,.5,-50,0,'mini','len',linear},
				{118,2,0,170,'distant','len',outCubic},
				{120,135,170,0,'distant','end',linear},
				
				{152,4,0,50,'stealth','len',linear},
				{152,4,0,50,'dark','len',linear},
				{152,8,-50,195,'mini','len',outQuad},
				{152,8,0,-25,'flip','len',outQuad},
				{151,1,0,-50,'mini','len',outQuad},
				
				{156,4,50,50,'stealth','len',linear},
				
				{172,189,195,0,'mini','end',inQuad},
				{172,189,-25,0,'flip','end',inQuad},
				{252,4,-208,0,'hallway','len',linear},
				
				{253,3,0,90,'stealth','len',linear},
				{253,3,0,100,'dark','len',linear},
				{253,3,1,.5,'xmod','len',linear},
				
				{282,2,90,100,'stealth','len',linear},
				
				{302,2,0,100,'reverse','len',inQuad},
				{323,1,0,-2000,'mini','len',inQuad},
				{323,1,0,50,'flip','len',inQuad},
				
				{324,.4,500,0,'tornado','len',linear},
				{328,.4,500,0,'tornado','len',linear},
				{332,8,75,-500,'mini','len',linear},
				{332,8,0,40,'flip','len',linear},
				{332,8,0,200,'brake','len',linear},
				
				{340,356,200,0,'brake','end',linear},
				{340,356,-500,0,'mini','end',linear},
				{340,356,40,0,'flip','end',linear},
				
				{356,364,0,100,'boost','end',linear},
				
				{376,379.5,0,-50,'reverse','end',inQuad},
				{379.5,383,-50,0,'reverse','end',inQuad},
				{376,383,0,5,'xmod','end',inQuad},
				{382,383,0,-10000,'mini','end',inQuad},
				{382,383,0,50,'flip','end',inQuad},
				{382,383,0,50,'reverse','end',inQuad},
			}
			local counting = {1,2,3,4,2,2,3,4,3,2,3,4,4,2,3,4}
			for i,v in pairs(counting) do
				ugly_count(87+i,1,v,1)
			end
			counting = {1,2,1,2,2,2,2,2}
			for i,v in pairs(counting) do
				ugly_count(119+i,1,v,1)
			end
			counting = {3,2,3,4,4,2,3,4}
			for i,v in pairs(counting) do
				ugly_count(143+i,1,v,1)
			end
			counting = {1,2,3,4,2,2,3,4}
			for i,v in pairs(counting) do
				ugly_count(175+i,1,v,.75)
			end
			ugly_count(232,2,2,2)
			ugly_count(234,2,2,2)
			ugly_count(236,2,3,2)
			ugly_count(238,2,4,2)
			
			ugly_count(248,2,3,.5)
			ugly_count(250,2,2,.5)
			ugly_count(252,2,3,.5)
			ugly_count(254,2,4,-1)
			
			local aparity = 1
			for i=57,83,2 do
				table.insert(mods_ease,{i,1,1,1.75,'xmod','len',inQuad})
				table.insert(mods_ease,{i,1,200,0,'bumpy','len',inQuad})
				table.insert(mods_ease,{i,1,aparity*200,0,'dizzy','len',inQuart})
				aparity = aparity * -1
			end
			
			for i=105,117,2 do
				table.insert(mods_ease,{i,2,.25,2,'xmod','len',inQuad})
			end
			for i=137,148,2 do
				table.insert(mods_ease,{i,2,.75,1.75,'xmod','len',inQuad})
				table.insert(mods_ease,{i,2,aparity*200,0,'dizzy','len',outQuad})
				table.insert(mods_ease,{i,2,100,0,'brake','len',outQuad})
				aparity = aparity * -1
				--table.insert(mods_ease,{i,1.5,40,0,'reverse','len',outQuad})
			end
		
			
			for i=288,319,1 do
				table.insert(mods_ease,{i,.75,dai_parity*100,0,'distant','len',outQuad})
				dai_parity = dai_parity * -1
			end
			
			for i=300,302,2 do
				table.insert(mods_ease,{i+0*.75,.75,50,0,'stealth','len',inQuad})
				table.insert(mods_ease,{i+0*.75,.75,400,0,'tipsy','len',outQuad})
				table.insert(mods_ease,{i+1*.75,.75,50,0,'stealth','len',inQuad})
				table.insert(mods_ease,{i+1*.75,.75,-400,0,'tipsy','len',outQuad})
				table.insert(mods_ease,{i+2*.75,.5,50,0,'stealth','len',inQuad})
				table.insert(mods_ease,{i+2*.75,.5,400,0,'tipsy','len',outQuad})
			end
			table.insert(mods_ease,{304,2,50,0,'stealth','len',outQuad})
			
			for i=316,319,1 do
				table.insert(mods_ease,{i+0*.5,.5,50,0,'stealth','len',inQuad})
				table.insert(mods_ease,{i+0*.5,.5,400,0,'tipsy','len',outQuad})
				table.insert(mods_ease,{i+1*.5,.5,50,0,'stealth','len',inQuad})
				table.insert(mods_ease,{i+1*.5,.5,-400,0,'tipsy','len',outQuad})
			end

			local invparity = 1
			for i=356,364,1 do
				table.insert(mods_ease,{i,1,50,0,'stealth','len',outQuad})
				table.insert(mods_ease,{i,1,200*invparity,0,'tornado','len',outCirc})
				table.insert(mods_ease,{i,1,200*invparity,0,'dizzy','len',outQuad})
				invparity = invparity * -1
			end
			table.insert(mods_ease,{366,1,50,0,'stealth','len',outQuad})
			table.insert(mods_ease,{368,1,50,0,'stealth','len',outQuad})
			table.insert(mods_ease,{370,1,50,0,'stealth','len',outQuad})
			table.insert(mods_ease,{372,1,50,0,'stealth','len',outQuad})
			table.insert(mods_ease,{374,4,100,0,'dark','len',inQuad})
			
            --SCREAMING GUMBALL / timed message broadcaster
            --they no longer have to be in order, because they're sorted now
            curmessage = 1;
            --{beat,message,persists}
            messages = { 
				
				{32,'CenterS'},
                {40,'CenterI1'},
                {40,'TagDown'},
                {44,'CenterI2'},
                {48,'CenterI',true},
                {52,'BottomFall',true},
                {86,'Minify'},
				--{88,'Bounce1'},
                --{92,'Bounce2',},
                --{96,'Bounce3',},
                --{100,'Bounce4'},
                {103,'QuikSpin'},
                {118,'Hallify'},
                --{120,'BounceY'},
                --{136,'BounceZ'},
				{151,'Magnify',true},
				{152,'bounceAux'},
				{183,'fixavvy',true},
				{191,'UnCenter',true},
				{220,'Squish',true},
				{252,'White'},
				{284,'UnWhite',true},
				{287,'Kyixercise'},
				{303,'Kyixercise2'},
				{319,'Endxercise'},
				{320,'CenterLol',true},
				{324,'CenterI11'},
                {328,'CenterI2'},
                {332,'CenterI',true},
				
				{356,'breath'},
				{366,'breath2'},
				{377,'breathout'},
				{383,'TextDismiss'},
            }
			
			local showtable = {1,40,103,127,158,183,324}
			local hidetable = {28,86,118,143,175,191,352}
			for i,v in pairs(showtable) do
				mod_message(v,function(self) 
					if vtd_tutorial then
						vtd_tutorial:queuecommand('ShowSelf')
					end
				end)
			end
			for i,v in pairs(hidetable) do
				mod_message(v,function(self) 
					if vtd_tutorial then
						vtd_tutorial:queuecommand('HideSelf')
					end
				end)
			end
			
			local textTable = {'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T'}
			local textTimes = {3,23,40,56,72,104,128,154,160,184,224,240,257,272,285,288,300,312,324,340}
			for i,v in pairs(textTimes) do
				mod_message(v,'Text'..textTable[i])
			end
			
			
						local bwehtable = {
	{192,0,1},{192,2,1},{192,3,1},{193,0,1},{193,3,1},{194,0,1},{194,3,1},{195,0,1},{195,3,1},{195.5,0,1},{195.5,1,1},{195.5,3,1},{196,0,1},{196,2,1},{196,3,1},{196.5,3,1},{197,0,1},{197.5,3,1},{198,0,1},{198,3,1},{198.5,0,1},{198.5,1,1},{198.5,2,1},{199,0,1},{199,3,1},{199.5,0,1},{199.5,1,1},{199.5,2,1},{199.5,3,1},{200,0,1},{200,2,1},{200,3,1},{201,0,1},{201,3,1},{201.5,3,1},{202,0,1},{202.5,3,1},{203,0,1},{203.5,0,1},{203.5,1,1},{203.5,3,1},{204,0,1},{204,1,1},{204,3,1},{204.5,0,1},{204.5,1,1},{205,0,1},{205,3,1},{205.5,0,1},{205.5,1,1},{205.5,2,1},{205.5,3,1},{206,0,1},{206.5,1,1},{206.5,3,1},{207,0,1},{207.5,1,1},{207.5,3,1},{208,0,1},{208,2,1},{208.5,3,1},{209,0,1},{209,2,1},{209.5,3,1},{210,0,1},{210,2,1},{210.5,0,1},{210.5,2,1},{210.5,3,1},{211,0,1},{211,2,1},{211,3,1},{211.5,0,1},{211.5,1,1},{211.5,2,1},{212,0,1},{212,2,1},{212,3,1},{212.5,0,1},{212.5,2,1},{213,0,1},{213,2,1},{213,3,1},{213.5,3,1},{214,0,1},{214,2,1},{214.5,0,1},{214.5,1,1},{214.5,2,1},{214.5,3,1},{215.5,0,1},{215.5,1,1},{215.5,2,1},{216,0,1},{216,2,1},{216,3,2,length=1},{217,0,1},{217,2,1},{217.5,3,4,length=2.5},{218,0,1},{218,2,1},{218.5,0,1},{218.5,2,1},{219,0,1},{219,2,1},{219.5,0,1},{219.5,1,1},{219.5,2,1},{220,0,1},{220,2,1},{224,0,1},{224,2,1},{224,3,1},{225.5,0,1},{225.5,2,1},{225.5,3,1},{226,1,1},{226,2,1},{226,3,1},{226.667,0,1},{226.667,2,1},{226.667,3,1},{227.333,0,1},{227.333,2,1},{227.333,3,1},{228,0,1},{228,2,1},{228,3,1},{228.667,0,1},{228.667,2,1},{228.667,3,1},{229.333,0,1},{229.333,2,1},{229.333,3,1},{230,1,1},{230,2,1},{230,3,1},{232,0,1},{232,2,1},{232,3,1},{234,1,1},{234,3,1},{235,0,1},{235,2,1},{235,3,1},{236,0,1},{236,2,1},{236,3,1},{237,2,1},{237,3,1},{238,1,1},{238,2,1},{238,3,1},{239,2,1},{239,3,1},{240,0,1},{240,2,1},{240,3,1},{241.5,0,1},{241.5,2,1},{241.5,3,1},{241.75,0,1},{241.75,2,1},{242,1,1},{242,2,1},{242,3,1},{242.5,0,1},{242.5,2,1},{242.5,3,1},{242.75,0,1},{243,0,1},{243,2,1},{243,3,1},{243.5,2,1},{243.5,3,1},{244,0,1},{244,2,1},{244,3,1},{244.667,0,1},{244.667,2,1},{244.667,3,1},{245.333,0,1},{245.333,2,1},{245.333,3,1},{246,1,1},{246,2,1},{246,3,1},{248,0,1},{248,2,1},{248,3,1},{249,0,1},{249,2,1},{249,3,1},{250,1,1},{250,2,1},{250,3,1},{250.5,0,1},{250.5,2,1},{251,0,1},{251,2,1},{251,3,1},{252,0,1},{252,2,1},{252,3,1},
}
			local bwehtable2 = {}-- = {224,225.5,226,226.667,227.333,228,228.667,229.333,230,232,234,235,236,237,238,239,240,241.5,242,242.5,243,243.5,244,244.667,245.333,245.667,246,248,249,250,251,252}
			
			local dai_tparity = {1,1,1,1}
			for i,v in pairs(bwehtable) do
				if v[2] == 0 then
					if v[1] < 224 then
						table.insert(mods_ease,{v[1],.5,1000*dai_tparity[1],0,'bumpy','len',outQuad})
						table.insert(mods_ease,{v[1],1,160*dai_tparity[1],0,'tipsy','len',outQuad})
						dai_tparity[1] = dai_tparity[1] * -1
					else
						table.insert(mods_ease,{v[1],.5,-100,0,'tornado','len',linear})
					end
				elseif v[2] == 1 then -- snare
					table.insert(mods_ease,{v[1],1,-100,0,'mini','len',linear})
				elseif v[2] == 2 then -- crashj
					table.insert(mods_ease,{v[1],.5,50,0,'stealth','len',linear})
				
				elseif v[2] == 3 then
					if v[1] >=224 then
						table.insert(bwehtable2,v[1])
					else
						if v[3] == 1 then
							--table.insert(mods_ease,{v[1],.5,314*dai_tparity[1],0,'brake','len',outQuad,1})
							--table.insert(mods_ease,{v[1],.5,-314*dai_tparity[1],0,'brake','len',outQuad,2})
							table.insert(messages,{v[1]-.1,function(self)
								if vtd_bgd then
									vtd_bgd:finishtweening()
									if dai_tparity[3] == 1 then
										--vtd_bgd:zoomy(.5)
										--vtd_bgd:zoomx(2)
										vtd_bgd:skewx(1)
									else
										--vtd_bgd:zoomx(.5)
										--vtd_bgd:zoomy(2)
										vtd_bgd:skewx(-1)
									end
									vtd_bgd:decelerate(spb*1)
									vtd_bgd:skewx(0)
									vtd_bgd:vibrate()
									vtd_bgd:effectmagnitude(5,5,5)
									dai_tparity[3] = dai_tparity[3] * -1
								end
							end})
							dai_tparity[3] = dai_tparity[3] * -1
						elseif v[3] == 2 then --hold
							table.insert(messages,{v[1]-.1,function(self)
								if vtd_bgd then
									vtd_bgd:vibrate()
									vtd_bgd:effectmagnitude(20,20,20)
									vtd_bgd:finishtweening()
									vtd_bgd:bouncebegin(spb*.75)
									vtd_bgd:zoomy(2)
									vtd_bgd:zoomx(.25)
								end
							end})
						elseif v[3] == 4 then --roll
							table.insert(messages,{v[1]-.1,function(self)
								if vtd_bgd then
									vtd_bgd:stopeffect()
									vtd_bgd:finishtweening()
									vtd_bgd:zoomy(3)
									vtd_bgd:zoomx(.25)
									vtd_bgd:bounceend(spb*2.5)
									vtd_bgd:zoom(1)
								end
							end})
						end
					end
				end
			end
			
			
			
			for i=1,table.getn(bwehtable2)-1,1 do
				local prevalue = (bwehtable2[i]*3)-796
				table.insert(mods_ease,{bwehtable2[i],bwehtable2[i+1],prevalue*dai_parity,prevalue*dai_parity * -1,'distant','end',outCirc})
				dai_parity = dai_parity * -1
			end
			
			--66,71,76,81,86
			
			for i=289,317,2 do
				local fucklua = dai_parity
				mod_message(i-.25,function(self) swapshit(fucklua,250); end)
				table.insert(mods_ease,{i,.75,dai_parity*100,0,'dizzy','len',outQuad})
				dai_parity = dai_parity * -1
			end
			mod_message(319-.25,function(self) swapshit(1,0,'z'); end)
			
			local talktable = {{4.333,3},{10.333,0},{12.167,3},{20.833,0},{23.438,3},{27.875,0},{41.000,3},{52.375,0},{54.000,3},{55.000,0},{57.000,3},{64.000,0},{66.000,3},{70.000,0},{72.000,3},{79.313,0},{80.563,3},{86.375,0},{104.875,3},{114.500,0},{116.000,3},{119.000,0},{128.000,3},{134.313,0},{136.375,3},{142.000,0},{154.000,3},{158.125,0},{162.000,3},{166.000,0},{167.563,3},{175.313,0},{184.000,3},{190.500,0},{226.313,3},{230.688,0},{240.500,3},{247.938,0},{258.000,3},{270.500,0},{273.438,3},{277.750,0},{285.500,3},{287.000,0},{289.000,3},{292.000,0},{300.000,3},{303.250,0},{312.250,3},{316.000,0},{324.813,3},{330.188,0},{331.500,3},{339.500,0},{341.313,3},{345.000,0},{347.313,3},{351.000,0},{356.000,3},{364.500,0},{365.750,3},{366.500,0},{367.813,3},{368.813,0},{370.000,3},{372.500,0},{373.563,3},{374.000,0},{377.250,3},{378.438,0},{383.000,3},{384.000,0,1}}
			
			local dai_tparity = {1,1,1,1}
			for i,v in pairs(talktable) do
				if v[2] == 0 then
					table.insert(messages,{v[1],function(self)
								if tauxvar then
									tauxvar:aux(0)
								end
							end})
				elseif v[2] == 3 then
					mod_message(v[1],function(self)
						if tauxvar then
							tauxvar:aux(1)
						end
					end)
				end
			end
			
			--a lot of this is manual control, i could have coded a table to store exactly all of the parameters to run it at then have a loop parse through the tables and call the function but it was legit faster to just copypaste things lol
			
			function zoomActor(actorRef, length,zoomval)
				local initLen = length*.5
				local fallLen = length*.5
				local rotRnd = math.random(-45,45)
				if actorRef then
					actorRef:hidden(0)
					actorRef:rotationz(rotRnd)
					actorRef:decelerate(initLen*spb)
					actorRef:zoom(zoomval)
					actorRef:rotationz(0)
					if length == 4 then
						actorRef:sleep(0)
						actorRef:zoomx(zoomval/1.5)
						actorRef:zoomy(zoomval*4)
					end
					actorRef:accelerate(fallLen*spb)
					actorRef:zoom(0)
					actorRef:rotationz(rotRnd*-1)
				end
			end
			
			mod_message(88,function(self) zoomActor(vtd_ichi,1,1); end)
			mod_message(89,function(self) zoomActor(vtd_ni,1,1.15); end)
			mod_message(90,function(self) zoomActor(vtd_san,1,1.3); end)
			mod_message(91,function(self) zoomActor(vtd_shi,1,1.45); end)
			mod_message(92,function(self) zoomActor(vtd_ni,1,1.6); end)
			mod_message(93,function(self) zoomActor(vtd_ni,1,1.75); end)
			mod_message(94,function(self) zoomActor(vtd_san,1,1.9); end)
			mod_message(95,function(self) zoomActor(vtd_shi,1,2.05); end)
			mod_message(96,function(self) zoomActor(vtd_san,1,2.2); end)
			mod_message(97,function(self) zoomActor(vtd_ni,1,2.35); end)
			mod_message(98,function(self) zoomActor(vtd_san,1,2.5); end)
			mod_message(99,function(self) zoomActor(vtd_shi,1,2.65); end)
			mod_message(100,function(self) zoomActor(vtd_shi,1,2.8); end)
			mod_message(101,function(self) zoomActor(vtd_ni,1,2.95); end)
			mod_message(102,function(self) zoomActor(vtd_san,1,3.1); end)
			mod_message(103,function(self) zoomActor(vtd_shi,1,3.25); end)
			
			mod_message(120,function(self) zoomActor(vtd_ichi,1,2); end)
			mod_message(121,function(self) zoomActor(vtd_ni,1,2); end)
			mod_message(122,function(self) zoomActor(vtd_ichi,1,2); end)
			mod_message(123,function(self) zoomActor(vtd_ni,1,2); end)
			mod_message(124,function(self) zoomActor(vtd_ni,1,4); end)
			mod_message(125,function(self) zoomActor(vtd_ni,1,2); end)
			mod_message(126,function(self) zoomActor(vtd_ni,1,4); end)
			mod_message(127,function(self) zoomActor(vtd_ni,1,2); end)
			
			mod_message(144,function(self) zoomActor(vtd_san,1,2.5); end)
			mod_message(145,function(self) zoomActor(vtd_ni,1,2.25); end)
			mod_message(146,function(self) zoomActor(vtd_san,1,2); end)
			mod_message(147,function(self) zoomActor(vtd_shi,1,2.75); end)
			mod_message(148,function(self) zoomActor(vtd_shi,1,1.5); end)
			mod_message(149,function(self) zoomActor(vtd_ni,1,2.5); end)
			mod_message(150,function(self) zoomActor(vtd_san,1,2); end)
			mod_message(151,function(self) zoomActor(vtd_shi,1,5); end)
			
			mod_message(176,function(self) zoomActor(vtd_ichi,1,.5); end)
			mod_message(177,function(self) zoomActor(vtd_ni,1,.5); end)
			mod_message(178,function(self) zoomActor(vtd_san,1,.6); end)
			mod_message(179,function(self) zoomActor(vtd_shi,1,.75); end)
			mod_message(180,function(self) zoomActor(vtd_ni,1,2); end)
			mod_message(181,function(self) zoomActor(vtd_ni,1,.75); end)
			mod_message(182,function(self) zoomActor(vtd_san,1,1); end)
			mod_message(183,function(self) zoomActor(vtd_shi,1,1); end)
			
			mod_message(232,function(self) zoomActor(vtd_ni,2,4); end)
			mod_message(234,function(self) zoomActor(vtd_ni,2,2); end)
			mod_message(236,function(self) zoomActor(vtd_san,2,3); end)
			mod_message(238,function(self) zoomActor(vtd_shi,2,5); end)
			
			mod_message(248,function(self) zoomActor(vtd_san,2,4); end)
			mod_message(250,function(self) zoomActor(vtd_ni,2,2); end)
			mod_message(252,function(self) zoomActor(vtd_san,2,3); end)
			mod_message(254,function(self) zoomActor(vtd_shi,2,5); end)
			
			
			mod_message(356,function(self) zoomActor(vtdt_inhale,1,1); end)
			mod_message(357,function(self) zoomActor(vtdt_exhale,1,1.25); end)
			mod_message(358,function(self) zoomActor(vtdt_inhale,1,1.5); end)
			mod_message(359,function(self) zoomActor(vtdt_exhale,1,1.75); end)
			mod_message(360,function(self) zoomActor(vtdt_inhale,1,2); end)
			mod_message(361,function(self) zoomActor(vtdt_exhale,1,2.25); end)
			mod_message(362,function(self) zoomActor(vtdt_inhale,1,2.5); end)
			mod_message(363,function(self) zoomActor(vtdt_exhale,1,2.75); end)
			
			mod_message(364,function(self) zoomActor(vtdt_inhale,2,3); end)
			mod_message(366,function(self) zoomActor(vtdt_inhale,2,3.25); end)
			mod_message(368,function(self) zoomActor(vtdt_inhale,2,3.5); end)
			mod_message(370,function(self) zoomActor(vtdt_inhale,1.8,3.75); end)
			mod_message(372-.2,function(self) zoomActor(vtdt_inhale,4,4.5); end)
			mod_message(377,function(self) zoomActor(vtdt_exhale,3,.5); end)
			
			
			--taro
			mod_message(32,function()
				vtd_rainbow:linear(0.5)
				vtd_rainbow:diffusealpha(1)
				vtd_rainbow:linear(1)
				vtd_rainbow:diffusealpha(0)
			end)
			
			mod_message(267,function()
				vtd_rainbow:diffusealpha(.25)
				vtd_rainbow:linear(spb*4)
				vtd_rainbow:diffusealpha(0)
			end)
			
			--hi
			
			mod_message(26,function()
				vtd_group1:hidden(0)
				vtd_group1:x(SCREEN_WIDTH*-.3)
				vtd_group1:y(SCREEN_HEIGHT*.7)
				vtd_group1:decelerate(1)
				vtd_group1:x(100)
				vtd_group1:sleep(.4)
				vtd_group1:accelerate(2)
				vtd_group1:y(SCREEN_HEIGHT*1.25)
				
				vtd_group3:hidden(0)
				vtd_group3:x(SCREEN_WIDTH*1.3)
				vtd_group3:y(SCREEN_HEIGHT*.7)
				vtd_group3:decelerate(1)
				vtd_group3:x(SCREEN_WIDTH-100)
				vtd_group3:sleep(.4)
				vtd_group3:accelerate(2)
				vtd_group3:y(SCREEN_HEIGHT*1.25)
				
				vtd_group2:hidden(0)
				vtd_group2:x(SCREEN_WIDTH*-.3)
				vtd_group2:y(SCREEN_HEIGHT*.5)
				vtd_group2:decelerate(1)
				vtd_group2:x(120)
				vtd_group2:sleep(.4)
				vtd_group2:accelerate(2)
				vtd_group2:y(SCREEN_HEIGHT*1.4)
				
				vtd_group4:hidden(0)
				vtd_group4:x(SCREEN_WIDTH*1.3)
				vtd_group4:y(SCREEN_HEIGHT*.4)
				vtd_group4:decelerate(1)
				vtd_group4:x(SCREEN_WIDTH-120)
				vtd_group4:sleep(.4)
				vtd_group4:accelerate(2)
				vtd_group4:y(SCREEN_HEIGHT*1.4)
				
				vtd_group5:hidden(0)
				vtd_group5:x(125)
				vtd_group5:y(SCREEN_HEIGHT*.18)
				vtd_group5:zoomy(0)
				vtd_group5:bounceend(1)
				vtd_group5:zoomy(1)
				vtd_group5:sleep(1.1)
				vtd_group5:bouncebegin(.6)
				vtd_group5:zoomy(0)
				vtd_group5:bob()
				vtd_group5:effectmagnitude(0,5,0)
			end)
			
			mod_message(28,function()
				vtd_group6:hidden(0)
				vtd_group6:x(SCREEN_CENTER_X+200)
				vtd_group6:y(SCREEN_HEIGHT+128)
				vtd_group6:decelerate(1.25)
				vtd_group6:x(SCREEN_CENTER_X)
				vtd_group6:y(60)
				vtd_group6:sleep(.1)
				vtd_group6:accelerate(1.25)
				vtd_group6:x(SCREEN_CENTER_X-160)
				vtd_group6:y(SCREEN_HEIGHT+128)
				vtd_group6:wag(0)
			end)
			
---------------------------------------------------------------------------------------
----------------------DON'T TOUCH IT KIDDO---------------------------------------------
---------------------------------------------------------------------------------------
			
			function message_compare(a,b)
				return a[1] < b[1]
			end
			
			if table.getn(messages) > 1 then
				table.sort(messages, message_compare)
			end
			
			self:queuecommand('Update');
			
		end"
        
		UpdateCommand="%function(self)

        ---------------------------------------------------------------------------------------
        ----------------------DON'T TOUCH IT KIDDO---------------------------------------------
        ---------------------------------------------------------------------------------------
        
            --hide things as needed, and set up aliases if checked is false
			if not checked and GAMESTATE:GetSongBeat()>=0 then
				
                thingsToGrab = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame','Lyrics','SongForeground','SongBackground','Overlay','Underlay'}
                thingsToHide = {'LifeP1','LifeP2','ScoreP1','ScoreP2','BPMDisplay','LifeFrame','ScoreFrame','Overlay','Underlay'}
                
                for i,v in ipairs(thingsToGrab) do
                    _G[v] = SCREENMAN:GetTopScreen():GetChild(v) or nil
                end
                
                for i,v in ipairs(thingsToHide) do
                    if _G[v] then _G[v]:hidden(1) end
                end
				
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(mod_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				
				for i,v in pairs(mod_plr) do
					if SCREENMAN:GetTopScreen():GetChild('PlayerOptionsP'..i) then
						_G['init_modsp'..i] = SCREENMAN:GetTopScreen():GetChild('PlayerOptionsP'..i):GetText();
					end
				end
				
				screen = SCREENMAN:GetTopScreen();
				checked = true;
                
                P1 = SCREENMAN:GetTopScreen():GetChild('PlayerP1');
				P2 = SCREENMAN:GetTopScreen():GetChild('PlayerP2');
			end
			
			local beat = GAMESTATE:GetSongBeat()
				

            if beat > mod_firstSeenBeat+0.1 then -- performance coding!! --
            
                -----------------------
                -- Player mod resets --
                -----------------------
            
                for i=1,2 do
                    GAMESTATE:ApplyGameCommand('mod,clearall',i)
                    if _G['init_modsp'..i] then 
                        GAMESTATE:ApplyGameCommand('mod,'.._G['init_modsp'..i],i)
                    end
                end
            
                ------------------------------------------------------------------------------
                -- custom mod reader by TaroNuke edited by WinDEU and re-stolen by TaroNuke --
                ------------------------------------------------------------------------------
                for i,v in pairs(mods) do
                    if v and table.getn(v) > 3 and v[1] and v[2] and v[3] and v[4] then
                        if beat >=v[1] then
                            if (v[4] == 'len' and beat <=v[1]+v[2]) or (v[4] == 'end' and beat <=v[2]) then
                                if table.getn(v) == 5 then
                                    GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
                                else
                                    GAMESTATE:ApplyGameCommand('mod,'..v[3]);
                                end						
                            end
                        end
                    else
                        v[1] = 0;
                        v[2] = 0;
                        v[3] = '';
                        v[4] = 'error';
                        SCREENMAN:SystemMessage('Bad mod in beat-based table (line '..i..')');
                    end
                end
                
				---------------------------------------------------
				-- ease mod reader v2                            --
				-- friendship ended with if wall                 --
				-- now functions as parameters is my best friend --
				---------------------------------------------------
				for i,v in pairs(mods_ease) do
					if beat >=v[1] then
						if (v[6] == 'len' and beat <=v[1]+v[2]) or (v[6] == 'end' and beat <=v[2]) then
							
							local duration = v[2];
							if v[6] == 'end' then duration = v[2] - v[1] end
							local curve = v[7]
							
							local strength = curve(beat - v[1], v[3], v[4] - v[3], duration, v[10], v[11]) --extra parameters for back and elastic eases :eyes:
							
							if v[5] == 'xmod' then
								if table.getn(v) >= 8 then GAMESTATE:ApplyGameCommand('mod,*100000 '..strength..'x',v[8]);
								else GAMESTATE:ApplyGameCommand('mod,*100000 '..strength..'x'); end
							else
								if table.getn(v) >= 8 then GAMESTATE:ApplyGameCommand('mod,*100000 '..strength..' '..v[5],v[8]);
								else GAMESTATE:ApplyGameCommand('mod,*100000 '..strength..' '..v[5]); end
							end
						elseif (v[9] and ((v[6] == 'len' and beat <=v[1]+v[2]+v[9]) or (v[6] == 'end' and beat <=v[9]))) then
							if v[5] == 'xmod' then
								if  v[8] then GAMESTATE:ApplyGameCommand('mod,*100000 '..v[4]..'x', v[8]);
								else GAMESTATE:ApplyGameCommand('mod,*100000 '..v[4]..'x'); end
							else
								if v[8] then GAMESTATE:ApplyGameCommand('mod,*100000 '..v[4]..' '..v[5], v[8]);
								else GAMESTATE:ApplyGameCommand('mod,*100000 '..v[4]..' '..v[5]); end
							end
						end
					end
				end
				
                ------------------
                -- Actions shit --
                ------------------
                while curmessage<=table.getn(messages) and GAMESTATE:GetSongBeat()>=messages[curmessage][1] do
                    if messages[curmessage][3] or GAMESTATE:GetSongBeat() < messages[curmessage][1]+2 then
                        if type(messages[curmessage][2]) == 'function' then
                            messages[curmessage][2]()
                        elseif type(messages[curmessage][2]) == 'string' then
                            MESSAGEMAN:Broadcast(messages[curmessage][2]);
                        end
                    end
                    curmessage = curmessage+1;
                end
			
				if beat > 88 and beat < 92 then
					for i,v in ipairs(mod_plr) do
						if v then
							v:x(SCREEN_CENTER_X + 10*(i*2-3)*math.sin(beat*math.pi))
						end
					end
				elseif beat > 92 and beat < 96 then
					for i,v in ipairs(mod_plr) do
						if v then
							v:x(SCREEN_CENTER_X + 20*(i*2-3)*math.sin(beat*math.pi))
						end
					end
				elseif beat > 96 and beat < 100 then
					for i,v in ipairs(mod_plr) do
						if v then
							v:x(SCREEN_CENTER_X + 30*(i*2-3)*math.sin(beat*math.pi))
						end
					end
					
				elseif beat > 100 and beat < 103 then
					for i,v in ipairs(mod_plr) do
						if v then
							v:x(SCREEN_CENTER_X + 40*(i*2-3)*math.sin(beat*math.pi))
						end
					end
				elseif beat > 103 and beat < 120 then
					for i,v in ipairs(mod_plr) do
						if v then
							v:x(SCREEN_CENTER_X)
							v:z(150*(i*2-3)*math.sin(beat*math.pi))
						end
					end
				elseif beat > 120 and beat < 136 then
					for i,v in pairs(mod_plr) do
						if v then 
							v:z(0)
							v:y(SCREEN_CENTER_Y + 30*(i*2-3)*math.sin(beat*math.pi))
						end
					end
				elseif beat > 136 and beat < 152 then
					for i,v in pairs(mod_plr) do
						if v then
							v:y(SCREEN_CENTER_Y)
							v:z(175*(i*2-3)*math.sin(beat*math.pi))
						end
					end
				elseif beat > 152 and beat < 157 then
					local modEf = auxvar:getaux()
					for i,v in ipairs(mod_plr) do
						if v then
							v:z(modEf*(i*2-3)*math.sin(beat*math.pi))
						end
					end
				elseif beat > 157 and beat < 158 then
					for i,v in ipairs(mod_plr) do
						if v then
							v:z(0)
						end
					end
				end
				
				if tauxvar and vtd_tkyi then
					local talkczech = tauxvar:getaux()
					if talkczech == 0 then
						vtd_tkyi:setstate(0)
					elseif talkczech == 1 then
						vtd_tkyi:play()
						tauxvar:aux(2)
					end
				
				end

            end
			
			self:sleep(0.02);
			self:queuecommand('Update');

---------------------------------------------------------------------------------------
----------------------END DON'T TOUCH IT KIDDO-----------------------------------------
---------------------------------------------------------------------------------------
          
        end"
		
	/>
    
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand="hidden,1" InitCommand="%function(self) auxvar=self; self:hidden(1) end" 
		bounceAuxMessageCommand="aux,100;linear,spb*4;aux,0"
	/>
	<Layer
		Type="Quad"
		OnCommand="hidden,1" InitCommand="%function(self) tauxvar=self; self:aux(0); self:hidden(1) end"
	/>
	
	<Layer Type="ActorFrame" InitCommand="%function(self) vtd_counting = self; end"><children>
		<Layer File="ichi"
			InitCommand="%function(self)
				self:hidden(0)
				self:x(SCREEN_WIDTH*.5)
				self:y(SCREEN_HEIGHT*.5)
				self:zoom(0)
				self:blend('add')
				vtd_ichi = self;
			end"
		/>
		<Layer File="ni"
			InitCommand="%function(self)
				self:hidden(0)
				self:x(SCREEN_WIDTH*.5)
				self:y(SCREEN_HEIGHT*.5)
				self:zoom(0)
				self:blend('add')
				vtd_ni = self;
			end"
		/>
		<Layer File="san"
			InitCommand="%function(self)
				self:hidden(0)
				self:x(SCREEN_WIDTH*.5)
				self:y(SCREEN_HEIGHT*.5)
				self:zoom(0)
				self:blend('add')
				vtd_san = self;
			end"
		/>
		<Layer File="shi"
			InitCommand="%function(self)
				self:hidden(0)
				self:x(SCREEN_WIDTH*.5)
				self:y(SCREEN_HEIGHT*.5)
				self:zoom(0)
				self:blend('add')
				vtd_shi = self;
			end"
		/>
		
	</children></Layer>
	<Layer File="dismiss"
		OnCommand="%function(self)
			self:hidden(1)
			self:x(SCREEN_CENTER_X)
			vtdt_dismiss = self;
		end" HideSelfCommand="hidden,1"
	/>
	<Layer File="sprites/hips.sprite"
		OnCommand="%function(self)
			self:hidden(1)
			self:x(SCREEN_CENTER_X)
			self:y(SCREEN_HEIGHT*1.2)
			self:zoom(.75)
			self:effectclock('bgm')
			vtd_hips = self;
		end"
		HideSelfCommand="hidden,1"
	/>
	<Layer File="sprites/legs.sprite"
		OnCommand="%function(self)
			self:hidden(1)
			self:x(SCREEN_CENTER_X)
			self:y(SCREEN_HEIGHT*-.2)
			self:zoom(.75)
			self:rotationz(180)			
			self:effectclock('bgm')
			vtd_legs = self;
		end"
		HideSelfCommand="hidden,1"
	/>
	
	<Layer Type="ActorFrame" OnCommand="fov,20;" ><children>
		<Layer Type="Quad" InitCommand="%function(self) vtd_rainbow=self end"
		OnCommand="stretchto,0,0,SCREEN_WIDTH,SCREEN_HEIGHT;rainbow;effectperiod,2;effectclock,bgm;diffusealpha,0;ztestmode,writeonfail;" />
	</children></Layer>
	
</children></ActorFrame>