<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,112.67 + (60 / 215 * 8)"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{19.026,'OneTwoThree'},
					{43.584,'ThreeTwoOne'},
					{86.002,'OneTwoThree'},
					{110.561,'ThreeTwoOne'},
				};
				
				
				prefix_mods = {
				
				{0,200,'1.5x,-999999% Cover,*10000 No Beat','end'},
				
				{0.328,240/215/8,'*7.1667 50% Split','len'},
				{0.328+240/215/8,240/215/8,'*7.1667 No Split','len'},
				
				{0.328+240/215/2,240/215/8,'*7.1667 50% Reverse,*7.1667 -50% Split','len'},
				{0.328+240/215/2+240/215/8,240/215/8,'*7.1667 No Reverse,*7.1667 No Split','len'},
				
				{0.328+240/215/2*2,240/215/16,'*7.1667 25% Cross','len'},
				{0.328+240/215/2*2+240/215/16,240/215/16,'*7.1667 No Cross','len'},
				{0.328+240/215/2*2+240/215/16*2,240/215/16,'*7.1667 25% Cross','len'},
				{0.328+240/215/2*2+240/215/16*3,240/215/16,'*7.1667 No Cross','len'},
				
				{0.328+240/215/2*3,240/215/8,'*7.1667 50% Reverse,*7.1667 -50% Cross','len'},
				{0.328+240/215/2*3+240/215/8,240/215/8,'*7.1667 No Reverse,*7.1667 No Cross','len'},
				
				{0.328+240/215/2*4,240/215/8,'*7.1667 50% Alternate','len'},
				{0.328+240/215/2*4+240/215/8,240/215/8,'*7.1667 No Alternate','len'},
				
				{0.328+240/215/2*5,240/215/8,'*7.1667 50% Reverse,*7.1667 -50% Alternate','len'},
				{0.328+240/215/2*5+240/215/8,240/215/8,'*7.1667 No Reverse,*7.1667 No Alternate','len'},
				
				{0.328+240/215/2*6,240/215/16,'*7.1667 25% Cross','len'},
				{0.328+240/215/2*6+240/215/16,240/215/16,'*7.1667 No Cross','len'},
				{0.328+240/215/2*6+240/215/16*2,240/215/16,'*7.1667 25% Cross','len'},
				{0.328+240/215/2*6+240/215/16*3,240/215/16,'*7.1667 No Cross','len'},
				
				{0.328+240/215/2*7,240/215/8,'*7.1667 50% Reverse,*7.1667 -50% Cross','len'},
				{0.328+240/215/2*7+240/215/8,240/215/8,'*7.1667 No Reverse,*7.1667 No Cross','len'},
				
				{0.328+240/215/2*8,240/215/8,'*7.1667 50% Cross','len'},
				{0.328+240/215/2*8+240/215/8,240/215/8,'*7.1667 No Cross','len'},
				
				{0.328+240/215/2*9,240/215/16,'*7.1667 25% Reverse,*7.1667 -25% Cross','len'},
				{0.328+240/215/2*9+240/215/16,240/215/16,'*7.1667 No Reverse,*7.1667 No Cross','len'},
				{0.328+240/215/2*9+240/215/16*2,240/215/16,'*7.1667 25% Reverse,*7.1667 -25% Cross','len'},
				{0.328+240/215/2*9+240/215/16*3,240/215/16,'*7.1667 No Reverse,*7.1667 No Cross','len'},
				
				{0.328+240/215/2*10,240/215/8,'*7.1667 50% Reverse,*7.1667 -50% Split','len'},
				{0.328+240/215/2*10+240/215/8,240/215/8,'*7.1667 No Reverse,*7.1667 No Split','len'},
				
				{0.328+240/215/2*11,240/215/8,'*7.1667 50% Split','len'},
				{0.328+240/215/2*11+240/215/8,240/215/8,'*7.1667 No Split','len'},
				
				{7.026,17.909,'*0.35834 20% Flip,*3.5834 -200% Mini,0.75x','end'},
				{8.840,240/215*4,'*10000 200% Beat','len'},
				
				{7.305,8.840,'*0.895834 Dark','end'},
				{8.840,240/215/4,'*3.5834 No Dark','len'},
				
				{13.444,240/215/8,'*3.5834 50% Tipsy','len'},
				{15.537,240/215/8,'*7.1667 -50% Tipsy','len'},
				{15.677,240/215/8,'*10.75 Tipsy','len'},
				{16.654,240/215/8,'*14.334 -100% Tipsy','len'},
				{17.840,240/215/8,'*14.3334 No Tipsy','len'},
				
				{17.909,240/215/2,'*0.35834 No Flip,*3.5834 No Mini,*1.5 1.5x','len'},
				
				{18.886,240/215,'*100000 1500% Beat','len'},
				
				{19.863,28.793,'*7.1667 Distant','end'},
				{19.863,28.793,'*10000 0.5x,*10000 C645,*7.1667 200% Wave','end'},
				{28.793,42.468,'*14.3334 Hallway','end'},
				{28.793,42.468,'*10000 0.5x,*10000 C645,*7.1667 200% Wave,*1.79167 -50% Expand','end'},
				{20.002,26.979,'*10000 Beat','end'},
				{28.933,35.909,'*10000 Beat','end'},
				
				{27.119,240/215/8,'*3.5834 25% Reverse,*3.5834 -25% Split','len'},
				{27.119+240/215/8,240/215/4,'*3.5834 25% Reverse,*3.5834 No Split','len'},
				{27.119+240/215/8*3,240/215/4,'*3.5834 No Reverse,*3.5834 25% Split','len'},
				{27.119+240/215/8*5,240/215/4,'*3.5834 No Split','len'},
				
				{28.096,240/215/8,'*14.334 Invert','len'},
				{28.096+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{28.096+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{28.096+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{28.654,240/215/4,'*100000 1500% Beat','len'},
				
				{36.049,240/215/8,'*3.5834 25% Reverse,*3.5834 -25% Alternate','len'},
				{36.049+240/215/8,240/215/4,'*3.5834 25% Reverse,*3.5834 No Alternate','len'},
				{36.049+240/215/8*3,240/215/4,'*3.5834 No Reverse,*3.5834 25% Alternate','len'},
				{36.049+240/215/8*5,240/215/4,'*3.5834 No Alternate','len'},
				
				{37.026,240/215/8,'*14.334 Invert','len'},
				{37.026+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{37.026+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{37.026+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{38.142,240/215/8,'*14.334 Invert','len'},
				{38.142+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{38.142+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{38.142+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{39.258,240/215/8,'*14.334 Invert','len'},
				{39.258+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{39.258+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{39.258+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{40.375,240/215/8,'*14.334 Invert','len'},
				{40.375+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{40.375+240/215/8*2,240/215/4,'*14.334 Invert','len'},
				{40.375+240/215/8*4,240/215/8,'*14.334 No Invert','len'},
				{40.375+240/215/8*5,240/215/8,'*14.334 Invert','len'},
				{40.375+240/215/8*6,240/215/8,'*14.334 No Invert','len'},
				
				{37.723,240/215/8,'*3.5834 25% Cross','len'},
				{37.723+240/215/8,240/215/8,'*3.5834 No Cross','len'},
				
				{38.840,240/215/8,'*3.5834 25% Reverse,*3.5834 -25% Split','len'},
				{38.840+240/215/8,240/215/8,'*3.5834 No Reverse,*3.5834 No Split','len'},
				
				{39.956,240/215/8,'*3.5834 25% Alternate','len'},
				{39.956+240/215/8,240/215/8,'*3.5834 No Alternate','len'},
				
				{41.351,240/215/16,'*14.3334 Tipsy','len'},
				{42.398,240/215/4,'*14.3334 No Tipsy','len'},
				
				{42.468,240/215,'*10000 1.5x,*10000 C215,*3.5834 No Wave,*1.34375 No Expand,*2.6875 No Hallway','len'},
				
				{43.444,240/215,'*100000 1500% Beat','len'},
				
				{53.212,240/215/4,'*100000 1500% Beat','len'},
				
				{57.119,240/215/8,'*3.5834 25% Reverse,*3.5834 -25% Split','len'},
				{57.119+240/215/8,240/215/8,'*3.5834 No Reverse,*3.5834 No Split','len'},
				{57.119+240/215/8*2,240/215/8,'*3.5834 25% Split','len'},
				{57.119+240/215/8*3,240/215/8,'*3.5834 No Split','len'},
				{57.119+240/215/8*4,240/215/8,'*3.5834 25% Alternate','len'},
				{57.119+240/215/8*5,240/215/8,'*3.5834 25% Reverse,*3.5834 No Alternate','len'},
				{57.119+240/215/8*6,240/215/8,'*3.5834 25% Reverse,*3.5834 -25% Alternate','len'},
				{57.119+240/215/8*7,240/215/8,'*3.5834 No Reverse,*3.5834 No Alternate','len'},
				
				{61.444,240/215/16,'*14.3334 Tipsy','len'},
				{62.491,240/215/4,'*14.3334 No Tipsy','len'},
				
				{62.561,240/215*3,'*2.98612 1000% Tornado,*2.98612 1000% Bumpy,*0.895834 300% Distant,*0.75 200% Mini','len'},
				{65.909-0.050,240/215*3,'*100000 No Tornado,*100000 No Bumpy,*100000 No Distant','len'},
				
				{65.770,240/215/4*3,'*100000 1500% Beat','len'},
				
				{65.909,240/215/4,'*7.1667 133.334% Mini','len'},
				{65.909+240/215/4,240/215/4,'*7.1667 66.667% Mini','len'},
				{65.909+240/215/4*2,240/215/4,'*7.1667 No Mini','len'},
				
				{66.747,240/215/32,'*28.6667 100.01% Reverse,*14.3334 -50% Split,*14.3334 -50% Cross,*14.3334 -50% Alternate','len'},
				{66.747+240/215/32,240/215/32,'*28.6667 100.01% Reverse,*14.3334 -100% Split,*14.3334 No Cross,*14.3334 No Alternate','len'},
				{66.747+240/215/32*2,240/215/32,'*28.6667 100.01% Reverse,*14.3334 -50% Split,*14.3334 50% Cross,*14.3334 -50% Alternate','len'},
				{66.747+240/215/32*3,240/215/16,'*28.6667 100.01% Reverse,*14.3334 No Split,*14.3334 No Cross,*14.3334 No Alternate','len'},
				
				{66.886,200,'*14.3334 100.01% Reverse','end'},
				
				{67.305,240/215/8,'*7.1667 -50% Split','len'},
				{67.305+240/215/8,240/215/8,'*7.1667 No Split','len'},
				
				{67.305+240/215/2,240/215/8,'*7.1667 50% Reverse,*7.1667 50% Split','len'},
				{67.305+240/215/2+240/215/8,240/215/8,'*7.1667 100.01% Reverse,*7.1667 No Split','len'},
				
				{67.305+240/215/2*2,240/215/16,'*7.1667 -25% Cross','len'},
				{67.305+240/215/2*2+240/215/16,240/215/16,'*7.1667 No Cross','len'},
				{67.305+240/215/2*2+240/215/16*2,240/215/16,'*7.1667 -25% Cross','len'},
				{67.305+240/215/2*2+240/215/16*3,240/215/16,'*7.1667 No Cross','len'},
				
				{67.305+240/215/2*3,240/215/8,'*7.1667 50% Reverse,*7.1667 50% Cross','len'},
				{67.305+240/215/2*3+240/215/8,240/215/8,'*7.1667 100.01% Reverse,*7.1667 No Cross','len'},
				
				{67.305+240/215/2*4,240/215/8,'*7.1667 -50% Alternate','len'},
				{67.305+240/215/2*4+240/215/8,240/215/8,'*7.1667 No Alternate','len'},
				
				{67.305+240/215/2*5,240/215/8,'*7.1667 50% Reverse,*7.1667 50% Alternate','len'},
				{67.305+240/215/2*5+240/215/8,240/215/8,'*7.1667 100.01% Reverse,*7.1667 No Alternate','len'},
				
				{67.305+240/215/2*6,240/215/16,'*7.1667 -25% Cross','len'},
				{67.305+240/215/2*6+240/215/16,240/215/16,'*7.1667 No Cross','len'},
				{67.305+240/215/2*6+240/215/16*2,240/215/16,'*7.1667 -25% Cross','len'},
				{67.305+240/215/2*6+240/215/16*3,240/215/16,'*7.1667 No Cross','len'},
				
				{67.305+240/215/2*7,240/215/8,'*7.1667 50% Reverse,*7.1667 50% Cross','len'},
				{67.305+240/215/2*7+240/215/8,240/215/8,'*7.1667 100.01% Reverse,*7.1667 No Cross','len'},
				
				{67.305+240/215/2*8,240/215/8,'*7.1667 -50% Cross','len'},
				{67.305+240/215/2*8+240/215/8,240/215/8,'*7.1667 No Cross','len'},
				
				{67.305+240/215/2*9,240/215/16,'*7.1667 75% Reverse,*7.1667 25% Cross','len'},
				{67.305+240/215/2*9+240/215/16,240/215/16,'*7.1667 100.01% Reverse,*7.1667 No Cross','len'},
				{67.305+240/215/2*9+240/215/16*2,240/215/16,'*7.1667 75% Reverse,*7.1667 25% Cross','len'},
				{67.305+240/215/2*9+240/215/16*3,240/215/16,'*7.1667 100.01% Reverse,*7.1667 No Cross','len'},
				
				{67.305+240/215/2*10,240/215/8,'*7.1667 50% Reverse,*7.1667 50% Split','len'},
				{67.305+240/215/2*10+240/215/8,240/215/8,'*7.1667 100.01% Reverse,*7.1667 No Split','len'},
				
				{67.305+240/215/2*11,240/215/8,'*7.1667 -50% Split','len'},
				{67.305+240/215/2*11+240/215/8,240/215/8,'*7.1667 No Split','len'},
				
				{67.305+240/215/2*12,240/215/16,'*7.1667 -25% Cross','len'},
				{67.305+240/215/2*12+240/215/16,240/215/16,'*7.1667 No Cross','len'},
				{67.305+240/215/2*12+240/215/16*2,240/215/16,'*7.1667 -25% Cross','len'},
				{67.305+240/215/2*12+240/215/16*3,240/215/16,'*7.1667 No Cross','len'},
				
				{67.305+240/215/2*13,240/215/8,'*7.1667 50% Reverse,*7.1667 50% Cross','len'},
				{67.305+240/215/2*13+240/215/8,240/215/8,'*7.1667 100.01% Reverse,*7.1667 No Cross','len'},
				
				{75.398,240/215/4,'*0.71667 10% Flip,*7.1667 -100% Mini,0.75x','len'},
				{75.677,84.886,'*0.71667 20% Flip,*7.1667 -200% Mini,0.75x','end'},
				{75.816,240/215*4,'*10000 200% Beat','len'},
				
				{80.421,240/215/16,'*3.5834 25% Tipsy','len'},
				{81.468,240/215/16,'*7.1667 -25% Tipsy','len'},
				{81.537,240/215/16,'*10.75 50% Tipsy','len'},
				{82.584,240/215/16,'*14.3334 -50% Tipsy','len'},
				{82.654,240/215/16,'*17.9167 75% Tipsy','len'},
				{83.700,240/215/16,'*21.5 -75% Tipsy','len'},
				{83.770,240/215/16,'*25.0834 Tipsy','len'},
				{84.816,240/215/4,'*14.3334 No Tipsy','len'},
				
				{84.886,240/215/2,'*0.35834 No Flip,*3.5834 No Mini,*1.5 1.5x','len'},
				
				{85.863,240/215,'*100000 1500% Beat','len'},
				
				{86.840,95.770,'*7.1667 Distant','end'},
				{86.840,95.770,'*10000 0.5x,*10000 C645,*7.1667 200% Wave','end'},
				{95.770,109.444,'*14.3334 Hallway','end'},
				{95.770,109.444,'*10000 0.5x,*10000 C645,*7.1667 200% Wave,*1.79167 -50% Expand','end'},
				{86.979,93.956,'*10000 Beat','end'},
				{95.909,102.886,'*10000 Beat','end'},
				
				{94.096,240/215/8,'*3.5834 75% Reverse,*3.5834 25% Split','len'},
				{94.096+240/215/8,240/215/4,'*3.5834 75% Reverse,*3.5834 No Split','len'},
				{94.096+240/215/8*3,240/215/4,'*3.5834 100.01% Reverse,*3.5834 -25% Split','len'},
				{94.096+240/215/8*5,240/215/4,'*3.5834 No Split','len'},
				
				{95.072,240/215/8,'*14.334 Invert','len'},
				{95.072+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{95.072+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{95.072+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{95.630,240/215/4,'*100000 1500% Beat','len'},
				
				{103.026,240/215/8,'*3.5834 75% Reverse,*3.5834 25% Alternate','len'},
				{103.026+240/215/8,240/215/4,'*3.5834 75% Reverse,*3.5834 No Alternate','len'},
				{103.026+240/215/8*3,240/215/4,'*3.5834 100.01% Reverse,*3.5834 -25% Alternate','len'},
				{103.026+240/215/8*5,240/215/4,'*3.5834 No Alternate','len'},
				
				{104.002,240/215/8,'*14.334 Invert','len'},
				{104.002+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{104.002+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{104.002+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{105.119,240/215/8,'*14.334 Invert','len'},
				{105.119+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{105.119+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{105.119+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{106.235,240/215/8,'*14.334 Invert','len'},
				{106.235+240/215/8,240/215/8,'*14.334 No Invert','len'},
				{106.235+240/215/8*2,240/215/8,'*14.334 Invert','len'},
				{106.235+240/215/8*3,240/215/8,'*14.334 No Invert','len'},
				
				{104.700,240/215/8,'*3.5834 -25% Cross','len'},
				{104.700+240/215/8,240/215/8,'*3.5834 No Cross','len'},
				
				{105.816,240/215/8,'*3.5834 -25% Split','len'},
				{105.816+240/215/8,240/215/8,'*3.5834 No Split','len'},
				
				{106.933,240/215/8,'*3.5834 75% Reverse,*3.5834 25% Alternate','len'},
				{106.933+240/215/8,240/215/8,'*3.5834 100.01% Reverse,*3.5834 No Alternate','len'},
				
				{107.212,240/215/16,'*14.3334 Tipsy','len'},
				{109.375,240/215/4,'*14.3334 No Tipsy','len'},
				
				{109.444,240/215,'*10000 1.5x,*10000 C215,*3.5834 No Wave,*1.34375 No Expand,*2.6875 No Hallway','len'},
				
				{110.421,240/215,'*100000 1500% Beat','len'},
				
				}
				
				for i = 13.584,15.536,240/215/4 do
					table.insert(prefix_mods,{i,240/215/8,'*7.1667 -50% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/8,240/215/8,'*7.1667 50% Tipsy','len'});
				end
				
				for i = 15.816,16.653,240/215/4 do
					table.insert(prefix_mods,{i,240/215/8,'*14.334 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/8,240/215/8,'*14.334 Tipsy','len'});
				end
				
				for i = 16.793,17.839,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*28.6667 100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*28.6667 -100% Tipsy','len'});
				end
				
				for i = 41.421,42.397,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*28.6667 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*28.6667 Tipsy','len'});
				end
				
				for i = 44.700,53.629,240/215 do
					table.insert(prefix_mods,{i,240/215/4,'*1.79167 -25% Invert','len'});
					table.insert(prefix_mods,{i+240/215/4,240/215/4,'*1.79167 No Invert','len'});
					table.insert(prefix_mods,{i+240/215/4*2,240/215/4,'*1.79167 25% Invert','len'});
					table.insert(prefix_mods,{i+240/215/4*3,240/215/4,'*1.79167 No Invert','len'});
				end
				
				for i = 53.770,57.118,240/215 do
					table.insert(prefix_mods,{i,240/215/8,'*3.5834 25% Reverse,*1.79167 -12.5% Split,*1.79167 -12.5% Cross,*1.79167 -12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8,240/215/8,'*3.5834 No Reverse,*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*2,240/215/8,'*1.79167 -12.5% Split,*1.79167 12.5% Cross,*1.79167 12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*3,240/215/8,'*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*4,240/215/8,'*1.79167 12.5% Split,*1.79167 12.5% Cross,*1.79167 -12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*5,240/215/8,'*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*6,240/215/8,'*1.79167 12.5% Split,*1.79167 -12.5% Cross,*1.79167 12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*7,240/215/8,'*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
				end
				
				for i = 58.235,61.305,240/215 do
					table.insert(prefix_mods,{i,240/215/8,'*1.79167 12.5% Split,*1.79167 -12.5% Cross,*1.79167 12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8,240/215/8,'*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*2,240/215/8,'*1.79167 12.5% Split,*1.79167 12.5% Cross,*1.79167 -12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*3,240/215/8,'*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*4,240/215/8,'*1.79167 -12.5% Split,*1.79167 12.5% Cross,*1.79167 12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*5,240/215/8,'*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*6,240/215/8,'*3.5834 25% Reverse,*1.79167 -12.5% Split,*1.79167 -12.5% Cross,*1.79167 -12.5% Alternate','len'});
					table.insert(prefix_mods,{i+240/215/8*7,240/215/8,'*3.5834 No Reverse,*1.79167 No Split,*1.79167 No Cross,*1.79167 No Alternate','len'});
				end
				
				for i = 61.514,62.490,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*28.6667 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*28.6667 Tipsy','len'});
				end
				
				for i = 80.491,81.467,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*7.1667 -25% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*7.1667 25% Tipsy','len'});
				end
				
				for i = 81.607,82.583,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*14.3334 -50% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*14.3334 50% Tipsy','len'});
				end
				
				for i = 82.723,83.699,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*21.5 -75% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*21.5 75% Tipsy','len'});
				end
				
				for i = 83.840,84.815,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*28.6667 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*28.6667 Tipsy','len'});
				end
				
				for i = 107.282,109.374,240/215/8 do
					table.insert(prefix_mods,{i,240/215/16,'*28.6667 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/215/16,240/215/16,'*28.6667 Tipsy','len'});
				end
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						
					end
				end
			end
			
			if beat >= 405.5 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:accelerate(240/215/4*5);
						v:zoomx(0);
						v:zoomy(0);
						v:rotationz(360);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			
			if beat >= 160 and beat < 191 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..math.sin(beat*math.pi)*100 ..'% Wave');
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.037 - 0.003) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;hidden,1" OneMessageCommand="hidden,0;sleep,240/215/4;queuemessage,Done" OneTwoThreeMessageCommand="hidden,0;sleep,240/215/4;queuemessage,TwoThree" TwoThreeMessageCommand="hidden,1;" DoneMessageCommand="hidden,1;" ><children>
		<Layer File="characters/rorone" OnCommand="vibrate;diffuse,#FFFF00AA;effectmagnitude,10,10,0;blend,add" />
		<Layer File="characters/rorone" OnCommand="vibrate;diffuse,#00FFFFAA;effectmagnitude,10,20,0;blend,add" />
		<Layer File="characters/rorone" OnCommand="vibrate;diffuse,#FF00FFAA;effectmagnitude,10,30,0;blend,add" />
	</children></ActorFrame>
	
	<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;hidden,1" TwoOneMessageCommand="hidden,0;sleep,240/215/4;queuemessage,One" TwoThreeMessageCommand="hidden,0;sleep,240/215/4;queuemessage,Three" OneMessageCommand="hidden,1;" ThreeMessageCommand="hidden,1;" ><children>
		<Layer File="characters/rortwo" OnCommand="vibrate;diffuse,#FFFF00AA;effectmagnitude,10,30,0;blend,add" />
		<Layer File="characters/rortwo" OnCommand="vibrate;diffuse,#00FFFFAA;effectmagnitude,10,10,0;blend,add" />
		<Layer File="characters/rortwo" OnCommand="vibrate;diffuse,#FF00FFAA;effectmagnitude,10,20,0;blend,add" />
	</children></ActorFrame>
	
	<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;hidden,1" ThreeMessageCommand="hidden,0;sleep,240/215/4;queuemessage,Done" ThreeTwoOneMessageCommand="hidden,0;sleep,240/215/4;queuemessage,TwoOne" TwoOneMessageCommand="hidden,1;" DoneMessageCommand="hidden,1;" ><children>
		<Layer File="characters/rorthree" OnCommand="vibrate;diffuse,#FFFF00AA;effectmagnitude,10,20,0;blend,add" />
		<Layer File="characters/rorthree" OnCommand="vibrate;diffuse,#00FFFFAA;effectmagnitude,10,30,0;blend,add" />
		<Layer File="characters/rorthree" OnCommand="vibrate;diffuse,#FF00FFAA;effectmagnitude,10,10,0;blend,add" />
	</children></ActorFrame>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		SkewTwitchMessageCommand="finishtweening;aux,0;linear,9.6;aux,1.5;linear,1.6;aux,0"
	/>
	
</children></ActorFrame>