<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,112.55"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{14.813,'IntroVib'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2.25x,-999999% Cover,*10000 No Beat','end'},
				
				{7.313,26.813,'*10000 Beat','end'},
				
				{14.813,26.813,'*5.3334 Wave,*1.3334 25% Tornado','end'},
				
				{1.125,240/160/16,'*10.6667 Distant','len'},
				{1.125+240/160/16,240/160/16*3,'*3.5556 No Distant','len'},
				
				{1.313,240/160/16,'*2.6667 25% Centered','len'},
				{1.313+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{1.313+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{1.313+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{4.313,240/160/32,'*2.6667 12.5% Centered','len'},
				{4.313+240/160/32,240/160/32,'*2.6667 No Centered','len'},
				{4.313+240/160/32*2,240/160/32,'*2.6667 12.5% Centered','len'},
				{4.313+240/160/32*3,240/160/32,'*2.6667 No Centered','len'},
				{4.313+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{4.313+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{6.000,240/160/16,'*42.6667 400% Drunk,*42.6667 400% Tipsy','len'},
				{6.000+240/160/16,240/160/8,'*42.6667 No Drunk,*42.6667 No Tipsy','len'},
				{6.281,240/160/16,'*42.6667 -400% Drunk,*42.6667 -400% Tipsy','len'},
				{6.281+240/160/16,240/160/8,'*42.6667 No Drunk,*42.6667 No Tipsy','len'},
				{6.563,240/160/16,'*42.6667 400% Drunk,*42.6667 400% Tipsy','len'},
				{6.563+240/160/16,240/160/8,'*42.6667 No Drunk,*42.6667 No Tipsy','len'},
				{6.750,240/160/16,'*42.6667 -400% Drunk,*42.6667 -400% Tipsy','len'},
				{6.750+240/160/16,240/160/2,'*6.0953 No Drunk,*6.0953 No Tipsy','len'},
				
				{7.500,240/160/16,'*5.3334 50% Brake','len'},
				{7.500+240/160/16,240/160/8,'*5.3334 No Brake','len'},
				{7.500+240/160/16*3,240/160/16,'*5.3334 50% Brake','len'},
				{7.500+240/160/16*4,240/160/8,'*5.3334 No Brake','len'},
				{7.500+240/160/16*6,240/160/16,'*5.3334 50% Brake','len'},
				{7.500+240/160/16*7,240/160/8,'*5.3334 No Brake','len'},
				{7.500+240/160/16*9,240/160/16,'*5.3334 50% Brake','len'},
				{7.500+240/160/16*10,240/160/8,'*5.3334 No Brake','len'},
				
				{9.375,240/160/16,'*5.3334 50% Brake','len'},
				{9.375+240/160/16,240/160/8,'*5.3334 No Brake','len'},
				{9.375+240/160/16*3,240/160/16,'*5.3334 50% Brake','len'},
				{9.375+240/160/16*4,240/160/8,'*5.3334 No Brake','len'},
				{9.375+240/160/16*6,240/160/16,'*5.3334 50% Brake','len'},
				{9.375+240/160/16*7,240/160/8,'*5.3334 No Brake','len'},
				{9.375+240/160/16*9,240/160/16,'*5.3334 50% Brake','len'},
				{9.375+240/160/16*10,240/160/8,'*5.3334 No Brake','len'},
				
				{11.250,240/160/16,'*5.3334 50% Brake','len'},
				{11.250+240/160/16,240/160/8,'*5.3334 No Brake','len'},
				{11.250+240/160/16*3,240/160/16,'*5.3334 50% Brake','len'},
				{11.250+240/160/16*4,240/160/8,'*5.3334 No Brake','len'},
				{11.250+240/160/16*6,240/160/16,'*5.3334 50% Brake','len'},
				{11.250+240/160/16*7,240/160/8,'*5.3334 No Brake','len'},
				{11.250+240/160/16*9,240/160/16,'*5.3334 50% Brake','len'},
				{11.250+240/160/16*10,240/160/8,'*5.3334 No Brake','len'},
				
				{13.125,240/160/16,'*5.3334 50% Brake','len'},
				{13.125+240/160/16,240/160/8,'*5.3334 No Brake','len'},
				{13.125+240/160/16*3,240/160/16,'*5.3334 50% Brake','len'},
				{13.125+240/160/16*4,240/160/8,'*5.3334 No Brake','len'},
				{13.125+240/160/16*6,240/160/16,'*5.3334 50% Brake','len'},
				{13.125+240/160/16*7,240/160/8,'*5.3334 No Brake','len'},
				{13.125+240/160/16*9,240/160/16,'*5.3334 50% Brake','len'},
				{13.125+240/160/16*10,240/160/8,'*5.3334 No Brake','len'},
				
				{8.625,240/160/16,'*5.3334 50% Flip','len'},
				{8.625+240/160/16,240/160/8,'*5.3334 No Flip','len'},
				{8.625+240/160/16*3,240/160/16,'*5.3334 50% Invert','len'},
				{8.625+240/160/16*4,240/160/8,'*5.3334 No Invert','len'},
				{8.625+240/160/16*6,240/160/16,'*5.3334 50% Flip','len'},
				{8.625+240/160/16*7,240/160/8,'*5.3334 No Flip','len'},
				
				{10.500,240/160/16,'*5.3334 50% Invert','len'},
				{10.500+240/160/16,240/160/8,'*5.3334 No Invert','len'},
				{10.500+240/160/16*3,240/160/16,'*5.3334 50% Flip','len'},
				{10.500+240/160/16*4,240/160/8,'*5.3334 No Flip','len'},
				{10.500+240/160/16*6,240/160/16,'*5.3334 50% Invert','len'},
				{10.500+240/160/16*7,240/160/8,'*5.3334 No Invert','len'},
				
				{12.375,240/160/16,'*5.3334 50% Flip','len'},
				{12.375+240/160/16,240/160/8,'*5.3334 No Flip','len'},
				{12.375+240/160/16*3,240/160/16,'*5.3334 50% Invert','len'},
				{12.375+240/160/16*4,240/160/8,'*5.3334 No Invert','len'},
				{12.375+240/160/16*6,240/160/16,'*5.3334 50% Flip','len'},
				{12.375+240/160/16*7,240/160/8,'*5.3334 No Flip','len'},
				
				{14.250,240/160/16,'*5.3334 50% Invert','len'},
				{14.250+240/160/16,240/160/8,'*5.3334 No Invert','len'},
				{14.250+240/160/16*3,240/160/16,'*5.3334 50% Flip','len'},
				{14.250+240/160/16*4,240/160/8,'*5.3334 No Flip','len'},
				{14.250+240/160/16*6,240/160/16,'*5.3334 50% Invert','len'},
				{14.250+240/160/16*7,240/160/8,'*5.3334 No Invert','len'},
				
				{14.250,240/160/16*3,'*8 75% Hallway','len'},
				{14.250+240/160/16*3,240/160/16*3,'*8 150% Hallway','len'},
				{14.250+240/160/16*6,240/160/8,'*16 No Hallway','len'},
				
				{19.500,240/160/16,'*10.6667 Distant','len'},
				{19.500+240/160/16,240/160/16,'*21.3334 Hallway','len'},
				{19.500+240/160/16*2,240/160/16,'*21.3334 Distant','len'},
				{19.500+240/160/16*3,240/160/16,'*21.3334 Hallway','len'},
				{19.500+240/160/16*4,240/160/16,'*21.3334 Distant','len'},
				{19.500+240/160/16*5,240/160/16,'*21.3334 Hallway','len'},
				{19.500+240/160/16*6,240/160/16,'*21.3334 Distant','len'},
				{19.500+240/160/16*7,240/160/16,'*21.3334 Hallway','len'},
				{19.500+240/160/16*8,240/160/16,'*21.3334 Distant','len'},
				{19.500+240/160/16*9,240/160/16,'*21.3334 Hallway','len'},
				{19.500+240/160/16*10,240/160/16,'*21.3334 Distant','len'},
				{19.500+240/160/16*11,240/160/16,'*21.3334 Hallway','len'},
				{19.500+240/160/16*12,240/160/16,'*21.3334 Distant','len'},
				{19.500+240/160/16*13,240/160/16,'*21.3334 Hallway','len'},
				{19.500+240/160/16*14,240/160/16,'*21.3334 Distant','len'},
				{19.500+240/160/16*15,240/160/16,'*10.6667 No Distant','len'},
				
				{25.688,240/160/8,'*10.6667 Invert','len'},
				{25.688+240/160/8,240/160/8,'*10.6667 No Invert','len'},
				
				{26.438,240/160/8,'*10.6667 Invert','len'},
				{26.438+240/160/8,240/160/8,'*10.6667 Flip,*10.6667 No Invert','len'},
				{26.438+240/160/8*2,240/160/8,'*10.6667 No Flip','len'},
				
				{27.000,240/160/16,'*2.6667 25% Centered','len'},
				{27.000+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{27.000+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{27.000+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{27.750,240/160/16,'*2.6667 25% Centered','len'},
				{27.750+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{27.750+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{27.750+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{28.500,240/160/16,'*2.6667 25% Centered','len'},
				{28.500+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{28.500+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{28.500+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{29.250,240/160/16,'*2.6667 25% Centered','len'},
				{29.250+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{29.250+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{29.250+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{30.000,240/160/16,'*2.6667 25% Centered','len'},
				{30.000+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{30.000+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{30.000+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{30.750,240/160/16,'*2.6667 25% Centered','len'},
				{30.750+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{30.750+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{30.750+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{31.500,240/160/16,'*2.6667 25% Centered','len'},
				{31.500+240/160/16,240/160/16,'*2.6667 No Centered','len'},
				{31.500+240/160/16*2,240/160/16,'*2.6667 25% Centered','len'},
				{31.500+240/160/16*3,240/160/16,'*2.6667 No Centered','len'},
				
				{31.688,240/160/4*3,'*0.8889 Stealth','len'},
				{31.688+240/160/4*3,240/160/8,'*5.3334 No Stealth','len'},
				
				{32.813,37.688,'*10000 200% Beat','end'},
				{38.813,49.313,'*10000 200% Beat','end'},
				{49.313,50.813,'*10000 1000% Beat','end'},
				
				{32.438,50.625,'*0.8889 50% Brake,*1.7778 Bumpy,*0.8889 50% Tipsy,*0.8889 50% Drunk','end'},
				
				{37.313,240/160/4,'*5.3334 100.01% Reverse,*2.6667 -50% Split,*2.6667 -50% Cross,*2.6667 -50% Alternate,','len'},
				{37.313+240/160/4,240/160/4,'*5.3334 No Reverse,*5.3334 50% Split,*2.6667 -50% Cross,*5.3334 50% Alternate,','len'},
				{37.313+240/160/4*2,240/160/4,'*5.3334 No Reverse,*5.3334 -50% Split,*5.3334 50% Cross,*2.6667 50% Alternate,','len'},
				{37.313+240/160/4*3,240/160/4,'*5.3334 No Reverse,*5.3334 50% Split,*2.6667 50% Cross,*5.3334 -50% Alternate,','len'},
				{37.313+240/160/4*4,240/160/4,'*5.3334 No Reverse,*2.6667 No Split,*2.6667 No Cross,*2.6667 No Alternate,','len'},
				
				{50.813,62.813,'*10000 Beat','end'},
				{62.813,73.313,'*10000 200% Beat','end'},
				
				{51.188,240/160/4,'*1.3334 25% Mini','len'},
				{51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				
				{6+51.188,240/160/4,'*1.3334 25% Mini','len'},
				{6+51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{6+51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{6+51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{6+51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{6+53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{6+54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{6+54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				{6+54.000+240/160,240/160/8,'*26.6667 500% Tornado','len'},
				{6+54.000+240/160+240/160/8,240/160/8*5,'*5.3334 No Tornado','len'},
				
				{12+51.188,240/160/4,'*1.3334 25% Mini','len'},
				{12+51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{12+51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{12+51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{12+51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{12+53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{12+54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{12+54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				
				{18+51.188,240/160/4,'*1.3334 25% Mini','len'},
				{18+51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{18+51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{18+51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{18+51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{18+53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{18+54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{18+54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				{18+54.000+240/160,240/160/8,'*26.6667 500% Tornado','len'},
				{18+54.000+240/160+240/160/8,240/160/8*5,'*5.3334 No Tornado','len'},
				
				{75.000,240/160/4,'*0.8889 16.6667% Reverse','len'},
				{75.000+240/160/4,240/160/4,'*0.8889 33.3334% Reverse','len'},
				{75.000+240/160/4*2,240/160/4,'*0.8889 16.6667% Reverse','len'},
				{75.000+240/160/4*3,240/160/4,'*0.8889 No Reverse','len'},
				{75.000+240/160/4*4,240/160/4,'*5.3334 100.01% Reverse,*2.6667 -50% Split,*2.6667 -50% Cross,*2.6667 -50% Alternate','len'},
				{75.000+240/160/4*5,240/160/4,'*5.3334 100.01% Reverse,*2.6667 -100% Split,*2.6667 No Cross,*2.6667 No Alternate','len'},
				{75.000+240/160/4*6,240/160/4,'*5.3334 100.01% Reverse,*2.6667 -50% Split,*2.6667 50% Cross,*2.6667 -50% Alternate','len'},
				{75.000+240/160/4*7,240/160/4,'*5.3334 100.01% Reverse,*2.6667 No Split,*2.6667 No Cross,*2.6667 No Alternate','len'},
				{75.000+240/160/4*8,240/160/4,'*0.8889 83.3334% Reverse','len'},
				{75.000+240/160/4*9,240/160/4,'*0.8889 66.6667% Reverse','len'},
				{75.000+240/160/4*10,240/160/4,'*0.8889 83.3334% Reverse','len'},
				{75.000+240/160/4*11,240/160/4,'*0.8889 100.01% Reverse','len'},
				{75.000+240/160/4*12,240/160/4,'*5.3334 No Reverse,*5.3334 Split','len'},
				{75.000+240/160/4*13,240/160/4,'*5.3334 No Split','len'},
				
				{80.250,240/160/16,'*42.6667 400% Drunk,*42.6667 400% Tipsy','len'},
				{80.250+240/160/16,240/160/8,'*42.6667 No Drunk,*42.6667 No Tipsy','len'},
				{80.531,240/160/16,'*42.6667 -400% Drunk,*42.6667 -400% Tipsy','len'},
				{80.531+240/160/16,240/160/8,'*42.6667 No Drunk,*42.6667 No Tipsy','len'},
				{80.813,240/160/16,'*42.6667 400% Drunk,*42.6667 400% Tipsy','len'},
				{80.813+240/160/16,240/160/8,'*42.6667 No Drunk,*42.6667 No Tipsy','len'},
				
				{81.000,240/160/4,'*0.8889 16.6667% Reverse','len'},
				{81.000+240/160/4,240/160/4,'*0.8889 33.3334% Reverse','len'},
				{81.000+240/160/4*2,240/160/4,'*0.8889 16.6667% Reverse','len'},
				{81.000+240/160/4*3,240/160/4,'*0.8889 No Reverse','len'},
				{81.000+240/160/4*4,240/160/4,'*5.3334 No Reverse,*2.6667 50% Split,*2.6667 -50% Cross,*2.6667 50% Alternate','len'},
				{81.000+240/160/4*5,240/160/4,'*5.3334 No Reverse,*2.6667 100% Split,*2.6667 No Cross,*2.6667 No Alternate','len'},
				{81.000+240/160/4*6,240/160/4,'*5.3334 No Reverse,*2.6667 50% Split,*2.6667 50% Cross,*2.6667 50% Alternate','len'},
				{81.000+240/160/4*7,240/160/4,'*5.3334 100.01% Reverse,*2.6667 No Split,*2.6667 No Cross,*2.6667 No Alternate','len'},
				{81.000+240/160/4*8,240/160/4,'*0.8889 83.3334% Reverse','len'},
				{81.000+240/160/4*9,240/160/4,'*0.8889 66.6667% Reverse','len'},
				{81.000+240/160/4*10,240/160/4,'*0.8889 83.3334% Reverse','len'},
				{81.000+240/160/4*11,240/160/4,'*0.8889 100.01% Reverse','len'},
				{81.000+240/160/4*12,240/160/4,'*5.3334 100.01% Reverse,*5.3334 -100% Split','len'},
				{81.000+240/160/4*13,240/160/4,'*5.3334 No Reverse,*5.3334 No Split','len'},
				
				{86.813,98.813,'*10000 300% Beat','end'},
				{98.813,109.313,'*10000 400% Beat','end'},
				
				{36+51.188,240/160/4,'*1.3334 25% Mini','len'},
				{36+51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{36+51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{36+51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{36+51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{36+53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{36+54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{36+54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				
				{42+51.188,240/160/4,'*1.3334 25% Mini','len'},
				{42+51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{42+51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{42+51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{42+51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{42+53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{42+54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{42+54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				{42+54.000+240/160,240/160/8,'*26.6667 500% Tornado','len'},
				{42+54.000+240/160+240/160/8,240/160/8*5,'*5.3334 No Tornado','len'},
				
				{48+51.188,240/160/4,'*1.3334 25% Mini','len'},
				{48+51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{48+51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{48+51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{48+51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{48+53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{48+54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{48+54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				
				{54+51.188,240/160/4,'*1.3334 25% Mini','len'},
				{54+51.188+240/160/4,240/160/4,'*1.3334 50% Mini','len'},
				{54+51.188+240/160/4*2,240/160/4,'*1.3334 75% Mini','len'},
				{54+51.188+240/160/4*3,240/160/4,'*1.3334 Mini','len'},
				{54+51.188+240/160/4*4,240/160/2,'*1.7778 No Mini','len'},
				
				{54+53.438,240/160/4,'*10000 1000% Beat','len'},
				
				{54+54.000,240/160,'*1.3334 200% Drunk,*1.3334 200% Tipsy','len'},
				{54+54.000+240/160,240/160/2,'*2.6667 No Drunk,*2.6667 No Tipsy','len'},
				{54+54.000+240/160,240/160/8,'*26.6667 500% Tornado','len'},
				{54+54.000+240/160+240/160/8,240/160/8*5,'*10.6667 No Tornado','len'},
				
				{110.438,240/160/16,'*10.6667 Distant','len'},
				{110.438+240/160/16,240/160/16*3,'*3.5556 No Distant','len'},
				{110.438+240/160/8*2,240/160/16,'*10.6667 Distant','len'},
				{110.438+240/160/8*2+240/160/16,240/160/16*3,'*3.5556 No Distant','len'},
				{110.438+240/160/8*4,240/160/8,'*5.3334 50% Stealth','len'},
				{110.438+240/160/8*5,240/160/8,'*5.3334 No Stealth','len'},
				{110.438+240/160/8*6,240/160*16,'*2.6667 Stealth,*2.6667 Dark','len'},
				
				
				}
				
				for i = 24.000,25.499,240/160/4 do
					table.insert(prefix_mods,{i,240/160/16,'*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16,240/160/16,'*10000 90% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16*2,240/160/16,'*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16*3,240/160/16,'*10000 No Stealth','len'});
				end
				
				for i = 44.063,45.187,240/160/4 do
					table.insert(prefix_mods,{i,240/160/16,'*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16,240/160/16,'*10000 90% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16*2,240/160/16,'*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16*3,240/160/16,'*10000 No Stealth','len'});
				end
				
				for i = 86.250,86.999,240/160/4 do
					table.insert(prefix_mods,{i,240/160/16,'*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16,240/160/16,'*10000 90% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16*2,240/160/16,'*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+240/160/16*3,240/160/16,'*10000 No Stealth','len'});
				end
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						
					end
				end
			end
			
			--[[
			if beat >= 194 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/135/8*3);
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
						v:rotationy(1440*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			]]
			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 39.5 and beat < 40.5 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:vibrate();
						v:effectmagnitude(auxvar:getaux(),auxvar:getaux(),0);
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (0.012 - 1.096) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		IntroVibMessageCommand="finishtweening;aux,50;linear,240/160/8;aux,0"
	/>
	
</children></ActorFrame>