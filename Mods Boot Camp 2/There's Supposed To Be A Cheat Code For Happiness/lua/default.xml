<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,126.48"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {

					{6.761,'PhaseInP1'},

					{7.184,'BeginningMigiP1'},
					{7.184+240/142/4*1,'BeginningShitaP1'},
					{7.184+240/142/4*2,'BeginningUeP1'},
					{7.184+240/142/4*3,'BeginningMigiP1'},
					{7.184+240/142/4*4,'BeginningMigiP1'},
					{7.184+240/142/4*5,'BeginningShitaP1'},
					{7.184+240/142/4*6,'BeginningMigiP1'},
					{7.184+240/142/4*7,'BeginningMigiP1'},

					{7.184+240/142/4*8,'BeginningUeP1'},
					{7.184+240/142/4*9,'BeginningUeP1'},
					{7.184+240/142/4*10,'BeginningShitaP1'},
					{7.184+240/142/4*11,'BeginningShitaP1'},
					{7.184+240/142/4*12,'BeginningHidariP1'},
					{7.184+240/142/4*13,'BeginningMigiP1'},
					{7.184+240/142/4*14,'BeginningHidariP1'},
					{7.184+240/142/4*15,'BeginningMigiP1'},

					{13.522,'PhaseInP2'},
					{13.944,'PhaseOutP1'},

					{13.944,'BeginningMigiP2'},
					{13.944+240/142/4*1,'BeginningShitaP2'},
					{13.944+240/142/4*2,'BeginningUeP2'},
					{13.944+240/142/4*3,'BeginningMigiP2'},
					{13.944+240/142/4*4,'BeginningMigiP2'},
					{13.944+240/142/4*5,'BeginningShitaP2'},
					{13.944+240/142/4*6,'BeginningMigiP2'},
					{13.944+240/142/4*7,'BeginningMigiP2'},

					{17.324,'RelocateP1'},

					{13.944+240/142/4*8,'BeginningUeP2'},
					{13.944+240/142/4*9,'BeginningUeP2'},
					{13.944+240/142/4*10,'BeginningShitaP2'},
					{13.944+240/142/4*11,'BeginningShitaP2'},
					{13.944+240/142/4*12,'BeginningHidariP2'},
					{13.944+240/142/4*13,'BeginningMigiP2'},
					{13.944+240/142/4*14,'BeginningHidariP2'},
					{13.944+240/142/4*15,'BeginningMigiP2'},

					{20.282,'PhaseInP1'},
					{20.705,'PhaseOutP2'},

					{20.705,'BeginningMigiP1'},
					{20.705+240/142/4*1,'BeginningShitaP1'},
					{20.705+240/142/4*2,'BeginningUeP1'},
					{20.705+240/142/4*3,'BeginningMigiP1'},
					{20.705+240/142/4*4,'BeginningMigiP1'},
					{20.705+240/142/4*5,'BeginningShitaP1'},
					{20.705+240/142/4*6,'BeginningMigiP1'},
					{20.705+240/142/4*7,'BeginningMigiP1'},
					{20.705+240/142/4*8,'BeginningUeP1'},
					{20.705+240/142/4*9,'BeginningUeP1'},
					{20.705+240/142/4*10,'BeginningShitaP1'},
					{20.705+240/142/4*11,'BeginningShitaP1'},

					{26.409,'HoldUp'},

					{29.155,'MainMigi'},
					{29.155+240/142/4*1,'MainShita'},
					{29.155+240/142/4*2,'MainUe'},
					{29.155+240/142/4*3,'MainMigi'},
					{29.155+240/142/4*4,'MainMigi'},
					{29.155+240/142/4*5,'MainShita'},
					{29.155+240/142/4*6,'MainMigi'},
					{29.155+240/142/4*7,'MainMigi'},
					{29.155+240/142/4*8,'MainUe'},
					{29.155+240/142/4*9,'MainUe'},
					{29.155+240/142/4*10,'MainShita'},
					{29.155+240/142/4*11,'MainShita'},
					{29.155+240/142/4*12,'MainHidari'},
					{29.155+240/142/4*13,'MainMigi'},
					{29.155+240/142/4*14,'MainHidari'},
					{29.155+240/142/4*15,'MainMigi'},

					{35.915,'MainMigi'},
					{35.915+240/142/4*1,'MainShita'},
					{35.915+240/142/4*2,'MainUe'},
					{35.915+240/142/4*3,'MainMigi'},
					{35.915+240/142/4*4,'MainMigi'},
					{35.915+240/142/4*5,'MainShita'},
					{35.915+240/142/4*6,'MainMigi'},
					{35.915+240/142/4*7,'MainMigi'},
					{35.915+240/142/4*8,'MainUe'},
					{35.915+240/142/4*9,'MainUe'},
					{35.915+240/142/4*10,'MainShita'},
					{35.915+240/142/4*11,'MainShita'},
					{35.915+240/142/4*12,'MainHidari'},

					{42.676,'MainMigi'},
					{42.676+240/142/4*1,'MainShita'},
					{42.676+240/142/4*2,'MainB'},
					{42.676+240/142/4*3,'MainA'},
					{42.676+240/142/4*4,'MainX'},
					{42.676+240/142/4*5,'MainY'},
					{42.676+240/142/4*6,'MainL'},
					{42.676+240/142/4*7,'MainR'},

					{42.676+240/142/4*8,'MainUe'},
					{42.676+240/142/4*9,'MainUe'},
					{42.676+240/142/4*10,'MainShita'},
					{42.676+240/142/4*11,'MainA'},
					{42.676+240/142/4*12,'MainY'},
					{42.676+240/142/4*13,'MainL'},
					{42.676+240/142/4*14,'MainR'},
					{42.676+240/142/4*15,'MainA'},

					{42.676+240/142/4*16,'MainMigi'},
					{42.676+240/142/4*17,'MainShita'},
					{42.676+240/142/4*18,'MainUe'},
					{42.676+240/142/4*19,'MainMigi'},
					{42.676+240/142/4*20,'MainA'},
					{42.676+240/142/4*21,'MainX'},
					{42.676+240/142/4*22,'MainY'},
					{42.676+240/142/4*23,'MainR'},

					{42.676+240/142/4*24,'MainUe'},
					{42.676+240/142/4*25,'MainUe'},
					{42.676+240/142/4*26,'MainShita'},
					{42.676+240/142/4*27,'MainShita'},

					{58.733,'Flippity1'},
					{58.733+240/142/2,'Flippity2'},
					{58.733+240/142/2*2,'Flippity1'},
					{58.733+240/142/2*3,'Flippity2'},
					{58.733+240/142/2*4,'Flippity1'},
					{58.733+240/142/2*5,'Flippity2'},
					{58.733+240/142/2*6,'Flippity1'},
					{58.733+240/142/2*7,'Flippity2'},
					{58.733+240/142/2*8,'Flippity1'},
					{58.733+240/142/2*9,'Flippity2'},
					{58.733+240/142/2*10,'Flippity1'},

					{68.028,'Flippity2'},
					{68.028+240/142/4,'Flippity1'},
					{68.028+240/142/4*2,'Flippity2'},
					{68.028+240/142/4*3,'Flippity1'},

					{71.409+240/142/8*0,'Phasity1'},
					{71.409+240/142/8*1,'PhaseRelocateP21'},
					{71.409+240/142/8*2,'Phasity2'},
					{71.409+240/142/8*3,'PhaseRelocateP11'},
					{71.409+240/142/8*4,'Phasity1'},
					{71.409+240/142/8*5,'PhaseRelocateCenter'},
					{71.409+240/142/8*6,'Phasity2Center'},
					{71.409+240/142/8*7,'PhaseRelocateP12'},

					{73.099,'QuickMigi'},
					{73.099+240/142/8*1,'QuickB'},
					{73.099+240/142/8*2,'QuickShita'},
					{73.099+240/142/8*3,'QuickA'},
					{73.099+240/142/8*4,'QuickY'},
					{73.099+240/142/8*5,'QuickUe'},
					{73.099+240/142/8*6,'QuickL'},
					{73.099+240/142/8*7,'QuickMigi'},

					{74.789+240/142/8*0,'Phasity1'},
					{74.789+240/142/8*1,'PhaseRelocateP22'},
					{74.789+240/142/8*2,'Phasity2'},
					{74.789+240/142/8*3,'PhaseRelocateP12'},
					{74.789+240/142/8*4,'Phasity1'},
					{74.789+240/142/8*5,'PhaseRelocateCenter'},
					{74.789+240/142/8*6,'Phasity2Center'},
					{74.789+240/142/8*7,'PhaseRelocateP11'},

					{76.479,'QuickUe'},
					{76.479+240/142/8*1,'QuickUe'},
					{76.479+240/142/8*2,'QuickShita'},
					{76.479+240/142/8*3,'QuickShita'},
					{76.479+240/142/8*4,'QuickHidari'},
					{76.479+240/142/8*5,'QuickMigi'},
					{76.479+240/142/8*6,'QuickY'},
					{76.479+240/142/8*7,'QuickL'},

					{78.169+240/142/8*0,'Phasity1'},
					{78.169+240/142/8*1,'PhaseRelocateP21'},
					{78.169+240/142/8*2,'Phasity2'},
					{78.169+240/142/8*3,'PhaseRelocateP11'},
					{78.169+240/142/8*4,'Phasity1'},
					{78.169+240/142/8*5,'PhaseRelocateCenter'},
					{78.169+240/142/8*6,'Phasity2Center'},
					{78.169+240/142/8*7,'PhaseRelocateP12'},

					{80.704,'QuickA'},
					{80.704+240/142/8*1,'QuickB'},
					{80.704+240/142/8*2,'QuickY'},
					{80.704+240/142/8*3,'QuickL'},

					{81.550,'MainR'},
					{81.550+240/142/4*1,'MainX'},
					{81.550+240/142/4*2,'MainMigi'},
					{81.550+240/142/4*3,'MainHidari'},

					{83.240,'QuickUe'},
					{83.240+240/142/8*1,'QuickShita'},

					{111.972,'MainMigi'},
					{111.972+240/142/4*1,'MainShita'},
					{111.972+240/142/4*2,'MainUe'},
					{111.972+240/142/4*3,'MainMigi'},
					{111.972+240/142/4*4,'MainMigi'},
					{111.972+240/142/4*5,'MainShita'},
					{111.972+240/142/4*6,'MainMigi'},
					{111.972+240/142/4*7,'MainMigi'},
					{111.972+240/142/4*8,'MainUe'},
					{111.972+240/142/4*9,'MainUe'},
					{111.972+240/142/4*10,'MainShita'},
					{111.972+240/142/4*11,'MainShita'},
					{111.972+240/142/4*12,'MainHidari'},
					{111.972+240/142/4*13,'MainMigi'},
					{111.972+240/142/4*14,'MainHidari'},
					{111.972+240/142/4*15,'MainMigi'},

					{118.733,'MainMigi'},
					{118.733+240/142/4*1,'MainShita'},
					{118.733+240/142/4*2,'MainUe'},
					{118.733+240/142/4*3,'MainMigi'},
					{118.733+240/142/4*4,'MainMigi'},
					{118.733+240/142/4*5,'MainShita'},
					{118.733+240/142/4*6,'MainMigi'},
					{118.733+240/142/4*7,'MainMigi'},
					{118.733+240/142/4*8,'MainUe'},
					{118.733+240/142/4*9,'MainUe'},
					{118.733+240/142/4*10,'MainShita'},
					{118.733+240/142/4*11,'MainShita'},
					{118.733+240/142/4*12,'MainHidari'},
					{118.733+240/142/4*13,'MainMigi'},
					{118.733+240/142/4*14,'MainHidari'},
					{118.733+240/142/4*15,'MainMigi'},

				};
				
				
				prefix_mods = {
				
				{0,200,'3x,-999999% Cover,*10000 No Beat','end'},

				{26.409,240/142/8*11,'*1.5 0x','len'},
				{25.775,29.155,'Blind','end'},

				{27.465,240/142/8,'*23.667 500% Tornado,*23.667 314% Dizzy,*14 7x','len'},
				{27.465+240/142/8*1,240/142/8,'*23.667 No Tornado,*23.667 No Dizzy,*14 0x','len'},
				{27.465+240/142/8*2,240/142/8,'*23.667 -500% Tornado,*23.667 -314% Dizzy,*14 7x','len'},
				{27.465+240/142/8*3,240/142/8,'*23.667 No Tornado,*23.667 No Dizzy,*14 0x','len'},
				{27.465+240/142/8*4,240/142/4,'*4.733 200% Distant,*1.1833 50% Reverse,*1.1833 50% Flip,*23.667 -500% Mini,*14 3x,*2.3667 Stealth,*2.3667 Dark','len'},
				{27.465+240/142/8*6,240/142/4,'*10000 Overhead,*1000 No Reverse,*1000 No Flip,*10000 200% Mini,*10000 No Stealth,*10000 No Dark','len'},
				{27.465+240/142/8*6+240/142/32,240/142/4-240/142/32,'*6 No Mini','len'},

				{29.155,40.986,'*0.8 50% Drunk','end'},
				{35.915,40.986,'*0.4 25% Tipsy','end'},
				{40.986,240/142/4,'*1.2 No Drunk,*0.6 No Tipsy','len'},

				{41.408,54.507,'*1.6 Drunk','end'},
				{47.746,54.507,'*0.8 50% Tipsy','end'},
				{54.507,240/142/4,'*2.4 No Drunk,*1.2 No Tipsy','len'},

				{55.141,240/142/16,'*947 -10000% Bumpy','len'},
				{55.141+240/142/16,240/142/16*7,'*136 No Bumpy','len'},

				{55.141,240/142/8*11,'*1.5 0x','len'},

				{56.197,240/142/8,'*23.667 500% Tornado,*23.667 314% Dizzy,*14 7x','len'},
				{56.197+240/142/8*1,240/142/8,'*23.667 No Tornado,*23.667 No Dizzy,*14 0x','len'},
				{56.197+240/142/8*2,240/142/8,'*23.667 -500% Tornado,*23.667 -314% Dizzy,*14 7x','len'},
				{56.197+240/142/8*3,240/142/8,'*23.667 No Tornado,*23.667 No Dizzy,*14 0x','len'},
				{56.197+240/142/8*4,240/142/4,'*4.733 200% Distant,*1.1833 50% Reverse,*1.1833 50% Flip,*23.667 -500% Mini,*14 3x,*2.3667 Stealth,*2.3667 Dark','len'},
				{56.197+240/142/8*6,240/142/4,'*10000 Overhead,*1000 No Reverse,*1000 No Flip,*10000 200% Mini,*10000 No Stealth,*10000 No Dark','len'},
				{56.197+240/142/8*6+240/142/32,240/142/4-240/142/32,'*6 No Mini','len'},

				{57.888,84.930,'*9.5 No Dark,No Blind','end'},
				{57.888,84.930,'*5 No Reverse','end'},

				{57.888,240/142/2+240/142/16,'*10000 Dark,Blind','len',2},
				{57.888+240/142,240/142/2+240/142/16,'*9.5 Dark,Blind','len',2},
				{57.888+240/142*2,240/142/2+240/142/16,'*9.5 Dark,Blind','len',2},
				{57.888+240/142*3,240/142/2+240/142/16,'*9.5 Dark,Blind','len',2},
				{57.888+240/142*4,240/142/2+240/142/16,'*9.5 Dark,Blind','len',2},
				{57.888+240/142*5,240/142/2+240/142/16,'*9.5 Dark,Blind','len',2},
				{57.888+240/142*6,240/142/4+240/142/16,'*9.5 Dark,Blind','len',2},
				{57.888+240/142/2*13,240/142/4+240/142/16,'*9.5 Dark,Blind','len',2},

				{58.733,240/142/2+240/142/16,'*9.5 Dark,Blind','len',1},
				{58.733+240/142,240/142/2+240/142/16,'*9.5 Dark,Blind','len',1},
				{58.733+240/142*2,240/142/2+240/142/16,'*9.5 Dark,Blind','len',1},
				{58.733+240/142*3,240/142/2+240/142/16,'*9.5 Dark,Blind','len',1},
				{58.733+240/142*4,240/142/2+240/142/16,'*9.5 Dark,Blind','len',1},
				{58.733+240/142*5,240/142/2+240/142/16,'*9.5 Dark,Blind','len',1},
				{58.733+240/142/4*23,240/142/4+240/142/16,'*9.5 Dark,Blind','len',1},
				{58.733+240/142/4*25,240/142/4*5,'*9.5 Dark,Blind','len',1},

				{59.155,240/142/2,'*5 100.01% Reverse','len',2},
				{59.155+240/142,240/142/2,'*5 100.01% Reverse','len',2},
				{59.155+240/142*2,240/142/2,'*5 100.01% Reverse','len',2},
				{59.155+240/142*3,240/142/2,'*5 100.01% Reverse','len',2},
				{59.155+240/142*4,240/142/2,'*5 100.01% Reverse','len',2},
				{59.155+240/142*5,240/142/8*3,'*5 100.01% Reverse','len',2},

				{58.310,240/142/2,'*5 100.01% Reverse','len',1},
				{58.310+240/142,240/142/2,'*5 100.01% Reverse','len',1},
				{58.310+240/142*2,240/142/2,'*5 100.01% Reverse','len',1},
				{58.310+240/142*3,240/142/2,'*5 100.01% Reverse','len',1},
				{58.310+240/142*4,240/142/2,'*5 100.01% Reverse','len',1},
				{58.310+240/142*5,240/142/2,'*5 100.01% Reverse','len',1},

				{58.310+240/142*0,240/142,'*10000 50% Drunk, *10000 50% Tipsy','len',2},
				{58.310+240/142*0+240/142,240/142/4,'*10000 No Drunk, *10000 No Tipsy','len',2},

				{59.155+240/142*0,240/142,'*10000 150% Tipsy,*10000 50% Stealth','len',1},
				{59.155+240/142*0+240/142,240/142/4,'*10000 No Tipsy,*10000 No Stealth','len',1},

				{58.310+240/142*1,240/142,'*10000 150% Bumpy,*10000 314% Dizzy','len',2},
				{58.310+240/142*1+240/142,240/142/4,'*10000 No Bumpy,*10000 No Dizzy','len',2},

				{59.155+240/142*1,240/142,'*10000 50% Flip,*10000 -50% Tornado,*10000 Boost,*10000 2x','len',1},
				{59.155+240/142*1+240/142,240/142/4,'*10000 No Flip,*10000 No Tornado,*10000 No Boost,*10000 3x','len',1},

				{58.310+240/142*2,240/142,'*10000 75% Stealth,*10000 -250% Mini,*10000 25% Flip,*10000 25% Reverse','len',2},
				{62.535,240/142/2,'*2.5 75% Reverse','len',2},
				{58.310+240/142*2+240/142,240/142/4,'*10000 No Stealth,*10000 No Mini,*10000 No Flip,*10000 No Reverse','len',2},

				{59.155+240/142*2,240/142,'*10000 25% Invert,*10000 25% Flip','len',1},
				{59.155+240/142*2+240/142,240/142/4,'*10000 No Invert,*10000 No Flip','len',1},

				{58.310+240/142*3,240/142,'*10000 Brake,*10000 5x,*10000 -25% Tornado','len',2},
				{58.310+240/142*3+240/142,240/142/4,'*10000 No Brake,*10000 3x,*10000 No Tornado','len',2},

				{59.155+240/142*3,240/142,'*10000 Mini,*10000 200% Wave,*10000 2x','len',1},
				{59.155+240/142*3+240/142,240/142/4,'*10000 No Mini,*10000 No Wave,*10000 3x','len',1},

				{58.310+240/142*4,240/142,'*10000 1x,*10000 c600,*10000 Boomerang','len',2},
				{58.310+240/142*4+240/142,240/142/4,'*10000 3x,*10000 c142,*10000 No Boomerang','len',2},

				{59.155+240/142*4,240/142,'*10000 2513% Dizzy,*10000 Hidden','len',1},
				{59.155+240/142*4+240/142,240/142/4,'*10000 No Dizzy,*10000 No Hidden','len',1},

				{58.310+240/142*5,240/142,'*10000 300% Beat,*10000 25% Flip,*10000 -25% Invert','len',2},
				{58.310+240/142*5+240/142,240/142/4,'*10000 No Beat,*10000 No Flip,*10000 No Invert','len',2},

				{73.099,240/142,'*10000 200% Mini','len',1},
				{73.099+240/142,240/142,'*10000 No Mini','len',1},
				{73.099+240/142*2,240/142,'*10000 200% Mini','len',1},
				{73.099+240/142*3,240/142,'*10000 No Mini','len',1},

				{79.859,240/142/8,'*5 Invert','len'},
				{79.859+240/142/8,240/142/8,'*5 No Invert','len'},
				{79.859+240/142/8*2,240/142/8,'*5 Flip,*5 -100% Invert','len'},
				{79.859+240/142/8*3,240/142/8,'*5 No Flip,*5 No Invert','len'},

				{84.507,96.761,'*2.4 Centered,*4 2.25x','end'},

				{84.507,240/142/32,'*10000 50% Stealth','len'},
				{84.507+240/142/32,240/142/4-240/142/32,'*2.8 No Stealth','len'},

				{85.352,96.761,'*10000 No Reverse,*10000 50% Split,*10000 50% Cross,*10000 -50% Alternate','end'},
				{86.197,96.761,'*10000 No Reverse,*10000 Split,*10000 No Cross,*10000 No Alternate','end'},
				{87.043,96.761,'*10000 100.01% Reverse,*10000 50% Split,*10000 -50% Cross,*10000 -50% Alternate','end'},
				{87.888,96.761,'*10000 100.01% Reverse,*10000 No Split,*10000 No Cross,*10000 No Alternate','end'},
				{88.733,96.761,'*10000 100.01% Reverse,*10000 -50% Split,*10000 -50% Cross,*10000 50% Alternate','end'},
				{90.212,96.761,'*10000 No Reverse,*10000 No Split,*10000 No Cross,*10000 Alternate','end'},
				{91.585,96.761,'*10000 No Reverse,*10000 No Split,*10000 No Cross,*10000 No Alternate','end'},
				{92.113,96.761,'*10000 100.01% Reverse,*10000 -50% Split,*10000 -50% Cross,*10000 -50% Alternate','end'},
				{93.592,96.761,'*10000 No Reverse,*10000 No Split,*10000 Cross,*10000 No Alternate','end'},
				{95.282,96.761,'*10000 No Reverse,*10000 No Split,*10000 No Cross,*10000 No Alternate','end'},

				{96.761,240/142/2,'*1.2 No Centered','len'},

				{97.606,240/142/2-240/142/8,'*16 1000% Bumpy','len'},
				{97.606+240/142/2-240/142/8,111.127,'*42.6 Bumpy','end'},
				{97.606,111.127,'*1.775 150% Distant,*2.3667 200% Wave,*1.1834 Drunk','end',1},
				{97.606,111.127,'*1.775 150% Distant,*2.3667 200% Wave,*1.1834 -100% Drunk','end',2},

				{104.789,240/142/8,'*19 400% Tipsy','len',1},
				{104.789,240/142/8,'*19 -400% Tipsy','len',2},
				{104.789+240/142/8,240/142/8,'*19 No Tipsy','len'},

				{111.127,240/142/2-240/142/8,'*16 1000% Bumpy','len'},
				{111.127+240/142/2-240/142/8,240/142/8,'*47.5 No Bumpy','len'},

				{111.127,240/142/2,'*1.775 No Distant,*2.3667 No Wave,*1.1834 No Drunk','len'},

				{111.972,123.803,'*1.6 Drunk','end'},
				{111.972,123.803,'*0.8 50% Tipsy','end'},
				{123.803,240/142/4,'*1.2 No Drunk,*0.6 No Tipsy','len'},

				{112.606,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142/16*4,240/142/8,'*19 Drunk','len'},
				{112.606+240/142,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142+240/142/16*4,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*2,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*2+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*2+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*2+240/142/16*4,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*3+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*3+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*3+240/142/16*4,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*4,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*4+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*4+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*4+240/142/16*4,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*5,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*5+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*5+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*5+240/142/16*4,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*6,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*6+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*6+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*6+240/142/16*4,240/142/8,'*19 Drunk','len'},

				{112.606+240/142*7,240/142/16,'*9.5 -100% Drunk','len'},
				{112.606+240/142*7+240/142/16,240/142/8,'*19 Drunk','len'},
				{112.606+240/142*7+240/142/16*3,240/142/16,'*19 -100% Drunk','len'},
				{112.606+240/142*7+240/142/16*4,240/142/8,'*9.5 No Drunk','len'},

				{125.071,240/142/8,'*100 1.25x','len'},
				{125.071+240/142/8,240/142/8,'*100 0.5x','len'},
				{125.071+240/142/8*2,200,'*24 100x','end'},

				}
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						v:x(SCREEN_CENTER_X-256)
						v:y(SCREEN_CENTER_Y-12)
						v:zoomx(1);
						v:zoomy(0);
					end
				end
			end
			
			if beat >= 60 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					if v then
						if i == 1 then
							v:decelerate(240/142/4);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:zoomx(1);
							v:zoomy(1);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 61.5 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 94 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:decelerate(240/142/4);
						v:rotationz(720);
						v:accelerate(240/142/8);
						v:rotationz(540);
						v:decelerate(240/142/8);
						v:rotationz(360);
						v:sleep(240/142/8);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 130 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					if v then
						if i == 1 then
							v:spring(240/142/8);
							v:rotationz(-20);
							v:x(SCREEN_CENTER_X-160);
							v:GetChild('Judgment'):x(0);
							v:GetChild('Combo'):x(0);
						else
							v:rotationy(-180);
							v:rotationz(20);
							v:x(SCREEN_CENTER_X+160);
							v:GetChild('Judgment'):x(0);
							v:GetChild('Combo'):x(0);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 158 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					if v then
						if i == 1 then
							v:decelerate(240/142/4);
							v:x(SCREEN_CENTER_X);
							v:rotationz(360);
							v:decelerate(240/142/4);
							v:rotationy(900);
							v:accelerate(240/142/8);
							v:rotationz(180);
							v:decelerate(240/142/8);
							v:rotationz(0);
							v:sleep(240/142/8);
							v:rotationy(0);
							v:zoomx(1.5);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X-math.random(64,224));
							v:y(SCREEN_CENTER_Y+math.random(-60,60));
						else
							v:decelerate(240/142/4);
							v:x(SCREEN_CENTER_X);
							v:rotationz(-360);
							v:decelerate(240/142/4);
							v:rotationy(720);
							v:accelerate(240/142/8);
							v:rotationz(-180);
							v:decelerate(240/142/8);
							v:rotationz(0);
							v:sleep(240/142/8);
							v:rotationy(0);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 182 and fgcurcommand == 6 then
				for i,v in pairs(prefix_plr) do
					if v then
						if i == 1 then
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:GetChild('Judgment'):decelerate(240/142/8);
							v:GetChild('Judgment'):x(-160);
							v:GetChild('Combo'):decelerate(240/142/8);
							v:GetChild('Combo'):x(-160);
						else
							v:GetChild('Judgment'):decelerate(240/142/8);
							v:GetChild('Judgment'):x(160);
							v:GetChild('Combo'):decelerate(240/142/8);
							v:GetChild('Combo'):x(160);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 290 and fgcurcommand == 7 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:accelerate(240/142/2);
						v:zoomx(10);
						v:zoomy(0);
						v:rotationx(90);
						v:GetChild('Judgment'):accelerate(240/142/2);
						v:GetChild('Judgment'):zoomx(10);
						v:GetChild('Judgment'):zoomy(0);
						v:GetChild('Judgment'):rotationx(90);
						v:GetChild('Combo'):accelerate(240/142/2);
						v:GetChild('Combo'):zoomx(10);
						v:GetChild('Combo'):zoomy(0);
						v:GetChild('Combo'):rotationx(90);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 61.5 and beat < 129 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
			end

			if beat >= 194 and beat < 290 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.411 - 0.000) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		BeginningMigiP1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:addx(102.4);
					end
				end
			end
		end"
		BeginningMigiP2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:decelerate(240/142/8);
						v:addx(102.4);
					end
				end
			end
		end"
		BeginningShitaP1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:addy(120);
					end
				end
			end
		end"
		BeginningShitaP2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:decelerate(240/142/8);
						v:addy(120);
					end
				end
			end
		end"
		BeginningUeP1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:addy(-120);
					end
				end
			end
		end"
		BeginningUeP2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:decelerate(240/142/8);
						v:addy(-120);
					end
				end
			end
		end"
		BeginningHidariP1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:addx(-102.4);
					end
				end
			end
		end"
		BeginningHidariP2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:decelerate(240/142/8);
						v:addx(-102.4);
					end
				end
			end
		end"
		PhaseInP1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:zoomx(0.5);
						v:zoomy(0.5);
					end
				end
			end
		end"
		PhaseInP2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:decelerate(240/142/8);
						v:zoomx(0.5);
						v:zoomy(0.5);
					end
				end
			end
		end"
		PhaseOutP1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:zoomx(1);
						v:zoomy(0);
					end
				end
			end
		end"
		PhaseOutP2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:decelerate(240/142/8);
						v:zoomx(1);
						v:zoomy(0);
					end
				end
			end
		end"
		RelocateP1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:x(SCREEN_CENTER_X-256);
						v:y(SCREEN_CENTER_Y-12);
					end
				end
			end
		end"
		HoldUpMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:linear(240/142/2);
					v:rotationx(60);
					v:addy(-30);
					v:linear(240/142/8);
					v:rotationx(0);
					v:addy(30);
				end
			end
		end"
		MainMigiMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:rotationy(60);
					v:addx(128);
					v:accelerate(240/142/8);
					v:rotationy(0);
					v:addx(-128);
				end
			end
		end"
		MainShitaMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:rotationx(-60);
					v:addy(128);
					v:accelerate(240/142/8);
					v:rotationx(0);
					v:addy(-128);
				end
			end
		end"
		MainUeMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:rotationx(60);
					v:addy(-128);
					v:accelerate(240/142/8);
					v:rotationx(0);
					v:addy(128);
				end
			end
		end"
		MainHidariMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:rotationy(-60);
					v:addx(-128);
					v:accelerate(240/142/8);
					v:rotationy(0);
					v:addx(128);
				end
			end
		end"
		MainAMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:skewx(1);
					v:accelerate(240/142/8);
					v:skewx(0);
				end
			end
		end"
		MainBMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:skewx(1);
					v:rotationz(45);
					v:accelerate(240/142/8);
					v:skewx(0);
					v:rotationz(0);
				end
			end
		end"
		MainXMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:skewx(-1);
					v:accelerate(240/142/8);
					v:skewx(0);
				end
			end
		end"
		MainYMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:skewx(-1);
					v:rotationz(-45);
					v:accelerate(240/142/8);
					v:skewx(0);
					v:rotationz(0);
				end
			end
		end"
		MainLMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:rotationz(-60);
					v:accelerate(240/142/8);
					v:rotationz(0);
				end
			end
		end"
		MainRMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/8);
					v:rotationz(60);
					v:accelerate(240/142/8);
					v:rotationz(0);
				end
			end
		end"
		Flippity1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:rotationy(180);
					else
						v:decelerate(240/142/8);
						v:rotationy(0);
					end
				end
			end
		end"
		Flippity2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:rotationy(0);
					else
						v:decelerate(240/142/8);
						v:rotationy(-180);
					end
				end
			end
		end"
		Phasity1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:zoomx(0.75);
						v:zoomy(0.75);
					else
						v:decelerate(240/142/8);
						v:zoomx(1.5);
						v:zoomy(0);
					end
				end
			end
		end"
		Phasity2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:zoomx(1.5);
						v:zoomy(0);
					else
						v:decelerate(240/142/8);
						v:zoomx(0.75);
						v:zoomy(0.75);
					end
				end
			end
		end"
		Phasity2CenterMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:decelerate(240/142/8);
						v:zoomx(1.5);
						v:zoomy(0);
					else
						v:decelerate(240/142/8);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
			end
		end"
		PhaseRelocateP11MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:x(SCREEN_CENTER_X-math.random(64,224));
						v:y(SCREEN_CENTER_Y+math.random(-60,60));
					end
				end
			end
		end"
		PhaseRelocateP21MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:x(SCREEN_CENTER_X+math.random(64,224));
						v:y(SCREEN_CENTER_Y+math.random(-60,60));
					end
				end
			end
		end"
		PhaseRelocateP12MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:x(SCREEN_CENTER_X+math.random(64,224));
						v:y(SCREEN_CENTER_Y+math.random(-60,60));
					end
				end
			end
		end"
		PhaseRelocateP22MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:x(SCREEN_CENTER_X-math.random(64,224));
						v:y(SCREEN_CENTER_Y+math.random(-60,60));
					end
				end
			end
		end"
		PhaseRelocateCenterMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
					end
				end
			end
		end"
		QuickMigiMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:rotationy(60);
					v:addx(128);
					v:accelerate(240/142/16);
					v:rotationy(0);
					v:addx(-128);
				end
			end
		end"
		QuickShitaMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:rotationx(-60);
					v:addy(128);
					v:accelerate(240/142/16);
					v:rotationx(0);
					v:addy(-128);
				end
			end
		end"
		QuickUeMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:rotationx(60);
					v:addy(-128);
					v:accelerate(240/142/16);
					v:rotationx(0);
					v:addy(128);
				end
			end
		end"
		QuickHidariMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:rotationy(-60);
					v:addx(-128);
					v:accelerate(240/142/16);
					v:rotationy(0);
					v:addx(128);
				end
			end
		end"
		QuickAMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:skewx(1);
					v:accelerate(240/142/16);
					v:skewx(0);
				end
			end
		end"
		QuickBMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:skewx(1);
					v:rotationz(45);
					v:accelerate(240/142/16);
					v:skewx(0);
					v:rotationz(0);
				end
			end
		end"
		QuickXMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:skewx(-1);
					v:accelerate(240/142/16);
					v:skewx(0);
				end
			end
		end"
		QuickYMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:skewx(-1);
					v:rotationz(-45);
					v:accelerate(240/142/16);
					v:skewx(0);
					v:rotationz(0);
				end
			end
		end"
		QuickLMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:rotationz(-60);
					v:accelerate(240/142/16);
					v:rotationz(0);
				end
			end
		end"
		QuickRMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/142/16);
					v:rotationz(60);
					v:accelerate(240/142/16);
					v:rotationz(0);
				end
			end
		end"
	/>
	
</children></ActorFrame>