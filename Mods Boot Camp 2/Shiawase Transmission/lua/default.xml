<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,115.56"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				prefix_inc = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{9.143,'ScreenHit1'},
					{9.143,'Vib'},
					{9.715,'ClapFlip'},
					{9.715+240/210/2*1,'ClapFlip'},
					{9.715+240/210/2*2,'ClapFlip'},
					{9.715+240/210/2*3,'ClapFlip'},
					{9.715+240/210/2*4,'ClapFlip'},
					{9.715+240/210/2*5,'ClapFlip'},
					{9.715+240/210/2*6,'ClapFlipEnd'},
					
					{21.286,'Squish'},
					
					{26.429,'Brrrr'},
					
					{29.715,'WahWah'},
					
					{30.000,'CheekyFour'},
					
					{42.572,'BassBass'},
					
					{49.286,'Spinny'},
					{51.572,'SpinnyBack'},
					
					{56.857,'BlackOut'},
					
					{80.286,'ScreenReset'},
					
					{84.572,'ScreenHit2'},
					{84.572,'Vib'},
					
					{85.143,'ClapFlip'},
					{85.143+240/210/2*1,'ClapFlip'},
					{85.143+240/210/2*2,'ClapFlip'},
					{85.143+240/210/2*3,'ClapFlip'},
					{85.143+240/210/2*4,'ClapFlip'},
					{85.143+240/210/2*5,'ClapFlip'},
					{85.143+240/210/2*6,'ClapFlipEnd'},
					
					{96.715,'Squish'},
					
					{101.857,'Brrrr'},
					
					{104.143,'Spinny'},
					{106.429,'SpinnyBack'},
				};
				
				
				prefix_mods = {
				
				{0,200,'1.5x,-999999% Cover,*10000 No Beat','end'},
				{8.286,0.050,'*10000 No Flip,*10000 No Invert','len'},
				
				{9.286,240/210*7,'*10000 150% Beat','len'},
				{18.715,240/210*2,'*10000 250% Beat','len'},
				{23.000,240/210*2,'*10000 350% Beat','len'},
				
				{9.429,240/210*8,'Blind','len'},
				
				{9.429,240/210*9,'*7 No Flip','len'},
				{9.715,240/210*7,'*10000 100.01% Reverse','len',2},
				{17.572,240/210/8,'*7 No Reverse','len'},
				
				{9.429,240/210/2,'*7 -100% Flip','len',1},
				{9.429+240/210,240/210/2,'*7 -100% Flip','len',1},
				{9.429+240/210*2,240/210/2,'*7 -100% Flip','len',1},
				{9.429+240/210*3,240/210/2,'*7 -100% Flip','len',1},
				{9.429+240/210*4,240/210/2,'*7 -100% Flip','len',1},
				{9.429+240/210*5,240/210/2,'*7 -100% Flip','len',1},
				{9.429+240/210*6,240/210/2,'*7 -100% Flip','len',1},
				
				{10.000,240/210/2,'*7 -100% Flip','len',2},
				{10.000+240/210,240/210/2,'*7 -100% Flip','len',2},
				{10.000+240/210*2,240/210/2,'*7 -100% Flip','len',2},
				{10.000+240/210*3,240/210/2,'*7 -100% Flip','len',2},
				{10.000+240/210*4,240/210/2,'*7 -100% Flip','len',2},
				{10.000+240/210*5,240/210/2,'*7 -100% Flip','len',2},
				{10.000+240/210*6,240/210/8*5,'*7 -100% Flip','len',2},
				
				{17.857,240/210/8*5,'*3.5 -50% Flip','len'},
				
				{18.000,240/210/8,'*28 150% Flip,*28 -200% Invert','len',2},
				{18.000+240/210/8,240/210/8,'*28 -50% Flip,*28 No Invert','len',2},
				
				{18.000+240/210/8,240/210/8,'*28 -50% Flip,*28 200% Invert','len',1},
				{18.000+240/210/8*2,240/210/8,'*28 -50% Flip,*28 No Invert','len',1},
				
				{18.000+240/210/8*2,240/210/8,'*28 150% Flip,*28 No Invert','len',2},
				{18.000+240/210/8*3,240/210/8,'*28 -50% Flip,*28 No Invert','len',2},
				
				{22.715,240/210/16,'*28 -200% Drunk','len'},
				{22.715+240/210/16,240/210/16,'*56 200% Drunk','len'},
				{22.715+240/210/16*2,240/210/16,'*56 -200% Drunk','len'},
				{22.715+240/210/16*3,240/210/16,'*56 200% Drunk','len'},
				{22.715+240/210/16*4,240/210/16,'*56 -200% Drunk','len'},
				{22.715+240/210/16*5,240/210/8,'*28 No Drunk','len'},
				
				{23.143,240/210/8*3,'*3.5 150% Distant','len'},
				{23.143+240/210/8*3,240/210/8*3,'*7 -150% Distant','len'},
				{23.143+240/210/8*6,240/210/4,'*5.25 No Distant','len'},
				
				{24.286,0.050,'*10000 500% Tornado,*10000 500% Bumpy','len'},
				{24.286+0.050,240/210/4,'*22 No Tornado,*22 No Bumpy','len'},
				
				{25.572,240/210/8,'*1 Brake','len'},
				{25.572+240/210/8,240/210/8,'*1 No Brake','len'},
				{25.572+240/210/8*2,240/210/8,'*2 Brake','len'},
				{25.572+240/210/8*3,240/210/8,'*2 No Brake','len'},
				{25.572+240/210/8*4,240/210/8,'*3 Brake','len'},
				{25.572+240/210/8*5,240/210/8,'*3 No Brake','len'},
				{25.572+240/210/8*6,240/210/8,'*4 Brake','len'},
				{25.572+240/210/8*7,240/210/8,'*4 No Brake','len'},
				{25.572+240/210/8*8,240/210/8,'*5 Brake','len'},
				{25.572+240/210/8*9,240/210/8,'*5 No Brake','len'},
				
				{17.857,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				{25.000,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				{26.286,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				
				{27.429,240/210/16,'*28 200% Distant','len'},
				{27.429+240/210/16,240/210/16*3,'*9.3334 No Distant','len'},
				
				{27.715,240/210/8,'*7 50% Reverse','len'},
				{27.715+240/210/8,240/210/8*3,'*2.3334 No Reverse','len'},
				
				{29.143,240/210/8,'*14 Alternate','len'},
				{29.143+240/210/8,240/210/8,'*14 No Alternate','len'},
				
				{29.857,240/210*6,'*10000 250% Beat','len'},
				
				{28.143,240/210/4*3,'*10000 -1000% Beat','len'},
				
				{30.000,240/210*2,'*0.4375 100% Mini,*0.4375 -150% Flip','len'},
				{30.000,240/210*2,'*0.4375 -100% Wave','len',1},
				{30.000,240/210*2,'*0.4375 100% Wave','len',2},
				{30.000+240/210*2,240/210*2,'*0.4375 No Mini,*0.4375 -50% Flip,*0.4375 No Wave','len'},
				{30.000+240/210*4,240/210*2,'*0.4375 100% Mini,*0.4375 -150% Flip','len'},
				{30.000+240/210*4,240/210*2,'*0.4375 -100% Wave','len',2},
				{30.000+240/210*4,240/210*2,'*0.4375 100% Wave','len',1},
				{30.000+240/210*6,240/210*2,'*7 No Mini,*10.5 No Flip,*7 No Wave','len'},
				
				{38.000,240/210/8,'*11.2 20% Reverse,*5.6 -10% Split,*5.6 -10% Cross,*5.6 -10% Alternate','len'},
				{38.000+240/210/8,240/210/8,'*11.2 No Reverse,*5.6 -10% Split,*11.2 10% Cross,*11.2 10% Alternate','len'},
				{38.000+240/210/8*2,240/210/8,'*11.2 No Reverse,*11.2 10% Split,*5.6 10% Cross,*11.2 -10% Alternate','len'},
				{38.000+240/210/8*3,240/210/8,'*11.2 No Reverse,*5.6 10% Split,*11.2 -10% Cross,*11.2 10% Alternate','len'},
				{38.000+240/210/8*4,240/210/8,'*11.2 No Reverse,*5.6 No Split,*5.6 No Cross,*5.6 No Alternate','len'},
				{38.000+240/210/8*5,240/210/8,'*11.2 20% Reverse','len'},
				{38.000+240/210/8*6,240/210/8,'*1.4 No Reverse','len'},
				
				{38.857,240/210*7,'*3.5 Wave','len'},
				
				{39.000,240/210*5,'*10000 350% Beat','len'},
				
				{39.143,240/210/4,'*14 Flip,*14 -100% Invert','len'},
				{39.143+240/210/4,240/210/4,'*14 No Flip,*14 No Invert','len'},
				{39.143+240/210/4*2,240/210/4,'*14 Flip,*14 -100% Invert','len'},
				{39.143+240/210/4*3,240/210/4,'*14 No Flip,*14 No Invert','len'},
				
				{40.286,240/210/8,'*14 50% Split,*14 50% Cross,*14 -50% Alternate','len'},
				{40.286+240/210/8,240/210/4,'*14 No Split,*14 No Cross,*14 No Alternate','len'},
				{40.286+240/210/8*3,240/210/4,'*14 50% Split,*14 50% Cross,*14 -50% Alternate','len'},
				{40.286+240/210/8*5,240/210/4,'*14 No Split,*14 No Cross,*14 No Alternate','len'},
				{40.286+240/210/8*7,240/210/8,'*14 50% Split,*14 50% Cross,*14 -50% Alternate','len'},
				{40.286+240/210/8*8,240/210/4,'*14 No Split,*14 No Cross,*14 No Alternate','len'},
				
				{41.715,240/210/8,'*14 100% Invert','len'},
				{41.715+240/210/8,240/210/4,'*14 Flip,*28 -100% Invert','len'},
				{41.715+240/210/8*3,240/210/8,'*14 Flip,*14 No Invert','len'},
				{41.715+240/210/8*4,240/210/4,'*14 No Flip,*14 No Invert','len'},
				
				{43.143,0.050,'*10000 999% Bumpy','len'},
				{43.143+0.050,240/210/2-0.050,'*20 No Bumpy','len'},
				
				{43.715,240/210/4,'*14 Flip,*14 -100% Invert','len'},
				{43.715+240/210/4,240/210/4,'*14 No Flip,*14 No Invert','len'},
				{43.715+240/210/4*2,240/210/4,'*14 Flip,*14 -100% Invert','len'},
				{43.715+240/210/4*3,240/210/4,'*14 No Flip,*14 No Invert','len'},
				
				{44.715,240/210/4,'*14 50% Split,*14 -50% Cross,*14 50% Alternate','len'},
				{44.715+240/210/8*2,240/210/4,'*14 No Split,*14 No Cross,*14 No Alternate','len'},
				{44.715+240/210/8*4,240/210/8,'*14 50% Split,*14 -50% Cross,*14 50% Alternate','len'},
				{44.715+240/210/8*5,240/210/4,'*14 50% Reverse,*14 No Split,*14 No Cross,*14 No Alternate,*14 50% Flip','len'},
				
				{44.715+240/210/8*7,0.050,'*10000 999% Bumpy,*10000 -200% Tornado','len'},
				{0.050+44.715+240/210/8*7,240/210/4,'*40 No Bumpy,*9 No Tornado','len'},
				{44.715+240/210/8*7,240/210/4,'*14 No Reverse,*14 No Flip','len'},
				
				{46.000,240/210/8,'*14 Invert','len'},
				{46.000+240/210/8,240/210/8*3,'*14 Flip,*28 -100% Invert','len'},
				
				{46.000+240/210/8*4,240/210/8,'*14 No Flip,*28 Invert','len'},
				{46.000+240/210/8*5,240/210/8*3,'*14 No Invert','len'},
				
				{46.143,240/210/4,'*10000 1000% Beat','len'},
				{46.715,240/210/4,'*10000 -1000% Beat','len'},
				
				{47.429,240/210/16,'*56 400% Drunk','len'},
				{47.429+240/210/16,240/210/8,'*56 No Drunk','len'},
				
				{47.715,240/210/4,'*28 800% Tipsy','len'},
				{47.715+240/210/4,240/210/2,'*28 No Tipsy','len'},
				
				{48.286,240/210/8*7,'*1.5 150% Mini','len'},
				{48.286+240/210/8*7,240/210/8*9,'*1.3125 No Mini','len'},
				
				{50.572,240/210/8*7,'*1.5 150% Mini','len'},
				{50.572+240/210/8*7,240/210/8*9,'*1.3125 No Mini','len'},
				
				{52.857,240/210/8*7,'*1.5 150% Mini','len'},
				{52.857+240/210/8*7,240/210/4,'*10.5 75% Mini','len'},
				{52.857+240/210/8*9,240/210/4,'*10.5 No Mini','len'},
				
				{56.143,240/210/8*5,'0x','len'},
				
				{57.000,74.572,'*10000 450% Bumpy,*10000 300% Hallway,*10000 -75% Flip,*10000 No Invert,*10000 Mini,*10000 -100% Centered,*10000 7x,*10000 85% Stealth','end',1},
				{57.000,74.572,'*10000 100.001% Reverse,*10000 450% Bumpy,*10000 300% Hallway,*10000 -75% Flip,*10000 No Invert,*10000 Mini,*10000 -100% Centered,*10000 7x,*10000 85% Stealth','end',2},
				
				{74.572,240/210,'*0.875 No Reverse, *3.9375 No Bumpy,*2.625 No Hallway,*0.65625 No Flip,*0.875 No Mini,*0.875 No Centered,*5 1.5x,*0.74375 No Stealth','len'},
				
				{75.429,240/210*4,'*3.5 Dark,*3.5 Tipsy','len'},
				{75.429+240/210*4,240/210/4,'*3.5 No Dark,*3.5 No Tipsy','len'},
				
				
				
				{80.286,240/210*4,'Blind','len'},
				
				{83.686,1,'*10000 No Flip,*10000 No Invert','len'},
				
				{84.715,240/210*7,'*10000 150% Beat','len'},
				{94.143,240/210*2,'*10000 250% Beat','len'},
				{98.429,240/210*2,'*10000 350% Beat','len'},
				
				{84.857,240/210*8,'Blind','len'},
				
				{84.857,240/210*9,'*7 No Flip','len'},
				{85.143,240/210*7,'*10000 100.01% Reverse','len',2},
				{93.000,240/210/8,'*7 No Reverse','len'},
				
				{84.857,240/210/2,'*7 -100% Flip','len',1},
				{84.857+240/210,240/210/2,'*7 -100% Flip','len',1},
				{84.857+240/210*2,240/210/2,'*7 -100% Flip','len',1},
				{84.857+240/210*3,240/210/2,'*7 -100% Flip','len',1},
				{84.857+240/210*4,240/210/2,'*7 -100% Flip','len',1},
				{84.857+240/210*5,240/210/2,'*7 -100% Flip','len',1},
				{84.857+240/210*6,240/210/2,'*7 -100% Flip','len',1},
				
				{85.429,240/210/2,'*7 -100% Flip','len',2},
				{85.429+240/210,240/210/2,'*7 -100% Flip','len',2},
				{85.429+240/210*2,240/210/2,'*7 -100% Flip','len',2},
				{85.429+240/210*3,240/210/2,'*7 -100% Flip','len',2},
				{85.429+240/210*4,240/210/2,'*7 -100% Flip','len',2},
				{85.429+240/210*5,240/210/2,'*7 -100% Flip','len',2},
				{85.429+240/210*6,240/210/8*5,'*7 -100% Flip','len',2},
				
				{93.286,240/210/8*5,'*3.5 -50% Flip','len'},
				
				{93.429,240/210/8,'*28 150% Flip,*28 -200% Invert','len',2},
				{93.429+240/210/8,240/210/8,'*28 -50% Flip,*28 No Invert','len',2},
				
				{93.429+240/210/8,240/210/8,'*28 -50% Flip,*28 200% Invert','len',1},
				{93.429+240/210/8*2,240/210/8,'*28 -50% Flip,*28 No Invert','len',1},
				
				{93.429+240/210/8*2,240/210/8,'*28 150% Flip,*28 No Invert','len',2},
				{93.429+240/210/8*3,240/210/8,'*28 -50% Flip,*28 No Invert','len',2},
				
				{98.143,240/210/16,'*28 -200% Drunk','len'},
				{98.143+240/210/16,240/210/16,'*56 200% Drunk','len'},
				{98.143+240/210/16*2,240/210/16,'*56 -200% Drunk','len'},
				{98.143+240/210/16*3,240/210/16,'*56 200% Drunk','len'},
				{98.143+240/210/16*4,240/210/16,'*56 -200% Drunk','len'},
				{98.143+240/210/16*5,240/210/8,'*28 No Drunk','len'},
				
				{98.572,240/210/8*3,'*3.5 150% Distant','len'},
				{98.572+240/210/8*3,240/210/8*3,'*7 -150% Distant','len'},
				{98.572+240/210/8*6,240/210/4,'*5.25 No Distant','len'},
				
				{99.715,0.050,'*10000 500% Tornado,*10000 500% Bumpy','len'},
				{99.715+0.050,240/210/4,'*22 No Tornado,*22 No Bumpy','len'},
				
				{101.000,240/210/8,'*1 Brake','len'},
				{101.000+240/210/8,240/210/8,'*1 No Brake','len'},
				{101.000+240/210/8*2,240/210/8,'*2 Brake','len'},
				{101.000+240/210/8*3,240/210/8,'*2 No Brake','len'},
				{101.000+240/210/8*4,240/210/8,'*3 Brake','len'},
				{101.000+240/210/8*5,240/210/8,'*3 No Brake','len'},
				{101.000+240/210/8*6,240/210/8,'*4 Brake','len'},
				{101.000+240/210/8*7,240/210/8,'*4 No Brake','len'},
				{101.000+240/210/8*8,240/210/8,'*5 Brake','len'},
				{101.000+240/210/8*9,240/210/8,'*5 No Brake','len'},
				
				{93.286,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				{100.429,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				{101.715,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				
				{102.857,240/210/16,'*28 200% Distant','len'},
				{102.857+240/210/16,240/210/16*3,'*9.3334 No Distant','len'},
				
				{103.143,240/210/8*7,'*1.5 150% Mini','len'},
				{103.143+240/210/8*7,240/210/8*9,'*1.3125 No Mini','len'},
				
				{105.429,240/210/8*7,'*1.5 150% Mini','len'},
				{105.429+240/210/8*7,240/210/8*9,'*1.3125 No Mini','len'},
				
				{107.715,240/210/8*7,'*1.5 150% Mini','len'},
				{107.715+240/210/8*7,240/210/4,'*10.5 75% Mini','len'},
				{107.715+240/210/8*9,240/210/4,'*10.5 No Mini','len'},
				
				{112.143,200,'*5 10000% Bumpy','end'},
				
				}
				
				for i = 0.286,8.285,0.08 do
					table.insert(prefix_mods,{i+0.020*0,0.020,'*10000 No Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+0.020*1,0.020,'*10000 Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+0.020*2,0.020,'*10000 Invert,*10000 No Flip','len'});
					table.insert(prefix_mods,{i+0.020*3,0.020,'*10000 Flip,*10000 -100% Invert','len'});
				end
				
				for i = 48.286,56.856,0.08 do
					table.insert(prefix_mods,{i+0.020*0,0.020,'*10000 No Flip,*10000 No Invert,*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+0.020*1,0.020,'*10000 Flip,*10000 No Invert,*10000 95% Stealth','len'});
					table.insert(prefix_mods,{i+0.020*2,0.020,'*10000 Invert,*10000 No Flip,*10000 99% Stealth','len'});
					table.insert(prefix_mods,{i+0.020*3,0.020,'*10000 Flip,*10000 -100% Invert,*10000 95% Stealth','len'});
				end
				
				for i = 80.286,83.714,0.08 do
					table.insert(prefix_mods,{i+0.020*0,0.020,'*10000 No Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+0.020*1,0.020,'*10000 Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+0.020*2,0.020,'*10000 Invert,*10000 No Flip','len'});
					table.insert(prefix_mods,{i+0.020*3,0.020,'*10000 Flip,*10000 -100% Invert','len'});
				end
				
				for i = 103.143,115.715,0.08 do
					table.insert(prefix_mods,{i+0.050*0,0.020,'*10000 No Flip,*10000 No Invert,*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+0.050*1,0.020,'*10000 Flip,*10000 No Invert,*10000 95% Stealth','len'});
					table.insert(prefix_mods,{i+0.050*2,0.020,'*10000 Invert,*10000 No Flip,*10000 99% Stealth','len'});
					table.insert(prefix_mods,{i+0.050*3,0.020,'*10000 Flip,*10000 -100% Invert,*10000 95% Stealth','len'});
				end
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			prefix_inc = prefix_inc + 1;
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						v:x(SCREEN_CENTER_X);
					end
				end
				
				SCREENMAN:GetTopScreen():SetDrawByZPosition(true);
				SCREENMAN:GetTopScreen():GetChild('SongBackground'):z(-999);
				SCREENMAN:GetTopScreen():GetChild('SongForeground'):z(1);
			end
			
			if beat >= 28 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					if v then
						if i == 2 then
							v:z(2);
						end
						
					end
				end
				SCREENMAN:GetTopScreen():spring(240/210/16*3);
				SCREENMAN:GetTopScreen():zoom(0.667);
				SCREENMAN:GetTopScreen():x(SCREEN_CENTER_X*0.333);
				SCREENMAN:GetTopScreen():y(SCREEN_CENTER_Y*0.333);
				SCREENMAN:GetTopScreen():sleep(240/210/16*5);
				SCREENMAN:GetTopScreen():accelerate(240/210/4);
				SCREENMAN:GetTopScreen():zoom(2);
				--SCREENMAN:GetTopScreen():zoomy(2*((SCREEN_HEIGHT/SCREEN_WIDTH)/1.333333));
				SCREENMAN:GetTopScreen():x(SCREEN_CENTER_X+(happy_const1*2*math.cos((30+happy_const2)/180*math.pi)));
				SCREENMAN:GetTopScreen():y(SCREEN_CENTER_Y+(happy_const1*2*math.sin((30+happy_const2)/180*math.pi)));
				SCREENMAN:GetTopScreen():rotationz(30);
				SCREENMAN:GetTopScreen():sleep(0);
				SCREENMAN:GetTopScreen():x(0);
				SCREENMAN:GetTopScreen():y(0);
				SCREENMAN:GetTopScreen():zoom(1);
				SCREENMAN:GetTopScreen():rotationz(0);
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 33 and fgcurcommand == 2 or beat >= 297 and fgcurcommand == 13 then
				for i,v in pairs(prefix_plr) do
					if v then
						if i == 2 then v:rotationx(-90); v:zoomy(0); v:y(SCREEN_CENTER_Y); v:zoomx(1); v:rotationz(0); end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 61.5 and fgcurcommand == 3 or beat >= 325.5 and fgcurcommand == 14 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/210/8);
						v:x(SCREEN_CENTER_X+32*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 64 and fgcurcommand == 4 or beat >= 328 and fgcurcommand == 15 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:zoomx(1);
						v:zoomy(1);
						v:y(SCREEN_CENTER_Y);
						v:decelerate(240/210/4);
						v:x(SCREEN_CENTER_X+320*multi);
						v:rotationz(30*multi);
						v:spring(240/210/8);
						v:x(SCREEN_CENTER_X+160*multi);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 102 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:spring(240/210/8);
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(multi*160);
						v:GetChild('Combo'):x(multi*160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 103 and fgcurcommand == 6 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/210/8);
						v:x(SCREEN_CENTER_X+64*multi);
						v:accelerate(240/210/8);
						v:x(SCREEN_CENTER_X+32*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 128 and fgcurcommand == 7 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:spring(240/210/8);
						v:x(SCREEN_CENTER_X);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 129 and fgcurcommand == 8 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/210/8);
						v:x(SCREEN_CENTER_X+160/3*2*multi);
						v:rotationz(10*multi);
						v:accelerate(240/210/8);
						v:x(SCREEN_CENTER_X+160/3*multi);
						v:rotationz(0);
						v:decelerate(240/210/8);
						v:x(SCREEN_CENTER_X+160/3*3*multi);
						v:rotationz(20*multi);
						v:accelerate(240/210/8);
						v:x(SCREEN_CENTER_X+160/3*2*multi);
						v:rotationz(0);
						v:decelerate(240/210/8);
						v:x(SCREEN_CENTER_X+160/3*4*multi);
						v:rotationz(30*multi);
						v:accelerate(240/210/8);
						v:x(SCREEN_CENTER_X+160/3*3*multi);
						v:rotationz(0);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 135 and fgcurcommand == 9 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/210/8);
						v:rotationy(360);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 199 and fgcurcommand == 10 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(multi*160);
						v:GetChild('Combo'):x(multi*160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 288 and fgcurcommand == 11 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 292 and fgcurcommand == 12 then
				for i,v in pairs(prefix_plr) do
					if v then
						if i == 2 then
							v:z(2);
						end
						
					end
				end
				SCREENMAN:GetTopScreen():spring(240/210/16*3);
				SCREENMAN:GetTopScreen():zoom(0.667);
				SCREENMAN:GetTopScreen():x(SCREEN_CENTER_X*0.333);
				SCREENMAN:GetTopScreen():y(SCREEN_CENTER_Y*0.333);
				SCREENMAN:GetTopScreen():sleep(240/210/16*5);
				SCREENMAN:GetTopScreen():accelerate(240/210/4);
				SCREENMAN:GetTopScreen():zoom(2);
				SCREENMAN:GetTopScreen():x(SCREEN_CENTER_X+(happy_const1*2*math.cos((-30+happy_const2)/180*math.pi)));
				SCREENMAN:GetTopScreen():y(SCREEN_CENTER_Y+(happy_const1*2*math.sin((-30+happy_const2)/180*math.pi)));
				SCREENMAN:GetTopScreen():rotationz(-30);
				SCREENMAN:GetTopScreen():sleep(0);
				SCREENMAN:GetTopScreen():x(0);
				SCREENMAN:GetTopScreen():y(0);
				SCREENMAN:GetTopScreen():zoom(1);
				SCREENMAN:GetTopScreen():rotationz(0);
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 396 and fgcurcommand == 16 then
				SCREENMAN:GetTopScreen():accelerate(240/210);
				SCREENMAN:GetTopScreen():x(60*(SCREEN_WIDTH/640));
				SCREENMAN:GetTopScreen():y(1000*(SCREEN_HEIGHT/480));
				SCREENMAN:GetTopScreen():rotationz(30);
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 31 and beat < 33 or beat >= 295 and beat < 297 then
				SCREENMAN:GetTopScreen():vibrate();
				SCREENMAN:GetTopScreen():effectmagnitude(auxvar:getaux(),auxvar:getaux(),0);
			end
			
			if beat >= 61 and beat < 61.5 or beat >= 86 and beat < 86.5 or beat >= 90.5 and beat < 91 or beat >= 325 and beat < 325.5 or beat >= 350 and beat < 350.5 or beat >= 354.5 and beat < 355 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..250*multi..'% Drunk');
				GAMESTATE:ApplyGameCommand('mod,*10000 '..250*multi..'% Tipsy');
			end
			
			if beat >= 91.5 and beat < 94.5 or beat >= 355.5 and beat < 358.5 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:vibrate();
						v:effectmagnitude(auxvar:getaux(),0,0);
					end
				end
			end
			
			if beat >= 103 and beat < 104 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-auxvar:getaux()..'% Flip');
			end
			
			if beat >= 104 and beat < 128 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					local multi2 = -1; if math.mod(prefix_inc,2) == 0 then multi2 = 1; end
					if v then
						v:x(SCREEN_CENTER_X+32*multi+auxvar:getaux()*multi2);
					end
				end
			end
			
			if beat >= 148 and beat < 151 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+multi*160-multi*auxvar:getaux());
						v:y(SCREEN_CENTER_Y-math.abs(math.sin(auxvar:getaux()/320*math.pi))*75);
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.274 - 0.004) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<0MATH Type="Quad"
		InitCommand="%function()
			happy_const1 = math.sqrt(math.pow(SCREEN_WIDTH/2,2)+math.pow(SCREEN_HEIGHT/2,2))
			happy_const2 = 180+math.deg(math.atan(SCREEN_HEIGHT/SCREEN_WIDTH))
		end"
	/>
	
	<Layer Type="ActorFrame"
		OnCommand=""
		ScreenHit1MessageCommand="%function(self)
			self:playcommand('SH1')
			self:x(SCREEN_CENTER_X+(happy_const1*2*math.cos((30+happy_const2)/180*math.pi)))
			self:y(SCREEN_CENTER_Y+(happy_const1*1.5*math.sin((30+happy_const2)/180*math.pi)))
			self:rotationz(30);
			self:accelerate(240/210/2);
			self:x(SCREEN_CENTER_X+(happy_const1*2*math.cos((60+happy_const2)/180*math.pi)))
			self:addy(happy_const1*3)
			self:rotationz(60);
			self:sleep(0);
		end"
		ScreenResetMessageCommand="%function(self)
		end"
		ScreenHit2MessageCommand="%function(self)
			self:playcommand('SH2')
			self:x(SCREEN_CENTER_X+(happy_const1*1.5*math.cos((-30+happy_const2)/180*math.pi)))
			self:y(SCREEN_CENTER_Y+(happy_const1*2*math.sin((-30+happy_const2)/180*math.pi)))
			self:rotationz(-30);
			self:accelerate(240/210/2);
			self:x(SCREEN_CENTER_X+(happy_const1*1.5*math.cos((-60+happy_const2)/180*math.pi)))
			self:addy(happy_const1*3)
			self:rotationz(-60);
			self:sleep(0);
		end"
	><children>
	<Layer
		File="foreground"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoomto,SCREEN_WIDTH,SCREEN_HEIGHT;diffusealpha,0"
		SH1Command="%function(self)
			self:diffusealpha(1);
			self:zoomto(SCREEN_WIDTH*2,SCREEN_HEIGHT*2);
			self:accelerate(240/210/2);
			self:sleep(0);
			self:diffusealpha(0);
		end"
		SRCommand="%function(self)
		end"
		SH2Command="%function(self)
			self:diffusealpha(1);
			self:zoomto(SCREEN_WIDTH*2,SCREEN_HEIGHT*2);
			self:accelerate(240/210/2);
			self:sleep(0);
			self:diffusealpha(0);
		end"
	/>
	</children></Layer>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		VibMessageCommand="finishtweening;aux,150;linear,240/210/8;aux,0"
		BrrrrMessageCommand="finishtweening;aux,0;linear,240/210/8*5;aux,50;sleep,0;aux,0"
		WahWahMessageCommand="finishtweening;aux,0;decelerate,240/210/16;aux,100;sleep,240/210/16;accelerate,240/210/16;aux,50"
		CheekyFourMessageCommand="finishtweening;aux,0;linear,240/210/2;aux,9.25;linear,240/210/2;aux,14;linear,240/210/2;aux,15.9;linear,240/210/2;aux,16;linear,240/210/2;aux,15.9;linear,240/210/2;aux,14;linear,240/210/2;aux,9.25;linear,240/210/2;aux,0;linear,240/210/2;aux,9.25;linear,240/210/2;aux,14;linear,240/210/2;aux,15.9;linear,240/210/2;aux,16"
		BassBassMessageCommand="finishtweening;aux,0;linear,240/210/4;aux,320;linear,240/210/4;aux,0"
		ClapFlipMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:accelerate(240/210/16);
						v:rotationx(45);
						v:zoomy(0.5);
						v:decelerate(240/210/16);
						v:rotationx(90);
						v:zoomy(0);
						v:sleep(240/210/8*3);
						v:accelerate(240/210/16);
						v:rotationx(45);
						v:zoomy(0.5);
						v:decelerate(240/210/16);
						v:rotationx(0);
						v:zoomy(1);
						v:sleep(240/210/8*3);
					else
						v:accelerate(240/210/16);
						v:rotationx(-45);
						v:zoomy(0.5);
						v:decelerate(240/210/16);
						v:rotationx(0);
						v:zoomy(1);
						v:sleep(240/210/8*3);
						v:accelerate(240/210/16);
						v:rotationx(-45);
						v:zoomy(0.5);
						v:decelerate(240/210/16);
						v:rotationx(-90);
						v:zoomy(0);
						v:sleep(240/210/8*3);
					end
				end
			end
		end"
		ClapFlipEndMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:accelerate(240/210/16);
						v:rotationx(45);
						v:zoomy(0.5);
						v:decelerate(240/210/16);
						v:rotationx(90);
						v:zoomy(0);
						v:sleep(240/210/8*3);
						v:accelerate(240/210/16);
						v:rotationx(45);
						v:zoomy(0.5);
						v:decelerate(240/210/16);
						v:rotationx(0);
						v:zoomy(1);
						v:sleep(240/210/8*3);
					else
						v:accelerate(240/210/16);
						v:rotationx(-45);
						v:zoomy(0.5);
						v:decelerate(240/210/16);
						v:rotationx(0);
						v:zoomy(1);
						v:sleep(240/210/8*3);
					end
				end
			end
		end"
		SpinnyMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:decelerate(240/210);
					v:rotationz(360);
				end
			end
		end"
		SpinnyBackMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:decelerate(240/210);
					v:rotationz(0);
				end
			end
		end"
		ScreenHit1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 2 then
						v:zoomx(2);
						v:zoomy(2);
						v:rotationz(30);
						v:accelerate(240/210/2);
						v:x(SCREEN_CENTER_X);
						v:addy(happy_const1*3)
						v:rotationz(60);
					end
				end
			end
		end"
		ScreenHit2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 2 then
						v:zoomx(2);
						v:zoomy(2);
						v:rotationz(-30);
						v:accelerate(240/210/2);
						v:x(SCREEN_CENTER_X);
						v:addy(happy_const1*3)
						v:rotationz(-60);
					end
				end
			end
		end"
		SquishMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:z(0);
					v:zoomx(1);
					v:zoomy(1);
					v:x(SCREEN_CENTER_X+160*multi);
					v:y(SCREEN_CENTER_Y);
					v:rotationz(0);
					v:linear(240/210/8);
					v:zoomy(0.76);
					v:sleep(240/210/8);
					v:linear(240/210/8);
					v:zoomy(0.52);
					v:sleep(240/210/8);
					v:linear(240/210/8);
					v:zoomy(0.28);
					v:sleep(240/210/8*3);
					v:linear(240/210/8);
					v:zoomy(0.04);
					v:sleep(240/210/8);
					v:linear(240/210/8*3);
					v:zoomy(1);
				end
			end
		end"
	/>
	
	<Sprite
		Texture="coin"
		Frame0000="0"
		Delay0000="0.015"
		Frame0001="1"
		Delay0001="0.015"
		Frame0002="2"
		Delay0002="0.015"
		Frame0003="3"
		Delay0003="0.015"
		Frame0004="4"
		Delay0004="0.015"
		Frame0005="5"
		Delay0005="0.015"
		Frame0006="6"
		Delay0006="0.015"
		Frame0007="7"
		Delay0007="0.015"
		Frame0008="8"
		Delay0008="0.015"
		Frame0009="9"
		Delay0009="0.015"
		Frame0010="10"
		Delay0010="0.015"
		Frame0011="11"
		Delay0011="0.015"
		Frame0012="12"
		Delay0012="0.015"
		Frame0013="13"
		Delay0013="0.015"
		Frame0014="14"
		Delay0014="0.015"
		Frame0015="15"
		Delay0015="0.015"
		InitCommand="x,SCREEN_CENTER_X-160;y,SCREEN_CENTER_Y+300;zoom,10;diffusealpha,0;rotationz,90"
		OnCommand="sleep,46.857;diffusealpha,1;decelerate,240/210/8;addy,-350;accelerate,240/210/8;addy,350;sleep,0.01;diffusealpha,0"
	/>
	
	<Sprite
		Texture="coin"
		Frame0000="0"
		Delay0000="0.015"
		Frame0001="1"
		Delay0001="0.015"
		Frame0002="2"
		Delay0002="0.015"
		Frame0003="3"
		Delay0003="0.015"
		Frame0004="4"
		Delay0004="0.015"
		Frame0005="5"
		Delay0005="0.015"
		Frame0006="6"
		Delay0006="0.015"
		Frame0007="7"
		Delay0007="0.015"
		Frame0008="8"
		Delay0008="0.015"
		Frame0009="9"
		Delay0009="0.015"
		Frame0010="10"
		Delay0010="0.015"
		Frame0011="11"
		Delay0011="0.015"
		Frame0012="12"
		Delay0012="0.015"
		Frame0013="13"
		Delay0013="0.015"
		Frame0014="14"
		Delay0014="0.015"
		Frame0015="15"
		Delay0015="0.015"
		InitCommand="x,SCREEN_CENTER_X+160;y,SCREEN_CENTER_Y+300;zoom,10;diffusealpha,0;rotationz,90"
		OnCommand="sleep,46.857;diffusealpha,1;decelerate,240/210/8;addy,-350;accelerate,240/210/8;addy,350;sleep,0.01;diffusealpha,0"
	/>
	
	<Layer
		File="blackout"
		OnCommand="%function(self)
		self:stretchto(0,0,SCREEN_WIDTH,SCREEN_HEIGHT);
		self:diffusealpha(0); end"
		BlackOutMessageCommand="%function(self)
		self:diffusealpha(1);
		self:sleep(240/210/4);
		self:diffusealpha(0); end"
	/>
	
	<Layer
		Type="Quad"
		OnCommand="zoomto,SCREEN_WIDTH,SCREEN_HEIGHT;x,SCREEN_CENTER_X-320;y,SCREEN_CENTER_Y;horizalign,right;diffuse,1,1,1,0;"
		BlackOutMessageCommand="%function(self)
		self:sleep(240/210/4);
		self:diffusealpha(1);
		self:sleep(0.05);
		self:linear(240/210/2-0.05);
		self:diffusealpha(0); end"
	/>
	
	<Layer
		Type="Quad"
		OnCommand="zoomto,SCREEN_WIDTH,SCREEN_HEIGHT;x,SCREEN_CENTER_X+320;y,SCREEN_CENTER_Y;horizalign,left;diffuse,1,1,1,0;"
		BlackOutMessageCommand="%function(self)
		self:sleep(240/210/4);
		self:diffusealpha(1);
		self:sleep(0.05);
		self:linear(240/210/2-0.05);
		self:diffusealpha(0); end"
	/>
	
	<Layer
		File="smile"
		OnCommand="%function(self)
		self:x(SCREEN_CENTER_X)
		self:y(SCREEN_CENTER_Y)
		self:diffusealpha(0); end"
		BlackOutMessageCommand="%function(self)
		self:sleep(240/210/4);
		self:diffusealpha(1);
		self:sleep(0.05);
		self:linear(240/210/2-0.05);
		self:diffusealpha(0); end"
	/>
	
</children></ActorFrame>