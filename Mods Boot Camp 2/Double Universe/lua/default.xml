<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,116"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{40.340,'Flash'},
					{59.345,'StarCircleEnd'},
					{61.678,'Faster'},
					{61.678,'Flash'},
					
					{72.012,'StarCircleTwoStart'},
					{81.678,'StarCircleTwoEnd'},
					
					{83.012,'Flash'},
					{92.345,'Starshipping'},
					{93.678,'Flash'},
					
					{115.012,'Flash'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2x,-999999% Cover,*10000 No Beat','end'},
				
				{0,2.345,'*10000 Stealth','end'},
				{0,2.678,'*10000 0.1x','end'},
				
				{0.345,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{0.345+0.050,240/180/16,'*24 No Mini,*2.4 No Flip','len'},
				{0.512,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{0.512+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{0.678,240/180/16,'*2.4 10% Reverse,*4.8 -20% Alternate','len'},
				{0.678+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Alternate','len'},
				{0.678+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Alternate','len'},
				{0.678+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Alternate','len'},
				
				{1.012,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{1.012+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{1.178,240/180/16,'*2.4 -10% Reverse,*4.8 20% Alternate','len'},
				{1.178+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Alternate','len'},
				{1.178+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Alternate','len'},
				{1.178+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Alternate','len'},
				
				{1.512,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{1.512+0.050,240/180/16,'*24 No Mini,*2.4 No Flip','len'},
				{1.678,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{1.678+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{1.845,240/180/16*3,'*2.4 10% Reverse,*4.8 -20% Alternate','len'},
				
				{1.928,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{1.928+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{2.095,240/180/16*3,'*4.8 -10% Reverse,*9.6 20% Alternate','len'},
				
				{2.178,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{2.178+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{2.345,240/180/8,'*2.4 No Reverse,*4.8 No Alternate','len'},
				
				{2.345,240/180/4,'*6 50% Stealth','len'},
				
				{2.678,240/180/4,'*6 No Stealth,*6 2x','len'},
				
				{3.012,13.678,'*6 Drunk','end'},
				
				{7.178,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{7.178+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{7.512,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{7.512+0.050,240/180/16,'*24 No Mini,*2.4 No Flip','len'},
				{7.678,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{7.678+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{8.012,240/180/16,'*2.4 -10% Reverse,*4.8 20% Alternate','len'},
				{8.012+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Alternate','len'},
				{8.012+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Alternate','len'},
				{8.012+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Alternate','len'},
				
				{8.345,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{8.345+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{9.178,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{9.178+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{9.512,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{9.512+0.050,240/180/16,'*24 No Mini,*2.4 No Flip','len'},
				{9.678,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{9.678+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{10.178,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{10.178+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{10.512,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{10.512+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{10.845,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{10.845+0.050,240/180/16,'*24 No Mini,*2.4 No Flip','len'},
				{11.012,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{11.012+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{11.345,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{11.345+0.050,240/180/16,'*24 No Mini,*2.4 No Flip','len'},
				{11.512,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{11.512+0.050,240/180/16,'*24 No Mini,*2.4 No Flip','len'},
				{11.678,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{11.678+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{12.012,240/180/16,'*2.4 10% Reverse,*4.8 -20% Alternate','len'},
				{12.012+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Alternate','len'},
				{12.012+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Alternate','len'},
				{12.012+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Alternate','len'},
				
				{240/180*8+1.678,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{240/180*8+1.678+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{240/180*8+1.845,240/180/16*3,'*2.4 -10% Reverse,*4.8 20% Alternate','len'},
				
				{240/180*8+1.928,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{240/180*8+1.928+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{240/180*8+2.095,240/180/16*3,'*4.8 10% Reverse,*9.6 -20% Alternate','len'},
				
				{240/180*8+2.178,0.050,'*10000 -200% Mini,*10000 20% Flip','len'},
				{240/180*8+2.178+0.050,240/180/8,'*24 No Mini,*2.4 No Flip','len'},
				
				{240/180*8+2.345,240/180/8,'*2.4 No Reverse,*4.8 No Alternate','len'},
				
				{13.512,35.178,'*10000 400% Beat','end'},
				
				{13.345,240/180/16,'*2.4 10% Reverse,*4.8 -20% Alternate','len'},
				{13.345+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Alternate','len'},
				{13.345+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Alternate','len'},
				{13.345+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Alternate','len'},
				
				{14.345,240/180/8,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{14.345+240/180/16*2,240/180/8,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{14.345+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{14.345+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{14.345+240/180/16*6,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{14.345+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{15.678,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{15.678+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{15.678+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{15.678+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{16.012,240/180/8,'*12 200% Hallway','len'},
				{16.012+240/180/8,240/180/8,'*12 No Hallway','len'},
				
				{17.012,240/180/8,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{17.012+240/180/16*2,240/180/8,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{17.012+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{17.012+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{17.012+240/180/16*6,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{17.012+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{18.345,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{18.345+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{18.345+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{18.345+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{18.345+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{18.345+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{18.345+240/180/16*6,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{18.345+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{240/180*4+14.345,240/180/8,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{240/180*4+14.345+240/180/16*2,240/180/8,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+14.345+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+14.345+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+14.345+240/180/16*6,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+14.345+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{240/180*4+15.678,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{240/180*4+15.678+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+15.678+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+15.678+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{240/180*4+16.012,240/180/8,'*12 200% Hallway','len'},
				{240/180*4+16.012+240/180/8,240/180/8,'*12 No Hallway','len'},
				
				{240/180*4+17.012,240/180/8,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{240/180*4+17.012+240/180/16*2,240/180/8,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+17.012+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+17.012+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+17.012+240/180/16*6,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+17.012+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{240/180*4+18.345,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{240/180*4+18.345+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+18.345+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+18.345+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+18.345+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+18.345+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{240/180*4+18.345+240/180/16*6,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{240/180*4+18.345+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{25.012,240/180/16,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{25.012+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{25.012+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{25.012+240/180/16*3,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{25.012+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{25.012+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{25.012+240/180/16*6,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{25.012+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{26.345,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{26.345+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{26.345+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{26.345+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{26.345+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{26.345+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{26.345+240/180/16*6,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{26.345+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{27.678,240/180/16,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{27.678+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{27.678+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{27.678+240/180/16*3,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{27.678+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{27.678+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{27.678+240/180/16*6,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{27.678+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{29.012,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{29.012+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{29.012+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{29.012+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{29.012+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{29.012+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{29.012+240/180/16*6,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{29.012+240/180/16*7,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{30.012,240/180/16,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{30.012+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{30.012+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{30.012+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{30.678,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{30.678+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{30.678+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{30.678+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{31.345,240/180/16,'*2.4 -10% Reverse,*4.8 20% Split','len'},
				{31.345+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{31.345+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{31.345+240/180/16*3,240/180/8,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{32.012,240/180/16,'*2.4 10% Reverse,*4.8 -20% Split','len'},
				{32.012+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*6,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*7,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*8,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*9,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*10,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*11,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*12,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*13,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*14,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*15,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*17,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*18,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*19,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*20,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*21,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*22,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*23,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*24,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*25,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*26,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*27,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*28,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*29,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*30,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*31,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*32,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*33,240/180/16,'*4.8 -10% Reverse,*9.6 20% Split','len'},
				{32.012+240/180/16*34,240/180/16,'*4.8 10% Reverse,*9.6 -20% Split','len'},
				{32.012+240/180/16*35,240/180/16,'*2.4 No Reverse,*4.8 No Split','len'},
				
				{35.012,45.678,'*2.5 -1000% Invert,*0.5 -200% Flip,*2.25 75% Stealth,*0.25 100% Mini,*0.125 50% Tornado,*0.5 -200% Bumpy,*10000 -200% Reverse,*10000 80% Centered,*5 0.6x','end'},
				
				{45.678,61.345,'*0.9375 -500% Invert,*0.28125 -50% Flip,*2.25 75% Stealth,*0.1875 No Mini,*0.125 50% Tornado,*0.5 -200% Bumpy,*10000 -200% Reverse,*10000 80% Centered,*0.1 0.4x','end'},
				
				{51.012,61.345,'*0.140625 No Stealth','end'},
				
				{56.178,240/180/4,'*10000 400% Beat','len'},
				
				{56.845,240/180/4,'*10000 -400% Beat','len'},
				
				{57.512,240/180,'*10000 400% Beat','len'},
				
				{59.012,240/180/8,'*12 200% Tipsy','len'},
				{59.012+240/180/8,240/180/8,'*24 -200% Tipsy','len'},
				{59.012+240/180/8*2,240/180/8,'*24 200% Tipsy','len'},
				{59.012+240/180/8*3,240/180/8,'*24 -200% Tipsy','len'},
				
				{59.678,240/180/16,'*48 200% Tipsy','len'},
				{59.678+240/180/16,240/180/16,'*48 -200% Tipsy','len'},
				{59.678+240/180/16*2,240/180/16,'*48 200% Tipsy','len'},
				{59.678+240/180/16*3,240/180/16,'*48 -200% Tipsy','len'},
				{59.678+240/180/16*4,240/180/16,'*48 200% Tipsy','len'},
				{59.678+240/180/16*5,240/180/16,'*48 -200% Tipsy','len'},
				{59.678+240/180/16*6,240/180/16,'*48 200% Tipsy','len'},
				{59.678+240/180/16*7,240/180/16,'*24 No Tipsy','len'},
				
				{60.178,240/180/4,'*10000 400% Beat','len'},
				
				{61.345,240/180/4,'*10000 No Reverse,*10000 No Centered,*6 No Bumpy,*1.5 No Tornado,*15 No Invert,*1.5 No Flip,*5 2x','len'},
				
				{61.512,71.845,'*10000 250% Beat','end'},
				
				{61.678,240/180/4,'*4.5 150% Hallway','len'},
				{61.678+240/180/4,240/180/4,'*9 150% Distant','len'},
				{61.678+240/180/4*2,240/180/2,'*4.5 150% Hallway','len'},
				{240/180+61.678,240/180/4,'*9 150% Distant','len'},
				{240/180+61.678+240/180/4,240/180/4,'*9 150% Hallway','len'},
				{240/180+61.678+240/180/4*2,240/180/2,'*4.5 150% Distant','len'},
				{240/180*2+61.678,240/180/4,'*9 150% Hallway','len'},
				{240/180*2+61.678+240/180/4,240/180/4,'*9 150% Distant','len'},
				{240/180*2+61.678+240/180/4*2,240/180/2,'*4.5 150% Hallway','len'},
				{240/180*3+61.678,240/180,'*1.5 No Hallway','len'},
				
				{62.345,240/180/16,'*2.4 10% Reverse,*4.8 -20% Cross','len'},
				{62.345+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{62.345+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{62.345+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{62.345+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{62.345+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{62.345+240/180/16*6,240/180/8,'*2.4 No Reverse,*4.8 No Cross','len'},
				
				{63.678,240/180/16,'*2.4 -10% Reverse,*4.8 20% Cross','len'},
				{63.678+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{63.678+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{63.678+240/180/16*3,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{63.678+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{63.678+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{63.678+240/180/16*6,240/180/8,'*2.4 No Reverse,*4.8 No Cross','len'},
				
				{65.012,240/180/16,'*2.4 10% Reverse,*4.8 -20% Cross','len'},
				{65.012+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{65.012+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{65.012+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{65.012+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{65.012+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{65.012+240/180/16*6,240/180/8,'*2.4 No Reverse,*4.8 No Cross','len'},
				
				{65.678,240/180/16*3,'*8 Invert','len'},
				{65.678+240/180/16*3,240/180/16*3,'*8 Flip,*8 No Invert','len'},
				{65.678+240/180/16*6,240/180/8,'*12 No Flip','len'},
				
				{66.345,240/180/16,'*2.4 -10% Reverse,*4.8 20% Cross','len'},
				{66.345+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{66.345+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{66.345+240/180/16*3,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{66.345+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{66.345+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{66.345+240/180/16*6,240/180/8,'*2.4 No Reverse,*4.8 No Cross','len'},
				
				{67.012,240/180/4,'*4.5 150% Distant','len'},
				{67.012+240/180/4,240/180/4,'*9 150% Hallway','len'},
				{67.012+240/180/4*2,240/180/2,'*4.5 150% Distant','len'},
				{240/180+67.012,240/180/4,'*9 150% Hallway','len'},
				{240/180+67.012+240/180/4,240/180/4,'*9 150% Distant','len'},
				{240/180+67.012+240/180/4*2,240/180/2,'*4.5 150% Hallway','len'},
				{240/180*2+67.012,240/180/4,'*9 150% Distant','len'},
				{240/180*2+67.012+240/180/4,240/180/4,'*9 150% Hallway','len'},
				{240/180*2+67.012+240/180/4*2,240/180/2,'*4.5 150% Distant','len'},
				{240/180*3+67.012,240/180,'*2.25 No Distant','len'},
				
				{240/180*4+62.345,240/180/16,'*2.4 10% Reverse,*4.8 -20% Cross','len'},
				{240/180*4+62.345+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+62.345+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{240/180*4+62.345+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+62.345+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{240/180*4+62.345+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+62.345+240/180/16*6,240/180/8,'*2.4 No Reverse,*4.8 No Cross','len'},
				
				{240/180*4+63.678,240/180/16,'*2.4 -10% Reverse,*4.8 20% Cross','len'},
				{240/180*4+63.678+240/180/16,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{240/180*4+63.678+240/180/16*2,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+63.678+240/180/16*3,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{240/180*4+63.678+240/180/16*4,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+63.678+240/180/16*5,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{240/180*4+63.678+240/180/16*6,240/180/8,'*2.4 No Reverse,*4.8 No Cross','len'},
				
				{240/180*4+65.012,240/180/16,'*2.4 10% Reverse,*4.8 -20% Cross','len'},
				{240/180*4+65.012+240/180/16,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+65.012+240/180/16*2,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{240/180*4+65.012+240/180/16*3,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+65.012+240/180/16*4,240/180/16,'*4.8 10% Reverse,*9.6 -20% Cross','len'},
				{240/180*4+65.012+240/180/16*5,240/180/16,'*4.8 -10% Reverse,*9.6 20% Cross','len'},
				{240/180*4+65.012+240/180/16*6,240/180/8,'*2.4 No Reverse,*4.8 No Cross','len'},
				
				{240/180*4+65.678,240/180/16*3,'*8 Invert','len'},
				{240/180*4+65.678+240/180/16*3,240/180/16*3,'*8 Flip,*8 No Invert','len'},
				{240/180*4+65.678+240/180/16*6,240/180/8,'*12 No Flip','len'},
				
				{71.678,83.012,'*7.5 -250% Invert','end',1},
				{71.678,83.012,'*7.5 250% Invert','end',2},
				
				{71.678,240/180/4,'*12 200% Mini','len'},
				
				{71.845,240/180/4,'*10000 1000% Beat','len'},
				
				{72.012,240/180/8,'*24 No Mini','len'},
				
				{72.012,83.012,'*1.5 50% Tornado,*6 -200% Bumpy,*10000 -200% Reverse,*10000 80% Centered,*10000 0.4x','end'},
				
				{72.178,83.178,'*10000 250% Beat','end'},
				
				{84.345,240/180/2,'*0.001 No Reverse','len'},
				
				{85.012,200,'*10000 100.01% Reverse,*10000 No Invert','end'},
				
				{85.012,0.050,'*10000 -100% Centered','len'},
				
				{85.012+0.050,240/180*2,'*0.5 No Centered','len'},
				
				{88.345,200,'*0.55 250% Hallway,*10000 200% SuddenOffset,*10000 Sudden,*0.55 2.75x','end'},
				
				{93.512,115.178,'*10000 Beat','end'},
				
				{104.678,0.050,'*10000 50% Stealth','len'},
				{104.678+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2+104.678,0.050,'*10000 50% Stealth','len'},
				{240/180/2+104.678+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*2+104.678,0.050,'*10000 50% Stealth','len'},
				{240/180/2*2+104.678+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*2.75+104.678,0.050,'*10000 50% Stealth','len'},
				{240/180/2*2.75+104.678+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*3.25+104.678,0.050,'*10000 50% Stealth','len'},
				{240/180/2*3.25+104.678+0.050,240/180/8,'*6 No Stealth','len'},
				
				{107.345,0.050,'*10000 50% Stealth','len'},
				{107.345+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2+107.345,0.050,'*10000 50% Stealth','len'},
				{240/180/2+107.345+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*2+107.345,0.050,'*10000 50% Stealth','len'},
				{240/180/2*2+107.345+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*2.75+107.345,0.050,'*10000 50% Stealth','len'},
				{240/180/2*2.75+107.345+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*3.25+107.345,0.050,'*10000 50% Stealth','len'},
				{240/180/2*3.25+107.345+0.050,240/180/8,'*6 No Stealth','len'},
				
				{110.012,0.050,'*10000 50% Stealth','len'},
				{110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*1.5+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*1.5+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*2+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*2+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*2.5+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*2.5+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*2.75+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*2.75+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*3+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*3+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*3.5+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*3.5+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*3.75+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*3.75+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/2*4+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*4+110.012+0.050,240/180/8,'*6 No Stealth','len'},
				
				{240/180/2*4.5+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*4.5+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				{240/180/2*4.625+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*4.625+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				{240/180/2*4.75+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*4.75+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				{240/180/2*4.875+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*4.875+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				{240/180/2*5+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*5+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				{240/180/2*5.125+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*5.125+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				{240/180/2*5.25+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*5.25+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				{240/180/2*5.375+110.012,0.050,'*10000 50% Stealth','len'},
				{240/180/2*5.375+110.012+0.050,240/180/8,'*12 No Stealth','len'},
				
				{113.845,0.050,'*10000 50% Stealth','len'},
				{113.845+0.050,240/180/8,'*6 No Stealth','len'},
				{240/180/4+113.845,0.050,'*10000 50% Stealth','len'},
				{240/180/4+113.845+0.050,240/180/8,'*6 No Stealth','len'},
				
				{106.512,240/180/4,'*6 Invert','len'},
				{106.512+240/180/4,240/180/4,'*6 No Invert','len'},
				
				{109.178,240/180/4,'*6 Invert','len'},
				{109.178+240/180/4,240/180/4,'*6 No Invert','len'},
				
				{113.845,240/180/4,'*6 Invert','len'},
				{113.845+240/180/4,240/180/4,'*6 No Invert','len'},
				
				{115.012,200,'*10000 Dark','end'},
				
				}
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						
					end
				end
			end
			
			if beat >= 104 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:skewx(0);
						v:linear(240/180*3);
						v:x(SCREEN_CENTER_X+320*multi);
						v:GetChild('Judgment'):linear(240/180*3);
						v:GetChild('Combo'):linear(240/180*3);
						v:GetChild('Judgment'):x(-160*multi);
						v:GetChild('Combo'):x(-160*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 183 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/180/4);
						v:x(SCREEN_CENTER_X+160*multi);
						v:y(SCREEN_CENTER_Y);
						v:GetChild('Judgment'):linear(240/180/4);
						v:GetChild('Combo'):linear(240/180/4);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 214 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/180/4);
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):linear(240/180/4);
						v:GetChild('Combo'):linear(240/180/4);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 252 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 344 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:y(SCREEN_CENTER_Y+1000);
						v:GetChild('Judgment'):y(-1000);
						v:GetChild('Combo'):y(-1000);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 8 and beat < 40 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*(math.pi/4))*50+50 ..'% Brake');
			end
			
			if beat >= 40 and beat < 104 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if beat < 72 then
							v:skewx(math.sin(beat*(math.pi/4)));
						elseif beat >= 72 and beat < 88 then
							v:skewx(math.sin(beat*(math.pi/2)));
						elseif beat >= 88 and beat < 96 then
							v:skewx(math.sin(beat*math.pi));
						elseif beat >= 96 and beat < 104 then
							v:skewx(math.sin(beat*math.pi*2));
						end
					end
				end
			end
			
			if beat >= 47 and beat < 48 or beat >= 63 and beat < 64 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..math.sin(beat*math.pi*8)*math.sin(beat*math.pi)*500 ..'% Drunk');
			end
			
			if beat >= 120 and beat < 180 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 1 then
							v:x(SCREEN_CENTER_X+320*multi+math.cos(beat*(math.pi/4))*15);
							v:y(SCREEN_CENTER_Y+math.cos(beat*(math.pi/4))*15*math.sin(beat*(math.pi/32)));
						else
							v:x(SCREEN_CENTER_X+320*multi-math.cos(beat*(math.pi/4))*15*math.sin(beat*(math.pi/32)));
							v:y(SCREEN_CENTER_Y-math.sin(beat*(math.pi/4))*15);
						end
					end
				end
			end
			
			if beat >= 180 and beat < 183 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 1 then
							v:x(SCREEN_CENTER_X+320*multi+math.cos(beat*(math.pi/4))*auxvar:getaux());
							v:y(SCREEN_CENTER_Y+math.cos(beat*(math.pi/4))*auxvar:getaux()*math.sin(beat*(math.pi/32)));
						else
							v:x(SCREEN_CENTER_X+320*multi-math.cos(beat*(math.pi/4))*auxvar:getaux()*math.sin(beat*(math.pi/32)));
							v:y(SCREEN_CENTER_Y-math.sin(beat*(math.pi/4))*auxvar:getaux());
						end
					end
				end
			end
			
			if beat >= 215 and beat < 248 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 1 then
							v:x(SCREEN_CENTER_X+multi+math.cos(beat*(math.pi/4))*auxvar:getaux());
							v:y(SCREEN_CENTER_Y+math.cos(beat*(math.pi/4))*auxvar:getaux()*math.sin(beat*(math.pi/32)));
						else
							v:x(SCREEN_CENTER_X+multi-math.cos(beat*(math.pi/4))*auxvar:getaux()*math.sin(beat*(math.pi/32)));
							v:y(SCREEN_CENTER_Y-math.sin(beat*(math.pi/4))*auxvar:getaux());
						end
					end
				end
			end
			
			if beat >= 280 and beat < 344 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X-math.sin(beat*(math.pi/8))*160);
						v:y(SCREEN_CENTER_Y-math.sin(beat*(math.pi/4))*20);
						v:rotationx(-math.sin(beat*(math.pi/4))*5);
						v:rotationy(math.sin(beat*(math.pi/8))*5);
						v:rotationz(math.sin(beat*(math.pi/8))*10);
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.333 - 0.002) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		StarCircleEndMessageCommand="finishtweening;sleep,1;aux,15;linear,1;aux,0"
		StarCircleTwoStartMessageCommand="finishtweening;aux,0;linear,1/3;aux,10"
		StarCircleTwoEndMessageCommand="finishtweening;aux,10;linear,1/3;aux,0"
		FasterMessageCommand="%function(self)
			STARS1:texcoordvelocity(1,0);
			STARS2:texcoordvelocity(-1,0);
			STARS3:texcoordvelocity(0,1);
			STARS4:texcoordvelocity(0,-1);
			STARS5:texcoordvelocity(0.4,0);
			STARS6:texcoordvelocity(-0.4,0);
			STARS7:texcoordvelocity(0,0.4);
			STARS8:texcoordvelocity(0,-0.4);
		end"
		StarshippingMessageCommand="%function(self)
			STARS1:texcoordvelocity(-2,0);
			STARS2:texcoordvelocity(2,0);
			STARS3:texcoordvelocity(0,-2);
			STARS4:texcoordvelocity(0,2);
			STARS5:texcoordvelocity(-0.8,0);
			STARS6:texcoordvelocity(0.8,0);
			STARS7:texcoordvelocity(0,-0.8);
			STARS8:texcoordvelocity(0,0.8);
		end"
	/>
	
	<Layer
		File="whiteflash"
		OnCommand="%function(self)
		self:stretchto(0,0,SCREEN_WIDTH,SCREEN_HEIGHT);
		self:diffusealpha(0); end"
		FlashMessageCommand="%function(self)
		self:diffusealpha(1);
		self:sleep(0.05);
		self:linear(240/180/4-0.05);
		self:diffusealpha(0); end"
	/>
	
</children></ActorFrame>