<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,111.69 + (60 / 140 * 4)"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				prefix_inc = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{31.842,'KnobFlip'},
					{33.556,'KnobFlip'},
					
					{35.271,'KnobCheeky'},
					{36.985,'KnobCheeky'},
					
					{38.699,'KnobFlip'},
					{40.414,'KnobFlip'},
					
					{55.842,'RandomMoverP1'},
					{56.164,'RandomMoverP2'},
					{56.485,'RandomMoverP1'},
					{56.699,'RandomMoverP2'},
					
					{57.342,'MoverReset'},
					
					{57.556,'RandomMoverP2'},
					{57.878,'RandomMoverP1'},
					{58.199,'RandomMoverP2'},
					{58.414,'RandomMoverP1'},
					
					{58.949,'MoverReset'},
					
					{59.271,'RandomMoverP1'},
					{59.592,'RandomMoverP2'},
					{59.914,'RandomMoverP1'},
					{60.128,'RandomMoverP2'},
					
					{60.771,'MoverReset'},
					
					{60.985,'RandomMoverP2'},
					{61.306,'RandomMoverP1'},
					{61.628,'RandomMoverP2'},
					{61.842,'RandomMoverP1'},
					
					{62.378,'MoverReset'},
					
					{67.842,'Jump'},
					{68.056,'Jump'},
					{68.271,'Jump'},
					{68.485,'Jump'},
					
					{100.414,'KnobFlip'},
					{102.128,'KnobFlip'},
					
					{103.842,'KnobCheeky'},
					{105.556,'KnobCheeky'},
					
					{107.271,'KnobFlip'},
					{108.985,'KnobFlip'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2.25x,-999999% Cover,*10000 No Beat','end'},
				
				{0,14.271,'*10000 Dark','end'},
				{14.271,240/140/4,'*2.3334 No Dark','len'},
				
				{0,24.985,'*2.3334 200% Bumpy','end'},
				
				{14.485,25.199,'*10000 -150% Beat','end',1},
				{14.485,25.199,'*10000 150% Beat','end',2},
				
				{24.985,240/140,'*1.1667 No Bumpy','len'},
				{26.699,41.485,'*1 1.25x,*1 c149','end'},
				
				{27.771,240/140/4,'*100000 1000% Beat','len'},
				
				{27.985,41.485,'*18.6667 400% Sudden,*2.3334 50% Stealth,*10000 -5% SuddenOffset','end'},
				{27.985,240/140/4,'*7 -150% Centered','len'},
				{27.985,42.128,'Blind','end'},
				
				{28.414,42.128,'*1.45834 1000% Centered','end'},
				{41.485,240/140/8*3,'*4.5 No Centered','len'},
				{42.128,240/140/8,'*10000 No Centered','len'},
				
				{32.699,240/140/4,'*4.6667 Flip,*4.6667 -100% Invert','len'},
				{32.699+240/140/4,240/140/4,'*4.6667 No Flip,*4.6667 No Invert','len'},
				{32.699+240/140/4*4,240/140/4,'*4.6667 Flip,*4.6667 -100% Invert','len'},
				{32.699+240/140/4*5,240/140/4,'*4.6667 No Flip,*4.6667 No Invert','len'},
				
				{35.271,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{35.271+240/140/4,240/140/4,'*2.3334 -50% Flip,*2.3334 No Invert','len'},
				{35.271+240/140/4*2,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{35.271+240/140/4*3,240/140/4,'*2.3334 No Flip,*2.3334 No Invert','len'},
				{35.271+240/140/4*4,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{35.271+240/140/4*5,240/140/4,'*2.3334 -50% Flip,*2.3334 No Invert','len'},
				{35.271+240/140/4*6,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{35.271+240/140/4*7,240/140/4,'*2.3334 No Flip,*2.3334 No Invert','len'},
				
				{39.556,240/140/4,'*4.6667 Flip,*4.6667 -100% Invert','len'},
				{39.556+240/140/4,240/140/4,'*4.6667 No Flip,*4.6667 No Invert','len'},
				
				{41.485,240/140/8*3,'*6.2223 No Sudden,*0.7778 No Stealth','len'},
				
				{41.485,48.556,'*1.1667 75% Brake','end'},
				{48.556,55.628,'*1.75 No Brake,*2.3334 Wave','end'},
				{55.628,240/140/2,'*1.1667 No Wave','len'},
				{41.914,55.628,'*10000 Beat','end'},
				
				{62.378,66.128,'*3.1112 Drunk','end'},
				{65.485,66.129,'*1.5556 No Drunk','end'},
				
				{69.342,81.342,'*10000 Beat','end'},
				{82.628,240/140/4,'*100000 1000% Beat','len'},
				
				{69.342,240/140/8,'*9.3334 100.01% Reverse,*9.3334 -100% Split','len',1},
				{69.342+240/140/8,240/140/8*3,'*9.3334 100.01% Reverse,*9.3334 No Split','len',1},
				{69.342+240/140/8*2,240/140/8,'*9.3334 100.01% Reverse,*9.3334 -100% Split','len',2},
				{69.342+240/140/8*3,240/140/8,'*9.3334 100.01% Reverse,*9.3334 No Split','len',2},
				{69.342+240/140/8*4,240/140/8,'*9.3334 No Reverse,*9.3334 Split','len'},
				{69.342+240/140/8*5,240/140/8,'*9.3334 No Split','len'},
				{69.342+240/140/8*6,240/140/2,'*9.3334 100.01% Reverse','len'},
				
				{71.056,240/140/8,'*9.3334 No Reverse,*9.3334 Split','len',1},
				{71.056+240/140/8,240/140/8*3,'*9.3334 No Reverse,*9.3334 No Split','len',1},
				{71.056+240/140/8*2,240/140/8,'*9.3334 No Reverse,*9.3334 Split','len',2},
				{71.056+240/140/8*3,240/140/8,'*9.3334 No Reverse,*9.3334 No Split','len',2},
				{71.056+240/140/8*4,240/140/8,'*9.3334 100.01% Reverse,*9.3334 -100% Split','len'},
				{71.056+240/140/8*5,240/140/8,'*9.3334 100.01% Reverse,*9.3334 No Split','len'},
				{71.056+240/140/8*6,240/140/8,'*9.3334 No Reverse','len'},
				
				{72.771,240/140/8,'*9.3334 Invert','len'},
				{72.771+240/140/8,240/140/8,'*9.3334 No Invert','len'},
				{72.771+240/140/8*2,240/140/4,'*9.3334 Invert','len'},
				
				{72.771+240/140/8*4,240/140/8,'*9.3334 No Invert','len'},
				{72.771+240/140/8*5,240/140/8,'*9.3334 Invert','len'},
				{72.771+240/140/8*6,240/140/8,'*9.3334 No Invert','len'},
				
				{74.271,240/140/8*5,'*1.8667 200% Drunk,*1.8667 200% Tipsy','len'},
				{74.271+240/140/8*5,240/140/8*5,'*1.8667 No Drunk,*1.8667 No Tipsy','len'},
				
				{76.414,240/140/8*3,'*4.6667 100% Bumpy','len',1},
				{76.414+240/140/8*3,240/140/8*3,'*4.6667 200% Bumpy','len',1},
				{76.414+240/140/8*6,240/140/4*5,'*4.6667 300% Bumpy','len',1},
				{76.414+240/140/8*16,240/140/8*3,'*4.6667 200% Bumpy','len',1},
				{76.414+240/140/8*19,240/140/8*3,'*4.6667 100% Bumpy','len',1},
				{76.414+240/140/8*22,240/140/8*3,'*4.6667 No Bumpy','len',1},
				
				{78.128,240/140/8*3,'*4.6667 100% Bumpy','len',2},
				{78.128+240/140/8*3,240/140/8*3,'*4.6667 200% Bumpy','len',2},
				{78.128+240/140/8*6,240/140/8*9,'*4.6667 300% Bumpy','len',2},
				
				{81.342,240/140/8,'*14 300% Bumpy','len',1},
				{81.342,240/140/8,'*14 No Bumpy','len',2},
				
				{81.342+240/140/8,240/140/8,'*14 No Bumpy','len',1},
				{81.342+240/140/8,240/140/8,'*14 300% Bumpy','len',2},
				
				{81.342+240/140/8*2,240/140/8,'*14 300% Bumpy','len',1},
				{81.342+240/140/8*2,240/140/8,'*14 No Bumpy','len',2},
				
				{81.342+240/140/8*3,240/140/8,'*14 No Bumpy','len',1},
				{81.342+240/140/8*3,240/140/8,'*14 300% Bumpy','len',2},
				
				{81.342+240/140/8*4,240/140/4,'*14 300% Bumpy','len',1},
				{81.342+240/140/8*4,240/140/4,'*14 No Bumpy','len',2},
				
				{81.342+240/140/8*6,240/140/4,'*14 No Bumpy','len',1},
				
				{83.056,95.056,'*10000 Beat','end'},
				
				{240/140*8+69.342,240/140/8,'*9.3334 100.01% Reverse,*9.3334 -100% Split','len',1},
				{240/140*8+69.342+240/140/8,240/140/8*3,'*9.3334 100.01% Reverse,*9.3334 No Split','len',1},
				{240/140*8+69.342+240/140/8*2,240/140/8,'*9.3334 100.01% Reverse,*9.3334 -100% Split','len',2},
				{240/140*8+69.342+240/140/8*3,240/140/8,'*9.3334 100.01% Reverse,*9.3334 No Split','len',2},
				{240/140*8+69.342+240/140/8*4,240/140/8,'*9.3334 No Reverse,*9.3334 Split','len'},
				{240/140*8+69.342+240/140/8*5,240/140/8,'*9.3334 No Split','len'},
				{240/140*8+69.342+240/140/8*6,240/140/2,'*9.3334 100.01% Reverse','len'},
				
				{240/140*8+71.056,240/140/8,'*9.3334 No Reverse,*9.3334 Split','len',1},
				{240/140*8+71.056+240/140/8,240/140/8*3,'*9.3334 No Reverse,*9.3334 No Split','len',1},
				{240/140*8+71.056+240/140/8*2,240/140/8,'*9.3334 No Reverse,*9.3334 Split','len',2},
				{240/140*8+71.056+240/140/8*3,240/140/8,'*9.3334 No Reverse,*9.3334 No Split','len',2},
				{240/140*8+71.056+240/140/8*4,240/140/8,'*9.3334 100.01% Reverse,*9.3334 -100% Split','len'},
				{240/140*8+71.056+240/140/8*5,240/140/8,'*9.3334 100.01% Reverse,*9.3334 No Split','len'},
				{240/140*8+71.056+240/140/8*6,240/140/8,'*9.3334 No Reverse','len'},
				
				{240/140*8+72.771,240/140/8,'*9.3334 Flip,*9.3334 -100% Invert','len'},
				{240/140*8+72.771+240/140/8,240/140/8,'*9.3334 No Flip,*9.3334 No Invert','len'},
				{240/140*8+72.771+240/140/8*2,240/140/4,'*9.3334 Flip,*9.3334 -100% Invert','len'},
				
				{240/140*8+72.771+240/140/8*4,240/140/8,'*9.3334 No Flip,*9.3334 No Invert','len'},
				{240/140*8+72.771+240/140/8*5,240/140/8,'*9.3334 Flip,*9.3334 -100% Invert','len'},
				{240/140*8+72.771+240/140/8*6,240/140/8,'*9.3334 No Flip,*9.3334 No Invert','len'},
				
				{240/140*8+74.271,240/140/8*5,'*1.8667 200% Drunk,*1.8667 200% Tipsy','len'},
				{240/140*8+74.271+240/140/8*5,240/140/8*5,'*1.8667 No Drunk,*1.8667 No Tipsy','len'},
				
				{240/140*8+76.414,240/140/8*3,'*4.6667 100% Bumpy','len',2},
				{240/140*8+76.414+240/140/8*3,240/140/8*3,'*4.6667 200% Bumpy','len',2},
				{240/140*8+76.414+240/140/8*6,240/140/4*5,'*4.6667 300% Bumpy','len',2},
				{240/140*8+76.414+240/140/8*16,240/140/8*3,'*4.6667 200% Bumpy','len',2},
				{240/140*8+76.414+240/140/8*19,240/140/8*3,'*4.6667 100% Bumpy','len',2},
				{240/140*8+76.414+240/140/8*22,240/140/8*4,'*4.6667 No Bumpy','len',2},
				
				{240/140*8+78.128,240/140/8*3,'*4.6667 100% Bumpy','len',1},
				{240/140*8+78.128+240/140/8*3,240/140/8*3,'*4.6667 200% Bumpy','len',1},
				{240/140*8+78.128+240/140/8*6,240/140/8*10,'*4.6667 300% Bumpy','len',1},
				
				{240/140*8+81.342+240/140/8,240/140/8,'*14 No Bumpy','len',1},
				{240/140*8+81.342+240/140/8,240/140/8,'*14 300% Bumpy','len',2},
				
				{240/140*8+81.342+240/140/8*2,240/140/8,'*14 300% Bumpy','len',1},
				{240/140*8+81.342+240/140/8*2,240/140/8,'*14 No Bumpy','len',2},
				
				{240/140*8+81.342+240/140/8*3,240/140/8,'*14 No Bumpy','len',1},
				{240/140*8+81.342+240/140/8*3,240/140/8,'*14 300% Bumpy','len',2},
				
				{240/140*8+81.342+240/140/8*4,240/140/4,'*14 300% Bumpy','len',1},
				{240/140*8+81.342+240/140/8*4,240/140/4,'*14 No Bumpy','len',2},
				
				{240/140*8+81.342+240/140/8*6,240/140/4,'*14 No Bumpy','len',1},
				
				{96.342,240/140/4,'*100000 1000% Beat','len'},
				
				{96.556,200,'*4.6667 100.01% Reverse','end'},
				
				{95.271,200,'*1 1.25x,*1 c149','end'},
				
				{96.556,200,'*18.6667 400% Sudden,*2.3334 50% Stealth,*10000 -5% SuddenOffset','end'},
				{96.556,240/140/4,'*7 -150% Centered','len'},
				{96.556,200,'Blind','end'},
				
				{96.985,200,'*1.45834 1000% Centered','end'},
				
				{240/140*40+32.699,240/140/4,'*4.6667 Flip,*4.6667 -100% Invert','len'},
				{240/140*40+32.699+240/140/4,240/140/4,'*4.6667 No Flip,*4.6667 No Invert','len'},
				{240/140*40+32.699+240/140/4*4,240/140/4,'*4.6667 Flip,*4.6667 -100% Invert','len'},
				{240/140*40+32.699+240/140/4*5,240/140/4,'*4.6667 No Flip,*4.6667 No Invert','len'},
				
				{240/140*40+35.271,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{240/140*40+35.271+240/140/4,240/140/4,'*2.3334 -50% Flip,*2.3334 No Invert','len'},
				{240/140*40+35.271+240/140/4*2,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{240/140*40+35.271+240/140/4*3,240/140/4,'*2.3334 No Flip,*2.3334 No Invert','len'},
				{240/140*40+35.271+240/140/4*4,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{240/140*40+35.271+240/140/4*5,240/140/4,'*2.3334 -50% Flip,*2.3334 No Invert','len'},
				{240/140*40+35.271+240/140/4*6,240/140/4,'*2.3334 -50% Flip,*2.3334 50% Invert','len'},
				{240/140*40+35.271+240/140/4*7,240/140/4,'*2.3334 No Flip,*2.3334 No Invert','len'},
				
				{240/140*40+39.556,240/140/4,'*4.6667 Flip,*4.6667 -100% Invert','len'},
				{240/140*40+39.556+240/140/4,240/140/4,'*4.6667 No Flip,*4.6667 No Invert','len'},
				{240/140*40+39.556+240/140,240/140/4,'*4.6667 Flip,*4.6667 -100% Invert','len'},
				{240/140*40+39.556+240/140/4*5,240/140/4,'*4.6667 No Flip,*4.6667 No Invert','len'},
				
				{110.699,200,'*2.9167 -500% Tornado,*2.9167 500% Bumpy,*29.1667 -5000% Drunk,*2.9167 500% Hallway,*1.1667 200% Mini','end',1},
				{110.699,200,'*2.9167 500% Tornado,*2.9167 -500% Bumpy,*29.1667 5000% Drunk,*2.9167 -500% Hallway,*1.1667 200% Mini','end',2},
				
				}
				
				for i = 31.842,42.127,240/140*2 do
					table.insert(prefix_mods,{i,0.050,'*10000 -150% Centered,*10000 Stealth','len',1});
				end
				
				for i = 30.128,43.842,240/140*2 do
					table.insert(prefix_mods,{i,0.050,'*10000 -150% Centered,*10000 Stealth','len',2});
				end
				
				for i = 100.414,110.698,240/140*2 do
					table.insert(prefix_mods,{i,0.050,'*10000 -150% Centered,*10000 Stealth','len',1});
				end
				
				for i = 98.699,112.413,240/140*2 do
					table.insert(prefix_mods,{i,0.050,'*10000 -150% Centered,*10000 Stealth','len',2});
				end
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			prefix_inc = prefix_inc + 1;
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						local d = SCREEN_CENTER_X-160
						if i == 2 then d = SCREEN_CENTER_X+160 end
						v:x(d);
					end
				end
			end
			
			if beat >= 64 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/140/8*5);
						v:x(SCREEN_CENTER_X+128*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 100 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+128*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 156 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/140/8);
						v:rotationz(30);
						v:zoomx(0.9);
						v:zoomy(0.9);
						v:sleep(240/140/16);
						v:decelerate(240/140/8);
						v:rotationz(-30);
						v:zoomx(0.8);
						v:zoomy(0.8);
						v:sleep(240/140/16);
						v:decelerate(240/140/8);
						v:rotationz(30);
						v:zoomx(0.7);
						v:zoomy(0.7);
						v:sleep(240/140/16);
						v:decelerate(240/140/8);
						v:rotationz(-30);
						v:zoomx(0.6);
						v:zoomy(0.6);
						v:sleep(240/140/8);
						v:decelerate(240/140/8);
						v:rotationz(0);
						v:zoomx(0.5);
						v:zoomy(0.5);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 160 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/140/2);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 162 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/140/4);
						v:skewx(-multi);
						v:spring(240/140/8);
						v:skewx(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 180 and fgcurcommand == 6 or beat >= 216 and fgcurcommand == 11 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 1 then
							v:decelerate(240/140/8);
							v:zoomx(0.9);
							v:zoomy(0.9);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(0.8);
							v:zoomy(0.8);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(0.7);
							v:zoomy(0.7);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 184 and fgcurcommand == 7 or beat >= 212 and fgcurcommand == 10 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 2 then
							v:decelerate(240/140/8);
							v:zoomx(0.9);
							v:zoomy(0.9);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(0.8);
							v:zoomy(0.8);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(0.7);
							v:zoomy(0.7);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 188 and fgcurcommand == 8 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 1 then
							v:decelerate(240/140/8);
							v:zoomx(0.8);
							v:zoomy(0.8);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(0.9);
							v:zoomy(0.9);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(1);
							v:zoomy(1);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 220 and fgcurcommand == 12 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 2 then
							v:decelerate(240/140/8);
							v:zoomx(0.8);
							v:zoomy(0.8);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(0.9);
							v:zoomy(0.9);
							v:sleep(240/140/4);
							v:decelerate(240/140/8);
							v:zoomx(1);
							v:zoomy(1);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 191.5 and fgcurcommand == 9 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/140/8);
						v:zoomx(0.85+multi*0.15);
						v:zoomy(0.85+multi*0.15);
						v:decelerate(240/140/8);
						v:zoomx(0.85-multi*0.15);
						v:zoomy(0.85-multi*0.15);
						v:decelerate(240/140/8);
						v:zoomx(0.85+multi*0.15);
						v:zoomy(0.85+multi*0.15);
						v:decelerate(240/140/8);
						v:zoomx(0.85-multi*0.15);
						v:zoomy(0.85-multi*0.15);
						v:decelerate(240/140/8);
						v:zoomx(0.85+multi*0.15);
						v:zoomy(0.85+multi*0.15);
						v:sleep(240/140/8);
						v:decelerate(240/140/8);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 224 and fgcurcommand == 13 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/140/8);
						v:zoomx(0.85-multi*0.15);
						v:zoomy(0.85-multi*0.15);
						v:decelerate(240/140/8);
						v:zoomx(0.85+multi*0.15);
						v:zoomy(0.85+multi*0.15);
						v:decelerate(240/140/8);
						v:zoomx(0.85-multi*0.15);
						v:zoomy(0.85-multi*0.15);
						v:decelerate(240/140/8);
						v:zoomx(0.85+multi*0.15);
						v:zoomy(0.85+multi*0.15);
						v:sleep(240/140/8);
						v:decelerate(240/140/8);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 67 and beat < 100 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+128*multi+auxvar:getaux()*-multi);
					end
				end
			end
			
			if beat >= 227 and beat < 268 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+128*multi+auxvar:getaux()*-multi);
					end
				end
			end
			
			if beat >= 160 and beat < 163 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-auxvar:getaux() ..'% Centered');
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.116 - -0.208) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		KnobFlipMessageCommand="finishtweening;aux,0;linear,240/140/8;aux,256;sleep,240/140/8;linear,240/140/8;aux,0"
		KnobCheekyMessageCommand="finishtweening;aux,0;linear,240/140/8;aux,64;sleep,240/140/8;linear,240/140/8;aux,96;sleep,240/140/8;linear,240/140/8;aux,64;sleep,240/140/8;linear,240/140/8;aux,0"
		RandomMoverP1MessageCommand="%function()
			local rand = math.random(0,2);
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						if math.mod(GAMESTATE:GetSongBeat(),8) < 4 then
							if math.mod(GAMESTATE:GetSongBeat(),4) < 1 then
								v:decelerate(240/140/8);
								v:addx(-32);
								v:rotationy(30);
							elseif rand < 1 then
								v:decelerate(240/140/8);
								v:addy(32);
								v:rotationx(30);
							else
								v:decelerate(240/140/8);
								v:addy(-32);
								v:rotationx(-30);
							end
						else
							if math.mod(GAMESTATE:GetSongBeat(),4) > 1 then
								v:decelerate(240/140/8);
								v:addx(-32);
								v:rotationy(30);
							elseif rand < 1 then
								v:decelerate(240/140/8);
								v:addy(32);
								v:rotationx(30);
							else
								v:decelerate(240/140/8);
								v:addy(-32);
								v:rotationx(-30);
							end
						end
					end
				end
			end
		end"
		RandomMoverP2MessageCommand="%function()
			local rand = math.random(0,2);
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						if math.mod(GAMESTATE:GetSongBeat(),8) < 4 then
							if math.mod(GAMESTATE:GetSongBeat(),4) > 1 then
								v:decelerate(240/140/8);
								v:addx(32);
								v:rotationy(-30);
							elseif rand < 1 then
								v:decelerate(240/140/8);
								v:addy(32);
								v:rotationx(30);
							else
								v:decelerate(240/140/8);
								v:addy(-32);
								v:rotationx(-30);
							end
						else
							if math.mod(GAMESTATE:GetSongBeat(),4) < 1 then
								v:decelerate(240/140/8);
								v:addx(32);
								v:rotationy(-30);
							elseif rand < 1 then
								v:decelerate(240/140/8);
								v:addy(32);
								v:rotationx(30);
							else
								v:decelerate(240/140/8);
								v:addy(-32);
								v:rotationx(-30);
							end
						end
					end
				end
			end
		end"
		MoverResetMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:decelerate(240/140/8);
					v:x(SCREEN_CENTER_X+128*multi);
					v:y(SCREEN_CENTER_Y);
					v:rotationx(0);
					v:rotationy(0);
				end
			end
		end"
		JumpMessageCommand="finishtweening;aux,0;decelerate,240/140/16;aux,50;accelerate,240/140/16;aux,0"
	/>
	
</children></ActorFrame>