<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,112.95"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
				};
				
				
				prefix_mods = {
				
				{0,200,'3x,-999999% Cover,*10000 No Beat','end'},
				
				{0.536-240/112/8,15.268,'*10000 Beat','end'},
				{15.268,240/112/4,'*10000 500% Beat','len'},
				
				{16.607,200,'*6 500% Invert','end'},
				
				{17.411,32.947,'*10000 200% Beat','end'},
				
				{34.286,240/112/4,'*0.9334 50% Stealth,*1.5 2x','len'},
				{34.822,42.322,'*5.6 50% Stealth,*1.5 2x','end'},
				
				{34.822,240/112/4,'*5.6 Stealth','len',1},
				{34.822+240/112/4,240/112/4,'*5.6 Stealth','len',2},
				{34.822+240/112/4*2,240/112/8,'*5.6 Stealth','len',1},
				{34.822+240/112/4*2.5,240/112/8,'*5.6 Stealth','len',2},
				{34.822+240/112/4*3,240/112/8,'*5.6 Stealth','len',1},
				{34.822+240/112/4*3.5,240/112/8,'*5.6 Stealth','len',2},
				{34.822+240/112/4*4,240/112/4,'*5.6 Stealth','len',1},
				{34.822+240/112/4*5,240/112/8,'*5.6 Stealth','len',2},
				{34.822+240/112/4*5.5,240/112/8,'*5.6 Stealth','len',1},
				{34.822+240/112/4*6,240/112/8,'*5.6 Stealth','len',2},
				{34.822+240/112/4*6.5,240/112/8,'*5.6 Stealth','len',1},
				{34.822+240/112/4*7,240/112/4,'*5.6 Stealth','len',2},
				
				{39.107,240/112/4,'*5.6 Stealth','len',1},
				{39.107+240/112/4,240/112/4,'*5.6 Stealth','len',2},
				{39.107+240/112/4*2,240/112/8,'*5.6 Stealth','len',1},
				{39.107+240/112/4*2.5,240/112/8,'*5.6 Stealth','len',2},
				{39.107+240/112/4*3,240/112/8,'*5.6 Stealth','len',1},
				{39.107+240/112/4*3.5,240/112/8,'*5.6 Stealth','len',2},
				{39.107+240/112/4*4,240/112/4,'*5.6 Stealth','len',1},
				{39.107+240/112/4*5,240/112/8,'*5.6 Stealth','len',2},
				{39.107+240/112/4*5.5,240/112/8,'*5.6 Stealth','len',1},
				{39.107+240/112/4*6,240/112/8,'*5.6 Stealth','len',2},
				{39.107+240/112/4*6.5,240/112/8,'*5.6 Stealth','len',1},
				{39.107+240/112/4*7,240/112/4,'*5.6 Stealth','len',2},
				
				{42.322,240/112/2,'*0.9334 No Stealth','len',1},
				{42.322,240/112/2,'*0.4667 No Stealth','len',2},
				
				{43.125,51.697,'*10000 300% Beat','end'},
				
				{51.697,240/112/4,'*10000 1500% Beat','len'},
				
				{43.393,240/112/8,'*56 750% Drunk','len',1},
				{43.393+240/112/4*0.5,240/112/8,'*56 No Drunk','len',1},
				{43.393+240/112/4,240/112/8,'*56 -750% Drunk','len',2},
				{43.393+240/112/4*1.5,240/112/8,'*56 No Drunk','len',2},
				{43.393+240/112/4*2,240/112/8,'*56 750% Drunk','len',1},
				{43.393+240/112/4*2.5,240/112/8,'*56 No Drunk','len',1},
				{43.393+240/112/4*3,240/112/8,'*56 -750% Drunk','len',2},
				{43.393+240/112/4*3.5,240/112/8,'*56 No Drunk','len',2},
				{43.393+240/112/4*4,240/112/8,'*56 750% Drunk','len',1},
				{43.393+240/112/4*4.5,240/112/8,'*56 No Drunk','len',1},
				{43.393+240/112/4*5,240/112/8,'*56 -750% Drunk','len',2},
				{43.393+240/112/4*5.5,240/112/8,'*56 No Drunk','len',2},
				{43.393+240/112/4*6,240/112/8,'*56 750% Drunk','len',1},
				{43.393+240/112/4*6.5,240/112/8,'*56 No Drunk','len',1},
				{43.393+240/112/4*7,240/112/8,'*56 -750% Drunk','len',2},
				{43.393+240/112/4*7.5,240/112/8,'*56 No Drunk','len',2},
				
				{47.679,240/112/8,'*56 -750% Drunk','len',1},
				{47.679+240/112/4*0.5,240/112/8,'*56 No Drunk','len',1},
				{47.679+240/112/4,240/112/8,'*56 750% Drunk','len',2},
				{47.679+240/112/4*1.5,240/112/8,'*56 No Drunk','len',2},
				{47.679+240/112/4*2,240/112/8,'*56 -750% Drunk','len',1},
				{47.679+240/112/4*2.5,240/112/8,'*56 No Drunk','len',1},
				{47.679+240/112/4*3,240/112/8,'*56 750% Drunk','len',2},
				{47.679+240/112/4*3.5,240/112/8,'*56 No Drunk','len',2},
				{47.679+240/112/4*4,240/112/8,'*56 -750% Drunk','len',1},
				{47.679+240/112/4*4.5,240/112/8,'*56 No Drunk','len',1},
				{47.679+240/112/4*5,240/112/8,'*56 750% Drunk','len',2},
				{47.679+240/112/4*5.5,240/112/8,'*56 No Drunk','len',2},
				{47.679+240/112/4*6,240/112/8,'*56 -750% Drunk','len',1},
				{47.679+240/112/4*6.5,240/112/8,'*56 No Drunk','len',1},
				{47.679+240/112/4*7,240/112/8,'*56 750% Drunk','len',2},
				{47.679+240/112/4*7.5,240/112/8,'*56 No Drunk','len',2},
				
				{51.965,240/112*3.5,'*3.7334 Drunk','len',1},
				{51.965,240/112*3.5,'*3.7334 -100% Drunk','len',2},
				
				{59.197,240/112/4,'*3.7334 No Drunk','len',1},
				{59.197,240/112/4,'*3.7334 No Drunk','len',2},
				
				{60.268,112.232,'*10000 400% Beat','end'},
				
				{77.143,240/112/12,'*18.6667 -166.667% Flip','len'},
				{77.143+240/112/12,240/112/12,'*18.6667 -33.334% Flip','len'},
				{77.143+240/112/12*2,94.822,'*18.6667 -500% Flip','end'},
				
				{94.554,240/112/4,'*10000 1500% Beat','len'},
				
				{94.822,0.050,'*10000 No Flip','len'},
				
				{94.822,240/112/8,'*56 750% Drunk','len',1},
				{94.822+240/112/4*0.5,240/112/8,'*56 No Drunk','len',1},
				{94.822+240/112/4,240/112/8,'*56 -750% Drunk','len',2},
				{94.822+240/112/4*1.5,240/112/8,'*56 No Drunk','len',2},
				{94.822+240/112/4*2,240/112/8,'*56 750% Drunk','len',1},
				{94.822+240/112/4*2.5,240/112/8,'*56 No Drunk','len',1},
				{94.822+240/112/4*3,240/112/8,'*56 -750% Drunk','len',2},
				{94.822+240/112/4*3.5,240/112/8,'*56 No Drunk','len',2},
				
				{99.107,240/112/8,'*56 750% Drunk','len',1},
				{99.107+240/112/4*0.5,240/112/8,'*56 No Drunk','len',1},
				{99.107+240/112/4,240/112/8,'*56 -750% Drunk','len',2},
				{99.107+240/112/4*1.5,240/112/8,'*56 No Drunk','len',2},
				{99.107+240/112/4*2,240/112/8,'*56 750% Drunk','len',1},
				{99.107+240/112/4*2.5,240/112/8,'*56 No Drunk','len',1},
				{99.107+240/112/4*3,240/112/8,'*56 -750% Drunk','len',2},
				{99.107+240/112/4*3.5,240/112/8,'*56 No Drunk','len',2},
				
				{103.393,240/112/8,'*56 750% Drunk','len',1},
				{103.393+240/112/4*0.5,240/112/8,'*56 No Drunk','len',1},
				{103.393+240/112/4,240/112/8,'*56 -750% Drunk','len',2},
				{103.393+240/112/4*1.5,240/112/8,'*56 No Drunk','len',2},
				{103.393+240/112/4*2,240/112/8,'*56 750% Drunk','len',1},
				{103.393+240/112/4*2.5,240/112/8,'*56 No Drunk','len',1},
				{103.393+240/112/4*3,240/112/8,'*56 -750% Drunk','len',2},
				{103.393+240/112/4*3.5,240/112/8,'*56 No Drunk','len',2},
				
				{107.679,240/112/8,'*56 750% Drunk','len',1},
				{107.679+240/112/4*0.5,240/112/8,'*56 No Drunk','len',1},
				{107.679+240/112/4,240/112/8,'*56 -750% Drunk','len',2},
				{107.679+240/112/4*1.5,240/112/8,'*56 No Drunk','len',2},
				{107.679+240/112/4*2,240/112/8,'*56 750% Drunk','len',1},
				{107.679+240/112/4*2.5,240/112/8,'*56 No Drunk','len',1},
				{107.679+240/112/4*3,240/112/8,'*56 -750% Drunk','len',2},
				{107.679+240/112/4*3.5,240/112/8,'*56 No Drunk','len',2},
				
				{96.429,240/112,'*0.93334 50% Stealth,*1.5 2x','len'},
				{96.429+240/112,240/112,'*0.9334 No Stealth,*1.5 3x','len',2},
				{96.429+240/112,240/112,'*1.8667 No Stealth,*1.5 3x','len',1},
				
				{96.429+240/112*2,240/112,'*0.9334 50% Stealth,*1.5 2x','len'},
				{96.429+240/112*3,240/112,'*0.9334 No Stealth,*1.5 3x','len',2},
				{96.429+240/112*3,240/112,'*1.8667 No Stealth,*1.5 3x','len',1},
				
				{96.429+240/112*4,240/112,'*0.9334 50% Stealth,*1.5 2x','len'},
				{96.429+240/112*5,240/112,'*0.9334 No Stealth,*1.5 3x','len',1},
				{96.429+240/112*5,240/112,'*1.8667 No Stealth,*1.5 3x','len',2},
				
				{96.429+240/112*6,240/112*8,'*0.9334 50% Stealth,*1.5 2x','len'},
				
				{96.965,240/112/4*3,'*5.6 50% Stealth','len'},
				
				{96.965,240/112/4,'*5.6 Stealth','len',1},
				{96.965+240/112/4,240/112/8,'*5.6 Stealth','len',2},
				{96.965+240/112/4*1.5,240/112/8,'*5.6 Stealth','len',1},
				{96.965+240/112/4*2,240/112/8,'*5.6 Stealth','len',2},
				{96.965+240/112/4*2.5,240/112/8,'*5.6 Stealth','len',1},
				
				{96.965+240/112*2,240/112/4*3,'*5.6 50% Stealth','len'},
				
				{96.965+240/112*2,240/112/4,'*5.6 Stealth','len',2},
				{96.965+240/112*2+240/112/4,240/112/8,'*5.6 Stealth','len',1},
				{96.965+240/112*2+240/112/4*1.5,240/112/8,'*5.6 Stealth','len',2},
				{96.965+240/112*2+240/112/4*2,240/112/4,'*5.6 Stealth','len',1},
				
				{96.965+240/112*4,240/112/4*3,'*5.6 50% Stealth','len'},
				
				{96.965+240/112*4,240/112/4,'*5.6 Stealth','len',2},
				{96.965+240/112*4+240/112/4,240/112/8,'*5.6 Stealth','len',1},
				{96.965+240/112*4+240/112/4*1.5,240/112/8,'*5.6 Stealth','len',2},
				{96.965+240/112*4+240/112/4*2,240/112/8,'*5.6 Stealth','len',1},
				{96.965+240/112*4+240/112/4*2.5,240/112/8,'*5.6 Stealth','len',2},
				
				{96.965+240/112*6,240/112/4*3,'*5.6 50% Stealth','len'},
				
				{96.965+240/112*6,240/112/4,'*5.6 Stealth','len',1},
				{96.965+240/112*6+240/112/4,240/112/8,'*5.6 Stealth','len',2},
				{96.965+240/112*6+240/112/4*1.5,240/112/8,'*5.6 Stealth','len',1},
				{96.965+240/112*6+240/112/4*2,240/112/4,'*5.6 Stealth','len',2},
				{96.965+240/112*6+240/112/4*3,240/112/4,'*5.6 Stealth','len',1},
				
				}
				
				for i = 9.375,35.089,240/112/4 do
					table.insert(prefix_mods,{i,240/112/16,'*3.7334 50% Distant','len'});
					table.insert(prefix_mods,{i+240/112/16,240/112/16,'*3.7334 No Distant','len'});
				end
				
				for i = 17.679,34.821,240/112*2 do
					table.insert(prefix_messages,{i,'WubADubDubP1'});
					table.insert(prefix_messages,{i+240/112,'WubADubDubP2'});
				end
				
				for i = 43.661,59.731,240/112/4 do
					table.insert(prefix_mods,{i,240/112/16,'*3.7334 50% Distant','len'});
					table.insert(prefix_mods,{i+240/112/16,240/112/16,'*3.7334 No Distant','len'});
				end
				
				for i = 60.536,77.678,240/112*2 do
					if i < 69 or i > 69.25 then
						table.insert(prefix_messages,{i,'Wub2WubHarderP1'});
						table.insert(prefix_messages,{i+240/112,'Wub2WubHarderP2'});
					else
						table.insert(prefix_messages,{i+240/112,'Wub2WubHarderP2'});
					end
				end
				
				for i = 60.804,112.231,240/112/4 do
					table.insert(prefix_mods,{i,240/112/16,'*3.7334 50% Distant','len'});
					table.insert(prefix_mods,{i+240/112/16,240/112/16,'*3.7334 No Distant','len'});
				end
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						
					end
				end
			end
			
			if beat >= 30 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/112/8);
						v:x(SCREEN_CENTER_X+multi*320);
						v:GetChild('Judgment'):x(multi*-160);
						v:GetChild('Combo'):x(multi*-160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 110 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/112/4);
						v:x(SCREEN_CENTER_X+multi*160);
						v:accelerate(240/112/4);
						v:x(SCREEN_CENTER_X+multi*320);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 128 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/112/4);
						v:zoomy(0);
						v:spring(240/112/8);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 143 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/112/24);
						v:x(SCREEN_CENTER_X+multi*320+106.667);
						v:sleep(240/112/24);
						v:linear(240/112/24);
						v:x(SCREEN_CENTER_X+multi*640-106.667);
						v:sleep(240/112/24);
						v:linear(240/112/24);
						v:x(SCREEN_CENTER_X+multi*640);
						v:GetChild('Judgment'):x(multi*-480);
						v:GetChild('Combo'):x(multi*-480);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 144 and fgcurcommand == 5 or beat >= 160 and fgcurcommand == 9 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 1 then
							v:linear(240/112/12);
							v:rotationz(5);
							v:x(SCREEN_CENTER_X+multi*640+50);
							v:y(SCREEN_CENTER_Y-70);
							v:sleep(240/112/12*2);
							v:linear(240/112/12);
							v:rotationz(10);
							v:x(SCREEN_CENTER_X+multi*640+100);
							v:y(SCREEN_CENTER_Y-140);
							v:sleep(240/112/12*3);
							v:linear(240/112/12);
							v:rotationz(15);
							v:x(SCREEN_CENTER_X+multi*640+150);
							v:y(SCREEN_CENTER_Y-210);
							v:sleep(240/112/12);
							v:linear(240/112/12);
							v:rotationz(20);
							v:x(SCREEN_CENTER_X+multi*640+200);
							v:y(SCREEN_CENTER_Y-280);
						else
							v:sleep(240/112/8);
							v:linear(240/112/12);
							v:rotationz(-5);
							v:x(SCREEN_CENTER_X+multi*640-50);
							v:y(SCREEN_CENTER_Y-40);
							v:sleep(240/112/12*3);
							v:linear(240/112/12);
							v:rotationz(-10);
							v:x(SCREEN_CENTER_X+multi*640-100);
							v:y(SCREEN_CENTER_Y-80);
							v:sleep(240/112/12);
							v:linear(240/112/12);
							v:rotationz(-15);
							v:x(SCREEN_CENTER_X+multi*640-150);
							v:y(SCREEN_CENTER_Y-120);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 150 and fgcurcommand == 6 or beat >= 166 and fgcurcommand == 10 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 1 then
							v:bounceend(240/112/8);
							v:rotationz(13.3334);
							v:x(SCREEN_CENTER_X+multi*640+200-66.6667);
							v:y(SCREEN_CENTER_Y-280+93.3334);
							v:bounceend(240/112/8);
							v:rotationz(6.6667);
							v:x(SCREEN_CENTER_X+multi*640+66.6667);
							v:y(SCREEN_CENTER_Y-93.3334);
							v:bounceend(240/112/8);
							v:rotationz(0);
							v:x(SCREEN_CENTER_X+multi*640);
							v:y(SCREEN_CENTER_Y);
						else
							v:bounceend(240/112/8);
							v:rotationz(-10);
							v:x(SCREEN_CENTER_X+multi*640-100);
							v:y(SCREEN_CENTER_Y-80);
							v:bounceend(240/112/8);
							v:rotationz(-5);
							v:x(SCREEN_CENTER_X+multi*640-50);
							v:y(SCREEN_CENTER_Y-40);
							v:bounceend(240/112/8);
							v:rotationz(0);
							v:x(SCREEN_CENTER_X+multi*640);
							v:y(SCREEN_CENTER_Y);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 152 and fgcurcommand == 7 or beat >= 168 and fgcurcommand == 11 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 2 then
							v:linear(240/112/12);
							v:rotationz(-5);
							v:x(SCREEN_CENTER_X+multi*640-50);
							v:y(SCREEN_CENTER_Y-70);
							v:sleep(240/112/12*2);
							v:linear(240/112/12);
							v:rotationz(-10);
							v:x(SCREEN_CENTER_X+multi*640-100);
							v:y(SCREEN_CENTER_Y-140);
							v:sleep(240/112/12*3);
							v:linear(240/112/12);
							v:rotationz(-15);
							v:x(SCREEN_CENTER_X+multi*640-150);
							v:y(SCREEN_CENTER_Y-210);
							v:sleep(240/112/12);
							v:linear(240/112/12);
							v:rotationz(-20);
							v:x(SCREEN_CENTER_X+multi*640-200);
							v:y(SCREEN_CENTER_Y-280);
						else
							v:sleep(240/112/8);
							v:linear(240/112/12);
							v:rotationz(5);
							v:x(SCREEN_CENTER_X+multi*640+50);
							v:y(SCREEN_CENTER_Y-40);
							v:sleep(240/112/12*3);
							v:linear(240/112/12);
							v:rotationz(10);
							v:x(SCREEN_CENTER_X+multi*640+100);
							v:y(SCREEN_CENTER_Y-80);
							v:sleep(240/112/12);
							v:linear(240/112/12);
							v:rotationz(15);
							v:x(SCREEN_CENTER_X+multi*640+150);
							v:y(SCREEN_CENTER_Y-120);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 158 and fgcurcommand == 8 or beat >= 174 and fgcurcommand == 12 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						if i == 2 then
							v:bounceend(240/112/8);
							v:rotationz(-15);
							v:x(SCREEN_CENTER_X+multi*640-150);
							v:y(SCREEN_CENTER_Y-210);
							v:bounceend(240/112/8);
							v:rotationz(-10);
							v:x(SCREEN_CENTER_X+multi*640-100);
							v:y(SCREEN_CENTER_Y-140);
							v:bounceend(240/112/8);
							v:rotationz(-5);
							v:x(SCREEN_CENTER_X+multi*640-50);
							v:y(SCREEN_CENTER_Y-70);
							v:bounceend(240/112/8);
							v:rotationz(0);
							v:x(SCREEN_CENTER_X+multi*640);
							v:y(SCREEN_CENTER_Y);
						else
							v:bounceend(240/112/8);
							v:rotationz(11.25);
							v:x(SCREEN_CENTER_X+multi*640+112.5);
							v:y(SCREEN_CENTER_Y-90);
							v:bounceend(240/112/8);
							v:rotationz(7.5);
							v:x(SCREEN_CENTER_X+multi*640+75);
							v:y(SCREEN_CENTER_Y-60);
							v:bounceend(240/112/8);
							v:rotationz(3.75);
							v:x(SCREEN_CENTER_X+multi*640+37.5);
							v:y(SCREEN_CENTER_Y-30);
							v:bounceend(240/112/8);
							v:rotationz(0);
							v:x(SCREEN_CENTER_X+multi*640);
							v:y(SCREEN_CENTER_Y);
						end
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 176 and fgcurcommand == 13 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+multi*320);
						v:GetChild('Judgment'):x(multi*-160);
						v:GetChild('Combo'):x(multi*-160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 208 and fgcurcommand == 14 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:accelerate(240/112);
						v:zoomx(0);
						v:zoomy(0);
						v:y(640*-multi);
						v:y(480);
						v:rotationz(360*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 32 and beat < 64 or beat >= 112 and beat < 128 or beat >= 132 and beat < 144 then
				for i,v in pairs(prefix_plr) do
					if v then
						if math.mod(beat,8) >= 0 and math.mod(beat,8) < 4 then
							if i == 1 then
								if math.mod(beat,4) >= 0.5 and math.mod(beat,4) < 2 then
									if math.mod(beat,4) >= 1 and math.mod(beat,4) < 1.5 then
										v:vibrate();
										v:effectmagnitude(0,200,0);
									else
										v:vibrate();
										v:effectmagnitude(0,100,0);
									end
								else
									v:vibrate();
									v:effectmagnitude(0,0,0);
								end
							end
						else
							if i == 2 then
								if math.mod(beat,4) >= 0.5 and math.mod(beat,4) < 2 then
									if math.mod(beat,4) >= 1 and math.mod(beat,4) < 1.5 then
										v:vibrate();
										v:effectmagnitude(0,200,0);
									else
										v:vibrate();
										v:effectmagnitude(0,100,0);
									end
								else
									v:vibrate();
									v:effectmagnitude(0,0,0);
								end
							end
						end
					end
				end
			end
			
			if beat >= 129 and beat < 131 then
				for i,v in pairs(prefix_plr) do
					if v then
						if math.mod(beat,8) >= 0 and math.mod(beat,8) < 4 then
							if i == 1 then
								if math.mod(beat,4) >= 1 and math.mod(beat,4) < 2 then
									if math.mod(beat,4) >= 1 and math.mod(beat,4) < 1.5 then
										v:vibrate();
										v:effectmagnitude(0,200,0);
									else
										v:vibrate();
										v:effectmagnitude(0,100,0);
									end
								else
									v:vibrate();
									v:effectmagnitude(0,0,0);
								end
							end
						end
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.524 - 0.002) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		WubADubDubP1MessageCommand="%function(self)
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 1 then
						v:decelerate(240/112/16);
						v:zoomx(0.5);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(0.625);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(0.75);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(0.875);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(1);
					end
				end
			end
		end"
		WubADubDubP2MessageCommand="%function(self)
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 2 then
						v:decelerate(240/112/16);
						v:zoomx(0.5);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(0.625);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(0.75);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(0.875);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:zoomx(1);
					end
				end
			end
		end"
		Wub2WubHarderP1MessageCommand="%function(self)
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 1 then
						v:decelerate(240/112/16);
						v:skewx(1);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(0.75);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(0.5);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(0.25);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(0);
					end
				end
			end
		end"
		Wub2WubHarderP2MessageCommand="%function(self)
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 2 then
						v:decelerate(240/112/16);
						v:skewx(-1);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(-0.75);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(-0.5);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(-0.25);
						v:sleep(240/112/16);
						v:decelerate(240/112/16);
						v:skewx(0);
					end
				end
			end
		end"
	/>
	
</children></ActorFrame>