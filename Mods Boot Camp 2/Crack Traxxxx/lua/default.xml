<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,116.14"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				prefix_inc = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{9.610,'Vib1'},

					{10.701,'TripleKick'},
					{12.883,'TripleKick'},

					{14.792,'PianoTrill'},

					{18.883,'Vib2'},
					{27.883,'Vib2'},
					
					{32.247,'InvertTeleport'},

					{35.519,'Vib3'},

					{36.883,'ChewItLikeThis'},
					{37.701,'Vib2'},
					{38.247,'Vib4'},

					{41.247,'ChewItLikeThis'},
					{42.065,'Vib2'},
					{42.474,'Vib4'},

					{45.610,'ChewItLikeThis'},
					{46.428,'Vib2'},
					{46.837,'Vib4'},

					{49.974,'ChewItLikeThis'},
					{50.792,'Vib2'},
					{51.201,'Vib4'},

					{66.883,'MiniBounce1'},
					{75.610,'MiniBounce2'},

					{79.428,'Vib5'},
					{100.292,'Vib6'},

					{102.065,'BeepOn'},
					{102.065+240/220/4,'BeepOff'},

					{105.337,'Vib3'},

					{106.701,'TripleKick'},
					{108.882,'TripleKick'},

					{110.791,'PianoTrill'},
				};
				
				
				prefix_mods = {
				
				{0,200,'1.75x,-999999% Cover,*10000 No Beat,*10000 -30% SuddenOffset','end'},

				{0,0.474,'*10000 Dark','end'},
				{0.201,0.474,'*10000 800% Tipsy','end'},
				{0.474,240/220/8*11+240/220*7,'*0.3334 No Dark,*4.6667 Tipsy','len'},
				{9.610,240/220,'*1.8334 No Tipsy','len'},

				{6.337,240/220/8*3,'*3.6667 50% Flip,*3.6667 50% Stealth,*29.3334 -400% Mini','len'},
				{6.747,240/220*3+240/220/8*3,'*3.6667 Flip,*3.6667 No Stealth,*29.3334 No Mini','len'},

				{10.428,240/220/4,'*7.3334 No Flip','len'},
				
				{11.792,240/220/4,'*4 100.01% Reverse,*2 -50% Split,*2 -50% Cross,*2 -50% Alternate','len'},
				{11.792+240/220/4*1,240/220/4,'*4 100.01% Reverse,*2 -100% Split,*2 No Cross,*2 No Alternate','len'},
				{11.792+240/220/4*2,240/220/4,'*4 100.01% Reverse,*2 -50% Split,*2 50% Cross,*2 -50% Alternate','len'},
				{11.792+240/220/4*3,13.974,'*4 100.01% Reverse,*2 No Split,*2 No Cross,*2 No Alternate','end'},
				{13.974,240/220/4,'*4 No Reverse,*2 50% Split,*2 50% Cross,*2 50% Alternate','len'},
				{13.974+240/220/4*1,240/220/4,'*4 No Reverse,*2 Split,*2 No Cross,*2 No Alternate','len'},
				{13.974+240/220/4*2,240/220/4,'*4 No Reverse,*2 50% Split,*2 -50% Cross,*2 50% Alternate','len'},
				{13.974+240/220/4*3,13.974,'*4 No Reverse,*2 No Split,*2 No Cross,*2 No Alternate','len'},
				{11.792+96,240/220/4,'*4 100.01% Reverse,*2 -50% Split,*2 -50% Cross,*2 -50% Alternate','len'},
				{11.792+96+240/220/4*1,240/220/4,'*4 100.01% Reverse,*2 -100% Split,*2 No Cross,*2 No Alternate','len'},
				{11.792+96+240/220/4*2,240/220/4,'*4 100.01% Reverse,*2 -50% Split,*2 50% Cross,*2 -50% Alternate','len'},
				{11.792+96+240/220/4*3,13.974+96,'*4 100.01% Reverse,*2 No Split,*2 No Cross,*2 No Alternate','end'},
				{13.974+96,240/220/4,'*4 No Reverse,*2 50% Split,*2 50% Cross,*2 50% Alternate','len'},
				{13.974+96+240/220/4*1,240/220/4,'*4 No Reverse,*2 Split,*2 No Cross,*2 No Alternate','len'},
				{13.974+96+240/220/4*2,240/220/4,'*4 No Reverse,*2 50% Split,*2 -50% Cross,*2 50% Alternate','len'},
				{13.974+96+240/220/4*3,13.974,'*4 No Reverse,*2 No Split,*2 No Cross,*2 No Alternate','len'},

				{15.065,240/220*2,'*0.4584 Tornado','len'},
				{17.247,240/220,'*0.9167 No Tornado','len'},
				{17.247,240/220/4*7,'*0.825 90% Stealth','len'},

				{17.247,240/220/16*3,'*4.8889 Distant','len'},
				{17.247+240/220/16*3,240/220/16*3,'*4.8889 No Distant','len'},
				{17.247+240/220/16*6,240/220/16*3,'*4.8889 Distant','len'},
				{17.247+240/220/16*9,240/220/16*3,'*4.8889 No Distant','len'},
				{17.247+240/220/16*12,240/220/8,'*7.3334 Distant','len'},
				{17.247+240/220/16*14,240/220/8,'*7.3334 No Distant','len'},
				{17.247+240/220/16*16,240/220/8,'*7.3334 Distant','len'},
				{17.247+240/220/16*18,240/220/8,'*7.3334 No Distant','len'},

				{14.928,240/220/4,'*10000 Beat','len'},
				{14.928+240/220/2,240/220/4,'*10000 -500% Beat','len'},
				{14.928+240/220/2*2,240/220/4,'*10000 Beat','len'},
				{14.928+240/220/2*3,240/220/4,'*10000 -500% Beat','len'},

				{19.156,240/220/8,'*20 9999x','len'},
				{19.156+240/220/8,240/220/8,'*20 1.75x','len'},

				{23.247,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				{25.974,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},

				{23.247,240/220/4,'*3.6667 50% Flip,*3.6667 50% Reverse','len'},
				{23.247+240/220/4,240/220/4+240/220*2,'*3.6667 No Flip,*3.6667 100.01% Reverse','len'},

				{25.974,240/220/8,'*7.3334 100.01% Reverse,*3.6667 -50% Split,*3.6667 50% Cross,*3.6667 -50% Alternate','len'},
				{25.974+240/220/8,240/220/8,'*7.3334 100.01% Reverse,*3.6667 No Split,*3.6667 No Cross,*3.6667 No Alternate','len'},
				{25.974+240/220/8*2,240/220/8,'*7.3334 100.01% Reverse,*7.3334 Split','len'},
				{25.974+240/220/8*3,240/220/8,'*7.3334 100.01% Reverse,*7.3334 No Split','len'},
				{25.974+240/220/8*4,240/220/8,'*7.3334 100.01% Reverse,*3.6667 -50% Split,*3.6667 -50% Cross,*3.6667 -50% Alternate','len'},
				{25.974+240/220/8*5,240/220/8,'*7.3334 100.01% Reverse,*3.6667 No Split,*3.6667 No Cross,*3.6667 No Alternate','len'},
				{25.974+240/220/8*6,240/220/8,'*7.3334 No Reverse','len'},
				{25.974+240/220/8*7,240/220/8,'*7.3334 100.01% Reverse','len'},

				{27.065,240/220/4,'*3.6667 100.01% Reverse','len'},
				{27.065+240/220/4,240/220/4,'*3.6667 No Reverse','len'},

				{27.610,240/220/8,'*20 9999x','len'},
				{27.610+240/220/8,240/220/8,'*20 1.75x','len'},
				
				{28.156,999,'*8 No Mini','end'},
				{28.292,0.050,'*10000 200% Mini','len'},
				{28.292+240/220/4*1,0.050,'*10000 200% Mini','len'},
				{28.292+240/220/4*2,0.050,'*10000 200% Mini','len'},
				{28.292+240/220/4*3,0.050,'*10000 200% Mini','len'},
				{28.292+240/220/4*4,0.050,'*10000 200% Mini','len'},
				{28.292+240/220/4*5,0.050,'*10000 200% Mini','len'},
				{29.792,0.050,'*10000 200% Mini','len'},
				{30.474,0.050,'*10000 200% Mini','len'},
				{30.474+240/220/4*1,0.050,'*10000 200% Mini','len'},
				{30.474+240/220/4*2,0.050,'*10000 200% Mini','len'},
				{30.474+240/220/4*3,0.050,'*10000 200% Mini','len'},
				{30.474+240/220/4*4,0.050,'*10000 200% Mini','len'},
				{30.474+240/220/4*5,0.050,'*10000 200% Mini','len'},
				{31.974,0.050,'*10000 200% Mini','len'},
				{32.656,0.050,'*10000 200% Mini','len'},
				{32.928,0.050,'*10000 200% Mini','len'},
				{33.201,0.050,'*10000 200% Mini','len'},
				{33.747,0.050,'*10000 200% Mini','len'},
				{34.019,0.050,'*10000 200% Mini','len'},
				{34.156,0.050,'*10000 200% Mini','len'},

				{30.065,240/220/8,'*7.334 Brake','len'},
				{30.065+240/220/8,240/220/8,'*7.334 No Brake','len'},

				{32.519,33.000,'*10000 No Invert','end'},
				
				{33.337,34.000,'*2 No Flip,*2 No Reverse','end'},
				{33.337,0.050,'*10000 50% Flip,*10000 50% Reverse','len'},
				
				{34.428,240/220/8,'*32 -500% Centered,*8 0x,*16 -500% Mini,*1.6 50% Flip','len'},
				{34.565,240/220/4,'*32 No Centered,*10 2x,*16 No Mini,*1.6 No Flip,*8 Dark,*8 Stealth','len'},
				
				{34.701,35.792,'*4 1.75x,*10000 No Stealth,*10000 100.01% Reverse','end'},

				{34.701,240/220/8,'*14.6667 Invert','len'},
				{34.701+240/220/8,240/220/8,'*14.6667 Flip,*29.3334 -100% Invert','len'},
				{34.701+240/220/8*2,240/220/8,'*14.6667 Flip,*14.6667 No Invert','len'},
				{34.701+240/220/8*3,240/220/8,'*14.6667 No Flip','len'},

				{35.247,240/220/4,'*3.6667 Tornado','len'},
				
				{35.792,240/220/4,'*4 No Reverse,*2 50% Split,*2 50% Cross,*2 50% Alternate','len'},
				{35.792+240/220/4*1,240/220/4,'*4 No Reverse,*2 Split,*2 No Cross,*2 No Alternate','len'},
				{35.792+240/220/4*2,240/220/4,'*4 No Reverse,*2 50% Split,*2 -50% Cross,*2 50% Alternate','len'},
				{35.792+240/220/4*3,13.974,'*4 No Reverse,*2 No Split,*2 No Cross,*2 No Alternate','len'},

				{35.792,240/220*16,'*10000 30% SuddenOffset,*10000 30% HiddenOffset','len'},

				{39.065,240/220/4*7,'*36.6667 500% Invert,*8 0.5x','len'},
				{40.974,240/220/4,'*36.6667 No Invert,*8 1.75x,*7.3334 No Hidden,*7.3334 No Sudden','len'},

				{39.337,240/220/4*6,'*7.3334 Hidden,*7.3334 No Sudden','len',2},
				{39.474,240/220/8*11,'*7.3334 Sudden,*7.3334 No Hidden','len',1},

				{39.610,240/220/8*3,'*7.3334 Hidden,*7.3334 No Sudden','len',1},
				{39.610,240/220/8*3,'*7.3334 Sudden,*7.3334 No Hidden','len',2},

				{40.292,240/220/4,'*7.3334 Hidden,*7.3334 No Sudden','len',1},
				{40.292,240/220/4,'*7.3334 Sudden,*7.3334 No Hidden','len',2},

				{40.701,240/220/8,'*7.3334 Hidden,*7.3334 No Sudden','len',1},
				{40.701,240/220/8,'*7.3334 Sudden,*7.3334 No Hidden','len',2},

				{240/220*8+39.065,240/220/4*7,'*36.6667 500% Invert,*8 0.5x','len'},
				{240/220*8+40.974,240/220/4,'*36.6667 No Invert,*8 1.75x,*7.3334 No Hidden,*7.3334 No Sudden','len'},

				{240/220*8+39.337,240/220/4*6,'*7.3334 Hidden,*7.3334 No Sudden','len',2},
				{240/220*8+39.474,240/220/8*11,'*7.3334 Sudden,*7.3334 No Hidden','len',1},

				{240/220*8+39.610,240/220/8*3,'*7.3334 Hidden,*7.3334 No Sudden','len',1},
				{240/220*8+39.610,240/220/8*3,'*7.3334 Sudden,*7.3334 No Hidden','len',2},

				{240/220*8+40.292,240/220/4,'*7.3334 Hidden,*7.3334 No Sudden','len',1},
				{240/220*8+40.292,240/220/4,'*7.3334 Sudden,*7.3334 No Hidden','len',2},

				{240/220*8+40.701,240/220/8,'*7.3334 Hidden,*7.3334 No Sudden','len',1},
				{240/220*8+40.701,240/220/8,'*7.3334 Sudden,*7.3334 No Hidden','len',2},

				{45.201,240/220/4,'*10000 1000% Beat','len'},

				{43.428,240/220,'*10000 157% Dizzy','len'},
				{44.519,240/220/4,'*10000 No Dizzy','len'},

				{52.156,240/220/8*3,'*36.6667 500% Invert','len'},
				{52.156+240/220/8*3,240/220/4,'*36.6667 No Invert','len'},
				{52.156+240/220/8*5,240/220/4,'*36.6667 500% Invert','len'},
				{52.156+240/220/8*7,240/220/4,'*36.6667 No Invert','len'},

				{51.883,240/220/16,'*29.3334 200% Drunk','len'},
				{51.883+240/220/16,240/220/16,'*58.6667 -200% Drunk','len'},
				{51.883+240/220/16*2,240/220/16,'*58.6667 200% Drunk','len'},
				{51.883+240/220/16*3,240/220/16,'*58.6667 -200% Drunk','len'},
				{51.883+240/220/16*4,240/220/8,'*29.3334 No Drunk','len'},

				{53.383,240/220/8,'*8 100.01% Reverse,*8 -100% Split','len'},
				{53.383+240/220/8,240/220/8,'*8 100.01% Reverse,*8 No Split','len'},
				{53.383+240/220/8*2,240/220/8,'*8 No Reverse,*4 50% Split,*4 50% Cross,*4 50% Alternate','len'},
				{53.383+240/220/8*3,240/220/8,'*8 No Reverse,*4 Split,*4 No Cross,*4 No Alternate','len'},
				{53.383+240/220/8*4,240/220/8,'*8 No Reverse,*4 50% Split,*4 -50% Cross,*4 50% Alternate','len'},
				{53.383+240/220/8*5,240/220/8,'*8 No Reverse,*4 No Split,*4 No Cross,*4 No Alternate','len'},

				{54.337,240/220*4-240/220/2,'*0.1375 50% Flip,*1.375 -500% Mini,*0.275 Stealth,*0.275 Dark,1x','len'},
				{58.156,240/220/2,'*10000 Dark,*10000 Stealth,*10000 No Flip,*10000 No Invert,*10000 No Mini','len'},

				{58.156,240/220/16,'*10000 1.75x,*10000 50% Stealth,*10000 Invert','len'},
				{58.156+240/220/8,240/220/32,'*10000 1.75x,*10000 50% Stealth,*10000 Flip','len'},
				{58.156+240/220/8*1.5,240/220/32,'*10000 1.75x,*10000 50% Stealth,*10000 Flip,*10000 -100% Invert','len'},
				{58.156+240/220/8*2,240/220/16,'*10000 1.75x,*10000 50% Stealth,*10000 Invert','len'},
				{58.156+240/220/8*3,240/220/8,'*10000 1.75x,*10000 No Stealth','len'},

				{58.701,240/220*2,'*0.25 50% Flip,*2.5 -500% Mini,*0.5 90% Stealth,*0.5 Dark,1x','len'},
				{58.701+240/220*2,240/220,'*0.5 No Flip,*5 No Mini,No Stealth,No Dark,*2 1.75x','len'},
				
				{61.974,240/220/8,'*2.6 25% Distant','len'},
				{61.974+240/220/8*1,240/220/8,'*2.6 25% Mini,*2.6 Overhead','len'},
				{61.974+240/220/8*2,240/220/8,'*2.6 25% Mini,*2.6 25% Distant','len'},
				{61.974+240/220/8*3,240/220/8,'*2.6 50% Mini,*2.6 Overhead','len'},
				{61.974+240/220/8*4,240/220/8,'*2.6 50% Mini,*2.6 25% Distant','len'},
				{61.974+240/220/8*5,240/220/8,'*2.6 75% Mini,*2.6 Overhead','len'},
				{61.974+240/220/8*6,240/220/8,'*2.6 75% Mini,*2.6 25% Distant','len'},
				{61.974+240/220/8*7,240/220/8,'*2.6 Mini,*2.6 Overhead','len'},

				{63.065,76.156,'*0.9167 Mini','end'},

				{62.792,79.428,'*7.3334 100.01% Reverse','end',2},
				{62.792,79.428,'*7.3334 Sudden','end'},

				{71.519,76.156,'*10000 Split','end',1},
				{71.519,76.156,'*10000 -100% Split','end',2},

				{76.156,0.050,'*10000 No Split','len'},

				{70.701,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},
				{70.701,240/220,'*2 0x','len'},
				{71.519-240/220/8,240/220/4,'*10000 1600% Beat','len'},
				{71.519,240/220/4,'*64 1.75x','len'},

				{71.792,79.428,'*7.3334 No Tornado','end'},

				{71.792,240/220/8,'*7.3334 Tornado','len',1},
				{71.792+240/220/2,240/220/8,'*7.3334 Tornado','len',1},
				{71.792+240/220/2*2,240/220/8,'*7.3334 Tornado','len',1},
				{71.792+240/220/2*3,240/220/8,'*7.3334 Tornado','len',1},
				{71.792+240/220/2*4,240/220/8,'*7.3334 Tornado','len',1},
				{71.792+240/220/2*5,240/220/8,'*7.3334 Tornado','len',1},
				{71.792+240/220/2*6,240/220/8,'*7.3334 Tornado','len',1},

				{72.065,240/220/8,'*7.3334 Tornado','len',2},
				{72.065+240/220/2,240/220/8,'*7.3334 Tornado','len',2},
				{72.065+240/220/2*2,240/220/8,'*7.3334 Tornado','len',2},
				{72.065+240/220/2*3,240/220/8,'*7.3334 Tornado','len',2},
				{72.065+240/220/2*4,240/220/8,'*7.3334 Tornado','len',2},
				{72.065+240/220/2*5,240/220/8,'*7.3334 Tornado','len',2},
				{72.065+240/220/2*6,240/220/8,'*7.3334 Tornado','len',2},

				{76.156,0.050,'*10000 No Drunk,*10000 No Tipsy','len'},

				{76.156,240/220/8,'*73.3334 1000% Bumpy,*7.3334 Brake','len'},
				{76.156+240/220/8,240/220/4,'*73.3334 No Bumpy,*7.3334 No Brake','len'},

				{76.565,240/220/8,'*73.3334 1000% Bumpy,*7.3334 Brake','len'},
				{76.565+240/220/8,240/220/4,'*73.3334 No Bumpy,*7.3334 No Brake','len'},

				{76.974,240/220/8,'*73.3334 1000% Bumpy,*7.3334 Brake','len'},
				{76.974+240/220/8,240/220/4,'*73.3334 No Bumpy,*7.3334 No Brake','len'},

				{77.383,240/220/8,'*73.3334 1000% Bumpy,*7.3334 Brake','len'},
				{77.383+240/220/8,240/220/4,'*73.3334 No Bumpy,*7.3334 No Brake','len'},

				{77.656,240/220/8,'*73.3334 1000% Bumpy,*7.3334 Brake','len'},
				{77.656+240/220/8,240/220/4,'*73.3334 No Bumpy,*7.3334 No Brake','len'},

				{77.792,240/220*4,'*1.8334 No Reverse,*1.8334 No Sudden','len'},

				{78.474,240/220/16,'*73.3334 1000% Drunk','len'},
				{78.474+240/220/16,240/220/8,'*73.3334 No Drunk','len'},
				{78.474+240/220/16*4,240/220/16,'*73.3334 -1000% Drunk','len'},
				{78.474+240/220/16*5,240/220/8,'*73.3334 No Drunk','len'},
				{78.474+240/220/16*8,240/220/16,'*73.3334 1000% Drunk','len'},
				{78.474+240/220/16*9,240/220/8,'*73.3334 No Drunk','len'},
				{78.474+240/220/16*12,240/220/16,'*73.3334 -1000% Drunk','len'},
				{78.474+240/220/16*13,240/220/8,'*73.3334 No Drunk','len'},

				{80.519,240/220*4-240/220/2,'*0.1375 50% Flip,*1.375 -500% Mini,*0.275 Stealth,*0.275 Dark,1x','len'},
				{84.337,240/220/2,'*10000 No Flip,*10000 No Invert,*10000 No Mini,*10000 1.75x','len'},

				{84.337,240/220/2,'*1.8334 No Stealth,*1.8334 No Dark','len'},

				{84.883,240/220,'*0.25 50% Flip,*2.5 -500% Mini,*0.5 90% Stealth,*0.5 Dark,1x','len'},
				{84.883+240/220,240/220/4,'*2 No Flip,*20 No Mini,*4 No Stealth,*4 No Dark,*8 1.75x','len'},

				{86.928,240/220/4,'*10000 1600% Beat','len'},
				{87.474,240/220/4,'*10000 -1600% Beat','len'},
				{88.019,240/220/4,'*10000 1600% Beat','len'},

				{88.428,240/220/8,'*14.6667 Split','len'},
				{88.428+240/220/8,240/220/8,'*14.6667 100.01% Reverse,*14.6667 No Split','len'},
				{88.428+240/220/4,240/220/8,'*14.6667 No Reverse','len'},

				{88.974,240/220/8,'*7.3334 Tipsy','len'},
				{88.974+240/220/8,240/220/8,'*7.3334 No Tipsy','len'},
				
				{89.247,91.428,'*8 No Mini','end'},
				{89.383,0.050,'*10000 200% Mini','len'},
				{89.383+240/220/4*1,0.050,'*10000 200% Mini','len'},
				{89.383+240/220/4*2,0.050,'*10000 200% Mini','len'},
				{89.383+240/220/4*3,0.050,'*10000 200% Mini','len'},
				{89.383+240/220/4*4,0.050,'*10000 200% Mini','len'},
				{89.383+240/220/4*5,0.050,'*10000 200% Mini','len'},
				{90.883,0.050,'*10000 200% Mini','len'},

				{91.156,240/220/8,'*7.334 Brake','len'},
				{91.156+240/220/8,240/220/8,'*7.334 No Brake','len'},

				{91.974,240/220/8,'*14.6667 Invert','len'},
				{91.974+240/220/8,240/220/8,'*14.6667 No Invert','len'},
				{91.974+240/220/8*2,240/220/8,'*14.6667 Invert','len'},
				{91.974+240/220/8*3,240/220/8,'*14.6667 No Invert','len'},

				{93.065,240/220/8,'*14.6667 Flip,*14.6667 -100% Invert','len'},
				{93.065+240/220/8,240/220/8,'*14.6667 Flip,*14.6667 No Invert','len'},
				{93.065+240/220/8*2,240/220/8,'*14.6667 No Flip','len'},
				
				{93.610,95.792,'*8 No Mini','end'},
				{93.747,0.050,'*10000 200% Mini','len'},
				{93.747+240/220/4*1,0.050,'*10000 200% Mini','len'},
				{93.747+240/220/4*2,0.050,'*10000 200% Mini','len'},
				{93.747+240/220/4*3,0.050,'*10000 200% Mini','len'},
				{93.747+240/220/4*4,0.050,'*10000 200% Mini','len'},
				{93.747+240/220/4*5,0.050,'*10000 200% Mini','len'},
				{95.247,0.050,'*10000 200% Mini','len'},

				{95.519,240/220/8,'*7.334 Brake','len'},
				{95.519+240/220/8,240/220/8,'*7.334 No Brake','len'},

				{95.792,240/220/8,'*36.6667 500% Invert','len'},
				{95.792+240/220/8,240/220/8,'*36.6667 No Invert','len'},
				{95.792+240/220/8*2,240/220/4*6,'*36.6667 500% Invert','len'},

				{97.701,240/220/4,'*36.6667 No Invert','len'},
				
				{97.974,100.156,'*8 No Mini','end'},
				{98.110,0.050,'*10000 200% Mini','len'},
				{98.110+240/220/4*1,0.050,'*10000 200% Mini','len'},
				{98.110+240/220/4*2,0.050,'*10000 200% Mini','len'},
				{98.110+240/220/4*3,0.050,'*10000 200% Mini','len'},
				{98.110+240/220/4*4,0.050,'*10000 200% Mini','len'},
				{98.110+240/220/4*5,0.050,'*10000 200% Mini','len'},
				{99.610,0.050,'*10000 200% Mini','len'},

				{99.883,240/220/8,'*7.334 Brake','len'},
				{99.883+240/220/8,240/220/8,'*7.334 No Brake','len'},

				{100.292,240/220,'*1.8334 150% Mini,*0.1834 -15% Flip,*1.2223 Drunk','len'},
				{101.383,240/220/8*5,'*2.2 No Mini,*0.22 No Flip,*1.4667 No Drunk','len'},

				{102.065,240/220/4,'*10000 250% Tornado,*10000 0.5x,*10000 200% Bumpy','len'},
				{102.065+240/220/4,240/220/4,'*10000 No Tornado,*10000 1.75x,*10000 No Bumpy','len'},
				
				{102.337,104.519,'*8 No Mini','end'},
				{102.474,0.050,'*10000 200% Mini','len'},
				{102.474+240/220/4*1,0.050,'*10000 200% Mini','len'},
				{102.474+240/220/4*2,0.050,'*10000 200% Mini','len'},
				{102.474+240/220/4*3,0.050,'*10000 200% Mini','len'},
				{102.474+240/220/4*4,0.050,'*10000 200% Mini','len'},
				{102.474+240/220/4*5,0.050,'*10000 200% Mini','len'},
				{103.837,0.050,'*10000 200% Mini','len'},

				{103.701,240/220/8,'*14.6667 200% Drunk','len'},
				{103.701+240/220/8,240/220/4,'*14.6667 No Drunk','len'},

				{104.246,240/220/8,'*14.6667 200% Tipsy','len'},
				{104.246+240/220/8,240/220/4,'*14.6667 No Tipsy','len'},

				{104.519,240/220/8,'*14.6667 Invert','len'},
				{104.519+240/220/8,240/220/8,'*14.6667 Flip,*29.3334 -100% Invert','len'},
				{104.519+240/220/8*2,240/220/8,'*14.6667 Flip,*14.6667 No Invert','len'},
				{104.519+240/220/8*3,240/220/8,'*14.6667 No Flip','len'},

				{105.064,240/220/4,'*3.6667 Tornado','len'},

				{105.610,240/220/4,'*4 Split','len'},
				{105.610+240/220/4,240/220/4,'*4 100.01% Reverse,*4 No Split','len'},
				{105.610+240/220/2,240/220/4,'*4 No Reverse','len'},

				{111.064,240/220*2,'*0.4584 Tornado','len'},
				{113.246,240/220,'*0.9167 No Tornado','len'},
				{113.246,240/220/4*7,'*0.825 90% Stealth','len'},

				{113.246,240/220/16*3,'*4.8889 Distant','len'},
				{113.246+240/220/16*3,240/220/16*3,'*4.8889 No Distant','len'},
				{113.246+240/220/16*6,240/220/16*3,'*4.8889 Distant','len'},
				{113.246+240/220/16*9,240/220/16*3,'*4.8889 No Distant','len'},
				{113.246+240/220/16*12,240/220/8,'*7.3334 Distant','len'},
				{113.246+240/220/16*14,240/220/8,'*7.3334 No Distant','len'},
				{113.246+240/220/16*16,240/220/8,'*7.3334 Distant','len'},
				{113.246+240/220/16*18,240/220/8,'*7.3334 No Distant','len'},

				{110.928,240/220/4,'*10000 Beat','len'},
				{110.928+240/220/2,240/220/4,'*10000 -500% Beat','len'},
				{110.928+240/220/2*2,240/220/4,'*10000 Beat','len'},
				{110.928+240/220/2*3,240/220/4,'*10000 -500% Beat','len'},

				{115.155,240/220/8,'*7.3334 Tipsy','len'},
				{115.155+240/220/8,240/220/8,'*7.3334 No Tipsy','len'},

				}
				
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			prefix_inc = prefix_inc + 1;
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:rotationx(0);							
						v:rotationy(0);
						v:rotationz(0);
						v:x(SCREEN_CENTER_X+160*multi);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
						v:zoomz(1);
						v:GetChild('Judgment'):stopeffect();
						
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						local d = SCREEN_CENTER_X-160
						if i == 2 then d = SCREEN_CENTER_X+160 end
						v:x(d);
						
					end
				end
			end

			if beat >= 100 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/220/4);
						v:rotationz(-180);
						v:linear(240/220/4);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 144 and fgcurcommand == 2 or beat >= 176 and fgcurcommand == 5 or beat >= 192 and fgcurcommand == 7 or beat >= 194.5 and fgcurcommand == 9 or beat >= 352 and fgcurcommand == 17 or beat >= 353 and fgcurcommand == 19 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/220/8);
						v:x(SCREEN_CENTER_X+320*multi);
						v:GetChild('Judgment'):x(multi*-160);
						v:GetChild('Combo'):x(multi*-160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 151 and fgcurcommand == 3 or beat >= 183 and fgcurcommand == 6 or beat >= 193.5 and fgcurcommand == 8 or beat >= 195.5 and fgcurcommand == 10 or beat >= 352.5 and fgcurcommand == 18  or beat >= 359 and fgcurcommand == 22 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/220/8);
						v:x(SCREEN_CENTER_X+160*multi);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 160 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/220);
						v:rotationz(360);
						v:linear(240/220/4);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 214 and fgcurcommand == 11 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(multi*160);
						v:GetChild('Combo'):x(multi*160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 310 and fgcurcommand == 12 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+160*multi);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 317 and fgcurcommand == 13 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:accelerate(240/220/2);
						v:y(SCREEN_CENTER_Y+400);
						v:rotationz(-20*multi);
						v:sleep(0);
						v:y(SCREEN_CENTER_Y+300);
						v:rotationz(-15*multi);
						v:sleep(240/220/16);
						v:y(SCREEN_CENTER_Y+200);
						v:rotationz(-10*multi);
						v:sleep(240/220/16);
						v:y(SCREEN_CENTER_Y+100);
						v:rotationz(-5*multi);
						v:sleep(240/220/16);
						v:y(SCREEN_CENTER_Y);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 321 and fgcurcommand == 14 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/220/4);
						v:rotationx(360);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 323 and fgcurcommand == 15 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/220/4);
						v:rotationy(360);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 336 and fgcurcommand == 16 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/220/16);
						v:rotationz(90);
						v:sleep(240/220/16);
						v:linear(240/220/16);
						v:rotationz(180);
						v:sleep(240/220/16);
						v:linear(240/220/16);
						v:rotationz(270);
						v:sleep(240/220/16);
						v:linear(240/220/16);
						v:rotationz(360);
						v:sleep(240/220/16*9);
						v:linear(240/220/16);
						v:rotationz(270);
						v:sleep(240/220/16);
						v:linear(240/220/16);
						v:rotationz(180);
						v:sleep(240/220/16);
						v:linear(240/220/16);
						v:rotationz(90);
						v:sleep(240/220/16);
						v:linear(240/220/16);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 354 and fgcurcommand == 20 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/220/8);
						if i == 1 then
							v:rotationz(15);
						end
						v:decelerate(240/220/8);
						if i == 2 then
							v:rotationz(15);
						end
						v:accelerate(240/220/8);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 356 and fgcurcommand == 21 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/220/8);
						v:skewx(0.5*multi);
						v:decelerate(240/220/8);
						v:skewx(-1*multi);
						v:decelerate(240/220/8);
						v:skewx(1*multi);
						v:decelerate(240/220/8);
						v:skewx(-0.5*multi);
						v:decelerate(240/220/8);
						v:skewx(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 36 and beat < 38.5 or beat >= 368.5 and beat < 375.5 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:vibrate();
						v:effectmagnitude(auxvar:getaux(),0,0);
					end
				end
			end

			if beat >= 70 and beat < 71.5 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:vibrate();
						v:effectmagnitude(0,auxvar:getaux(),0);
					end
				end
			end

			if beat >= 71.5 and beat < 85.5 or beat >= 87.5 and beat < 95.5 or beat >= 231.5 and beat < 259.5 or beat >= 263.5 and beat < 279.5 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..400*multi..'% Beat');
			end

			if beat >= 72 and beat < 86 or beat >= 88 and beat < 96 or beat >= 232 and beat < 260 or beat >= 264 and beat < 280 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..100*multi..'% Drunk');
				GAMESTATE:ApplyGameCommand('mod,*10000 '..100*multi..'% Tipsy');
			end

			if beat >= 40 and beat < 44.5 or beat >= 48 and beat < 52.5 or beat >= 392 and beat < 396.5 or beat >= 400 and beat < 404.5 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi..'% Brake');
			end

			if beat >= 55 and beat < 56.5 or beat >= 407 and beat < 408.5 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi..'% Drunk');
			end

			if beat >= 103 and beat < 104.5 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi*5 ..'% Tipsy');
			end
			
			if beat >= 119 and beat < 120 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi..'% Invert');
			end

			if beat >= 131 and beat < 132.5 or beat >= 387 and beat < 388.5 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi..'% Tornado');
			end

			if beat >= 139 and beat < 140.5 or beat >= 155 and beat < 156.5 or beat >= 171 and beat < 172.5 or beat >= 187 and beat < 188.5 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi*5 ..'% Bumpy');
			end
			
			if beat >= 140.5 and beat < 144 or beat >= 156.5 and beat < 160 or beat >= 172.5 and beat < 176 or beat >= 188.5 and beat < 192 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				for i,v in pairs(prefix_plr) do
					local multi2 = -1; if i == 2 then multi2 = 1; end
					if v then
						v:x((SCREEN_CENTER_X+160*multi2)+(math.cos(beat*math.pi)*auxvar:getaux())*multi);
						v:y((SCREEN_CENTER_Y)+(math.sin(beat*math.pi)*auxvar:getaux())*multi);
					end
				end
			end
			
			if beat >= 246 and beat < 248.5 or beat >= 278 and beat < 280.5 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..(100-auxvar:getaux())..'% Mini');
			end

			if beat >= 292 and beat < 296 then
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi..'% Tornado');
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (0.220 - 0.143) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		TripleKickMessageCommand="finishtweening;aux,0;decelerate,240/220/16*3;aux,100;accelerate,240/220/16*3;aux,0;decelerate,240/220/16*3;aux,100;accelerate,240/220/16*3;aux,0;decelerate,240/220/8;aux,100;accelerate,240/220/8;aux,0;"
		InvertTeleportMessageCommand="finishtweening;aux,0;linear,240/220/4;aux,500;linear,240/220/4;aux,0"
		MiniBounce1MessageCommand="finishtweening;aux,0;decelerate,240/220/8;aux,100;accelerate,240/220/8;aux,0;decelerate,240/220/8;aux,100;accelerate,240/220/8;aux,0;"
		MiniBounce2MessageCommand="finishtweening;aux,0;decelerate,240/220/8;aux,100;accelerate,240/220/8;aux,0;spring,240/220/4;aux,100;"
		Vib1MessageCommand="finishtweening;aux,0;linear,240/220/4;aux,100;linear,240/220/4;aux,0"
		Vib2MessageCommand="finishtweening;aux,0;linear,240/220/8;aux,100;linear,240/220/8;aux,0"
		Vib3MessageCommand="finishtweening;aux,100;linear,240/220/4;aux,0"
		Vib4MessageCommand="finishtweening;aux,0;linear,240/220/8*3;aux,80;linear,240/220/8*3;aux,0"
		Vib5MessageCommand="finishtweening;aux,0;decelerate,240/220/8;aux,250;accelerate,240/220/8*5;aux,0"
		Vib6MessageCommand="finishtweening;aux,0;linear,240/220/4*3;aux,125;sleep,0;aux,0;sleep,240/220/4;aux,125;accelerate,240/220/8*5;aux,0"
		PianoTrillMessageCommand="finishtweening;aux,500;linear,240/220/4;aux,0"
		ChewItLikeThisMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:linear(240/220/8);
					v:rotationz(45);
					v:zoomx(0.75);
					v:zoomy(0.75);
					v:linear(240/220/8);
					v:rotationz(-45);
					v:zoomx(0.5);
					v:zoomy(0.5);
					v:decelerate(240/220/4);
					v:rotationz(0);
					v:skewx(2);
					v:zoomx(1);
					v:zoomy(1);
					v:spring(240/220/4);
					v:skewx(0);
				end
			end
		end"
	/>

	<ActorFrame OnCommand="fov,20;hidden,1" BeepOnMessageCommand="hidden,0" BeepOffMessageCommand="hidden,1"><children>
		<Layer
			File="test"
			OnCommand="%function(self)
			self:zoomto(SCREEN_WIDTH,SCREEN_HEIGHT);
			self:x(SCREEN_CENTER_X);
			self:y(SCREEN_CENTER_Y);
			self:ztest(1);
			self:ztestmode('writeonfail'); end"			
		/>
	</children></ActorFrame>
	
</children></ActorFrame>