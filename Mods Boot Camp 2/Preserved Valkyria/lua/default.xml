<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,119.60"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{56.431,'SnareSnapSetup'},
					{57.249,'SnareSnapCW'},
					{57.794,'SnareSnapCCW'},
					{58.340,'SnareSnapCW'},
					{58.885,'SnareSnapCCW'},
					{240/220*2+57.249,'SnareSnapCW'},
					{240/220*2+57.794,'SnareSnapCCW'},
					{240/220*2+58.340,'SnareSnapCW'},
					{240/220*2+58.885,'SnareSnapCCW'},
					{240/220*4+57.249,'SnareSnapCW'},
					{240/220*4+57.794,'SnareSnapCCW'},
					{240/220*4+58.340,'SnareSnapCW'},
					{240/220*4+58.885,'SnareSnapCCW'},
					{63.521,'SnareSnapEnd'},
					
					{65.703,'Aspearance'},
					{66.112,'FuckAwayNow'},
					
					{67.885,'DownTheMiddle'},
					{67.885,'Bwing'},
					
					{70.067,'Stabbity'},
					
					{72.249,'PutItBack'},
					
					{74.431,'RunThrough1'},
					{75.521,'RunThrough2'},
					{76.612,'RunThrough3'},
					{77.703,'RunThrough4'},
					
					{80.976,'NowImMad'},
					{80.976,'ImSpinnin'},
					
					{82.612,'Charge'},
					{82.612,'Rumble'},
					
					{83.567,'Dodge'},
					
					{83.976,'Fire'},
					{83.976,'Recoil'},
					{83.976,'Oomph'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2x,-999999% Cover,*10000 No Beat','end'},
				
				{0,46.452,'1.75x','end'},
				
				{0,44.903,'*10000 100.01% Reverse','end',2},
				{0,44.903,'*10000 400% Sudden,*10000 -25% SuddenOffset','end'},
				{0,1.161,'*10000 200% Mini,*10000 -1000% Flip','end'},
				{1.161,240/155/4,'*5.1667 No Mini,*25.8334 No Flip','len'},
				
				{19.355,240/155,'*0.64584 50% Stealth','len'},
				
				{23.226,240/155*4,'*21.38 No Mini','len'},
				
				{60.000*240/155/4,0.050,'*10000 -100% Mini','len'},
				{60.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{60.500*240/155/4,0.050,'*10000 -100% Mini','len'},
				{60.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{61.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{61.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{62.000*240/155/4,0.050,'*10000 -100% Mini','len'},
				{62.500*240/155/4,0.050,'*10000 -100% Mini','len'},
				{62.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{63.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{63.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{64.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{64.500*240/155/4,0.050,'*10000 -100% Mini','len'},
				{64.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{65.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{65.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{66.000*240/155/4,0.050,'*10000 -100% Mini','len'},
				{66.500*240/155/4,0.050,'*10000 -100% Mini','len'},
				{66.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{67.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{67.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{68.000*240/155/4,0.050,'*10000 -100% Mini','len'},
				{68.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{68.500*240/155/4,0.050,'*10000 -100% Mini','len'},
				{68.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{69.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{69.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{70.000*240/155/4,0.050,'*10000 -100% Mini','len'},
				{70.500*240/155/4,0.050,'*10000 -100% Mini','len'},
				{70.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{71.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{71.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{72.000*240/155/4,0.050,'*10000 -100% Mini','len'},
				{72.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{72.500*240/155/4,0.050,'*10000 -100% Mini','len'},
				{72.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{73.250*240/155/4,0.050,'*10000 -100% Mini','len'},
				{73.750*240/155/4,0.050,'*10000 -100% Mini','len'},
				{74.333*240/155/4,0.050,'*10000 -100% Mini','len'},
				{74.667*240/155/4,0.050,'*10000 -100% Mini','len'},
				{75.000*240/155/4,0.050,'*10000 -100% Mini','len'},
				{75.333*240/155/4,0.050,'*10000 -100% Mini','len'},
				{75.667*240/155/4,0.050,'*10000 -100% Mini','len'},
				
				{44.903,240/155/4,'*10000 No Flip,*10000 No Invert,*10000 No Stealth','len'},
				
				{44.903,240/155/2,'*1.29167 No Reverse','len'},
				
				{44.903,48.249,'*1.1955 No Sudden','end'},
				
				{46.452,48.249,'*0.5565 Distant','end'},
				
				{56.976,240/155/4,'*10000 No Flip,*10000 No Invert','len'},
				
				{56.431,64.612,'*1.8334 Dark,Blind,*3.6667 200% Wave','end'},
				{64.612,240/220,'*0.9167 No Dark,*1.8334 No Wave','len'},
				
				{65.703,240/220/4*5,'*0.7334 No Distant','len'},
				
				{69.658,73.340,'*1.2223 50% Flip','end'},
				{73.340,240/220/2,'*0.91667 No Flip','len'},
				
				{80.976,240/155,'*21.38 No Mini','len'},
				
				{80.976,0.050,'*10000 -100% Mini','len'},
				{80.976+240/220/8*3,0.050,'*10000 -100% Mini','len'},
				{80.976+240/220/8*6,0.050,'*10000 -100% Mini','len'},
				{80.976+240/220/8*7,0.050,'*10000 -100% Mini','len'},
				
				{83.976,0.050,'*10000 Sudden,*10000 -20% SuddenOffset,*10000 Stealth','len',1},
				{83.976+0.050,100.067,'*10000 400% Sudden,*1.8334 50% Stealth,*36667 10000% Dizzy','end',1},
				
				{83.158,240/220/4*3,'*10000 -100% HiddenOffset','len',2},
				{83.976,100.067,'*10000 400% Hidden,*4.4 20% HiddenOffset,*3.6667 Brake','end',2},
				
				{100.067,240/220/2,'*7.3334 No Hidden,*1.8334 No Brake,*7.3334 No Sudden,*0.91667 No Stealth,*18333.3334 No Dizzy,*10000 No Flip,*10000 No Invert','len'},
				{100.067,115.885,'*1.8334 Distant','end'},
				
				{109.340,118.612,'*10000 No Flip,*10000 No Invert','end'},
				
				{115.855,240/220*4,'*0.91667 No Distant','len'},
				
				{118.612,200,'*10000 50% Flip,*10000 -200% Mini,*10000 Dark,*10000 50% Reverse','end'},
				
				}
				
				for i = 20.194,20.902,0.04 do
					table.insert(prefix_mods,{i,0.02,'*10000 Flip','len'});
					table.insert(prefix_mods,{i+0.02,0.02,'*10000 No Flip','len'});
				end
				
				for i = 29.419,44.902,0.08 do
					table.insert(prefix_mods,{i,0.02,'*10000 No Flip,*10000 No Invert,*10000 50% Stealth','len'});
					table.insert(prefix_mods,{i+0.02*1,0.02,'*10000 Flip,*10000 No Invert,*10000 95% Stealth','len'});
					table.insert(prefix_mods,{i+0.02*2,0.02,'*10000 Invert,*10000 No Flip,*10000 99% Stealth','len'});
					table.insert(prefix_mods,{i+0.02*3,0.02,'*10000 Flip,*10000 -100% Invert,*10000 95% Stealth','len'});
				end
				
				for i = 48.249,65.702,240/220*2 do
					table.insert(prefix_mods,{i,240/220/8*3,'*4.8889 Hallway','len'});
					table.insert(prefix_mods,{i+240/220/8*3,240/220/8*3,'*4.8889 Distant','len'});
					table.insert(prefix_mods,{i+240/220/8*6,240/220/8*3,'*4.8889 Hallway','len'});
					table.insert(prefix_mods,{i+240/220/8*9,240/220/8*3,'*4.8889 Distant','len'});
					table.insert(prefix_mods,{i+240/220/8*12,240/220/4,'*7.3334 Hallway','len'});
					table.insert(prefix_mods,{i+240/220/8*14,240/220/4,'*7.3334 Distant','len'});
				end
				
				for i = 56.431,56.975,240/220/4 do
					table.insert(prefix_mods,{i,240/220/16,'*10000 No Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+240/220/16*1,240/220/16,'*10000 Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+240/220/16*2,240/220/16,'*10000 Invert,*10000 No Flip','len'});
					table.insert(prefix_mods,{i+240/220/16*3,240/220/16,'*10000 Flip,*10000 -100% Invert','len'});
				end
				
				for i = 83.976,100.066,240/220/16 do
					table.insert(prefix_mods,{i,240/220/64,'*10000 No Flip,*10000 No Invert','len',1});
					table.insert(prefix_mods,{i+240/220/64*1,240/220/64,'*10000 Flip,*10000 No Invert','len',1});
					table.insert(prefix_mods,{i+240/220/64*2,240/220/64,'*10000 Invert,*10000 No Flip','len',1});
					table.insert(prefix_mods,{i+240/220/64*3,240/220/64,'*10000 Flip,*10000 -100% Invert','len',1});
				end
				
				for i = 100.612,115.884,240/220*2 do
					table.insert(prefix_mods,{i,240/220/8*3,'*4.8889 Hallway','len'});
					table.insert(prefix_mods,{i+240/220/8*3,240/220/8*3,'*4.8889 Distant','len'});
					table.insert(prefix_mods,{i+240/220/8*6,240/220/8*3,'*4.8889 Hallway','len'});
					table.insert(prefix_mods,{i+240/220/8*9,240/220/8*3,'*4.8889 Distant','len'});
					table.insert(prefix_mods,{i+240/220/8*12,240/220/4,'*7.3334 Hallway','len'});
					table.insert(prefix_mods,{i+240/220/8*14,240/220/4,'*7.3334 Distant','len'});
				end
				
				for i = 108.794,109.339,240/220/4 do
					table.insert(prefix_mods,{i,240/220/16,'*10000 No Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+240/220/16*1,240/220/16,'*10000 Flip,*10000 No Invert','len'});
					table.insert(prefix_mods,{i+240/220/16*2,240/220/16,'*10000 Invert,*10000 No Flip','len'});
					table.insert(prefix_mods,{i+240/220/16*3,240/220/16,'*10000 Flip,*10000 -100% Invert','len'});
				end
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
			end
			
			if beat >= 204 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/220/4);
						v:skewx(0.5*multi);
						v:sleep(240/220/4);
						v:decelerate(240/220/4);
						v:skewx(1*multi);
						v:sleep(240/220/4);
						v:decelerate(240/220/4);
						v:skewx(1.5*multi);
						v:sleep(240/220/4);
						v:decelerate(240/220/4);
						v:skewx(2*multi);
						v:sleep(240/220/4);
						v:decelerate(240/220);
						v:skewx(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 220 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/220/2);
						v:zoomy(0.8);
						v:sleep(240/220/2);
						v:decelerate(240/220/2);
						v:zoomy(0.6);
						v:sleep(240/220/2);
						v:decelerate(240/220/2);
						v:zoomy(0.4);
						v:sleep(240/220/2);
						v:decelerate(240/220/2);
						v:zoomy(0.2);
						v:sleep(240/220/2);
						v:decelerate(240/220*2);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 316 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:GetChild('Judgment'):linear(240/220/8);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):linear(240/220/8);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 376.5 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:accelerate(240/220/8*7);
						v:zoom(0);
						v:sleep(0);
						v:x(SCREEN_CENTER_X+160*multi);
						v:sleep(240/220/2);
						v:linear(240/220/4*14);
						v:zoom(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 0 and beat < 116 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.sin(beat*math.pi/4)*60-25 ..'% SuddenOffset',1);
				GAMESTATE:ApplyGameCommand('mod,*10000 '..math.sin(beat*math.pi/4)*60-25 ..'% SuddenOffset',2);
			end
			
			if beat >= 196 and beat < 202.5 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-auxvar:getaux()..'% Flip,*10000 '..auxvar:getaux()..'% Invert');
			end
			
			if beat >= 253.5 and beat < 258.5 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-auxvar:getaux()..'% Flip,*10000 '..auxvar:getaux()..'% Invert',2);
			end
			
			if beat >= 316 and beat < 346 then
				for i,v in pairs(prefix_plr) do
					local multi = 0; if i == 2 then multi = SCREEN_WIDTH; end
					if v then
						v:x(math.cos(beat*math.pi/2)*SCREEN_CENTER_X+multi);
					end
				end
			end
			
			if beat >= 349 and beat < 364 then
				for i,v in pairs(prefix_plr) do
					local multi = 0; if i == 2 then multi = SCREEN_WIDTH; end
					if v then
						v:x(math.cos(beat*math.pi)*SCREEN_CENTER_X+multi);
					end
				end
			end
			
			if beat >= 364 and beat < 376 then
				for i,v in pairs(prefix_plr) do
					local multi = 0; if i == 2 then multi = SCREEN_WIDTH; end
					if v then
						v:x(math.cos(beat*math.pi/2)*SCREEN_CENTER_X+multi);
					end
				end
			end
			
			if beat >= 255 and beat < 258 then
				SCREENMAN:GetTopScreen():vibrate();
				SCREENMAN:GetTopScreen():effectmagnitude(auxvar2:getaux(),auxvar2:getaux(),0);
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (0.012 - 0.754) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		BwingMessageCommand="finishtweening;aux,0;decelerate,240/220/8*6;aux,100;accelerate,240/220/8*6;aux,0"
		DodgeMessageCommand="finishtweening;aux,0;linear,240/220/8;aux,100;sleep,240/220/4;accelerate,240/220/8*6;aux,0"
		SnareSnapSetupMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 2 then
						v:decelerate(240/220/2);
						v:rotationy(540);
					end
				end
			end
		end"
		SnareSnapCWMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 1 then
						v:linear(240/220/4);
						v:rotationy(-180);
					else
						v:linear(240/220/4);
						v:rotationy(360);
					end
				end
			end
		end"
		SnareSnapCCWMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 1 then
						v:linear(240/220/4);
						v:rotationy(0);
					else
						v:linear(240/220/4);
						v:rotationy(540);
					end
				end
			end
		end"
		SnareSnapEndMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 2 then
						v:decelerate(240/220);
						v:rotationy(0);
					end
				end
			end
		end"
	/>
	
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar2 = self; self:hidden(1) end"
		OomphMessageCommand="finishtweening;aux,50;linear,240/220/2;aux,0"
	/>
	
	<!--SPEAR OBJECT.
	spear is placed inside an actorframe at -312,-48 so that its origin point is the middle of the orb-->
	<Layer Type="ActorFrame" OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,1;rotationz,-90;diffusealpha,0" 
	FuckAwayNowMessageCommand="bouncebegin,240/220/8*7;y,-240" 
	DownTheMiddleMessageCommand="rotationz,90;accelerate,240/220/8*8;y,SCREEN_HEIGHT+240"
	StabbityMessageCommand="rotationz,-90;decelerate,240/220/4;addy,-180;accelerate,240/220/4;addy,180;decelerate,240/220/4;addy,-200;accelerate,240/220/4;addy,200;
	decelerate,240/220/4;addy,-220;accelerate,240/220/4;addy,220;decelerate,240/220/4;addy,-240;accelerate,240/220/4;addy,240"
	PutItBackMessageCommand="rotationz,0;x,-240;y,SCREEN_HEIGHT-112;decelerate,240/220;addx,303*SCREEN_WIDTH/640;accelerate,240/220/4*3;addx,-303*SCREEN_WIDTH/640"
	RunThrough1MessageCommand="rotationz,0;x,-240;y,SCREEN_HEIGHT-48;accelerate,240/220;x,SCREEN_WIDTH+240"
	RunThrough2MessageCommand="rotationz,180;x,SCREEN_WIDTH+240;y,SCREEN_HEIGHT-96;accelerate,240/220;x,-240"
	RunThrough3MessageCommand="rotationz,0;x,-240;y,SCREEN_HEIGHT-144;accelerate,240/220;x,SCREEN_WIDTH+240"
	RunThrough4MessageCommand="rotationz,180;x,SCREEN_WIDTH+240;y,SCREEN_HEIGHT-192;accelerate,240/220;x,-240"
	NowImMadMessageCommand="rotationz,90;spring,240/220/4*6;x,SCREEN_CENTER_X;y,0"
	RecoilMessageCommand="accelerate,240/220/8*6;y,-300+84"
	RumbleMessageCommand="vibrate;effectmagnitude,5,5,0;sleep,240/220/4*5;queuecommand,StopVibr" StopVibrCommand="stopeffect;"><children>
		<Layer Type="ActorFrame" FireMessageCommand="playcommand,F;vibrate;effectmagnitude,5,5,0;
		sleep,0.3;queuecommand,StopVib" StopVibCommand="stopeffect;" ><children>
			<Layer File="spear" OnCommand="x,-0;y,-0;zoom,0.5" AspearanceMessageCommand="linear,240/220/8*3;zoom,1;diffusealpha,1"
			ImSpinninMessageCommand="rotationz,5760;decelerate,240/220/4*6;rotationz,0"/>
			<Layer File="glow" OnCommand="blend,add;diffusealpha,0;x,84"
			FCommand="finishtweening;linear,0.4;diffusealpha,0;"
			ChargeMessageCommand="diffusealpha,0;zoom,0.8;sleep,0.1*10;linear,0.1*10;diffusealpha,1;zoom,1.4;"/>
			<Layer File="charge.sprite" OnCommand="blend,add;diffusealpha,0;x,84"
			ChargeMessageCommand="setstate,0;rotationz,0;zoom,2;diffusealpha,1;linear,0.1*15;zoom,1;rotationz,270;
			linear,0.1*5;diffusealpha,0;rotationz,360"/>
			<Layer File="danmaku"
			OnCommand="blend,add;diffusealpha,0;zoom,1;x,84"
			FCommand="finishtweening;diffusealpha,1;zoom,1;decelerate,0.4;zoom,6;diffusealpha,0;"/>
		</children></Layer>
	</children></Layer>

	<Layer Type="ActorFrame" OnCommand="x,SCREEN_CENTER_X;y,-240;zoom,1;rotationz,90;diffusealpha,0.5"
	StabbityMessageCommand="decelerate,240/220/4;addy,180;accelerate,240/220/4;addy,-180;decelerate,240/220/4;addy,200;accelerate,240/220/4;addy,-200;
	decelerate,240/220/4;addy,220;accelerate,240/220/4;addy,-220;decelerate,240/220/4;addy,240;accelerate,240/220/4;addy,-240"
	PutItBackMessageCommand="rotationz,0;x,-240;y,112;decelerate,240/220;addx,303*SCREEN_WIDTH/640;accelerate,240/220/4*3;addx,-303*SCREEN_WIDTH/640"
	RunThrough1MessageCommand="rotationz,180;x,SCREEN_WIDTH+240;y,48;accelerate,240/220;x,-240"
	RunThrough2MessageCommand="rotationz,0;x,-240;y,96;accelerate,240/220;x,SCREEN_WIDTH+240"
	RunThrough3MessageCommand="rotationz,180;x,SCREEN_WIDTH+240;y,144;accelerate,240/220;x,-240"
	RunThrough4MessageCommand="rotationz,0;x,-240;y,192;accelerate,240/220;x,SCREEN_WIDTH+240"><children>
		<Layer Type="ActorFrame" ><children>
			<Layer File="illusionspear" OnCommand="x,-0;y,-0;zoom,1"/>
		</children></Layer>
	</children></Layer>
	
	<Layer Type="ActorFrame" OnCommand="x,SCREEN_CENTER_X;y,-240;zoom,1;rotationz,90;diffusealpha,0.5"
	PutItBackMessageCommand="rotationz,180;x,SCREEN_WIDTH+240;y,112;decelerate,240/220;addx,-303*SCREEN_WIDTH/640;accelerate,240/220/4*3;addx,303*SCREEN_WIDTH/640"><children>
		<Layer Type="ActorFrame" ><children>
			<Layer File="illusionspear" OnCommand="x,-0;y,-0;zoom,1"/>
		</children></Layer>
	</children></Layer>
	
	<Layer Type="ActorFrame" OnCommand="x,SCREEN_CENTER_X;y,-240;zoom,1;rotationz,90;diffusealpha,0.5"
	PutItBackMessageCommand="rotationz,180;x,SCREEN_WIDTH+240;y,SCREEN_HEIGHT-112;decelerate,240/220;addx,-303*SCREEN_WIDTH/640;accelerate,240/220/4*3;addx,303*SCREEN_WIDTH/640"><children>
		<Layer Type="ActorFrame" ><children>
			<Layer File="illusionspear" OnCommand="x,-0;y,-0;zoom,1"/>
		</children></Layer>
	</children></Layer>
	
	<!--LASER OBJECT.
	If you want to position or rotate the laser, use the actorframe
	if you want to color or resize the laser, diffuse or zoomx the actor inside-->
	<Layer Type="ActorFrame" OnCommand="x,SCREEN_CENTER_X;y,84;rotationz,180"
	RecoilMessageCommand="accelerate,240/220/8*6;y,-300+84"><children>
		<Layer File="laser" OnCommand="vertalign,bottom;y,-20;zoomy,30;fadebottom,0.01;zoomx,0;diffusealpha,0"
		FireMessageCommand="diffusealpha,1;bounceend,240/220/16;zoomx,6;sleep,240/220/8*1;decelerate,240/220/8*4+240/220/16;diffusealpha,0;zoomx,0;" />
	</children></Layer>
	
</children></ActorFrame>