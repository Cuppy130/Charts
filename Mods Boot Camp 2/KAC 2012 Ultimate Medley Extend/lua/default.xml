<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,298.74"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				checked = false;
				prefix_time = 0;
				prefix_curaction = 1;
				prefix_inc = 0;
				
				prefix_phase = 0;
				
				prefix_curmessage = 1;
				
				prefix_firstseenbeat = GAMESTATE:GetSongBeat();
				
				prefix_actions = {
					{3,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:x(SCREEN_CENTER_X+128*multi);
								v:GetChild('Judgment'):x(32*multi);
								v:GetChild('Combo'):x(32*multi);
								v:sleep(240/200/16);
								v:x(SCREEN_CENTER_X+96*multi);
								v:GetChild('Judgment'):x(64*multi);
								v:GetChild('Combo'):x(64*multi);
								v:sleep(240/200/16);
								v:x(SCREEN_CENTER_X+64*multi);
								v:GetChild('Judgment'):x(96*multi);
								v:GetChild('Combo'):x(96*multi);
								v:sleep(240/200/16);
								v:x(SCREEN_CENTER_X+32*multi);
								v:GetChild('Judgment'):x(128*multi);
								v:GetChild('Combo'):x(128*multi);
								v:sleep(240/200/16);
								v:x(SCREEN_CENTER_X);
								v:GetChild('Judgment'):x(160*multi);
								v:GetChild('Combo'):x(160*multi);
							end
						end
					end,true},
					
					{64,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:zoom(0);
								v:sleep(240/200/8);
								v:zoom(1);
								v:x(SCREEN_CENTER_X+160*multi);
								v:GetChild('Judgment'):x(0);
								v:GetChild('Combo'):x(0);
							end
						end
					end,true},
					
					{142,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:rotationy(0);
								v:decelerate(240/200/8);
								v:x(SCREEN_CENTER_X);
								v:GetChild('Judgment'):x(160*multi);
								v:GetChild('Combo'):x(160*multi);
							end
						end
					end,true},
					
					{190,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:zoomx(1);
								v:zoomy(1);
								v:x(SCREEN_CENTER_X);
								v:y(SCREEN_CENTER_Y);
							end
						end
					end,true},
					
					{200,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:x(SCREEN_CENTER_X+320*multi);
								v:GetChild('Judgment'):x(160*-multi);
								v:GetChild('Combo'):x(160*-multi);
							end
						end
					end,true},
					
					{200,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:spring(240/200/8);
								v:rotationy(2.5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(7.5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(10*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(5*multi);
								v:sleep(240/200/8);
								v:spring(240/200/8);
								v:rotationy(0);
							end
						end
					end},
					
					{232,function()
						for i,v in pairs(prefix_plr) do
							local multi = 1; if i == 2 then multi = -1; end
							if v then
								v:spring(240/200/8);
								v:rotationy(2.5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(7.5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(10*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(5*multi);
								v:sleep(240/200/8);
								v:spring(240/200/8);
								v:rotationy(0);
							end
						end
					end},
					
					{264,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:spring(240/200/8);
								v:rotationy(2.5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(7.5*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(10*multi);
								v:sleep(240/200/4);
								v:spring(240/200/8);
								v:rotationy(5*multi);
								v:sleep(240/200/8);
								v:spring(240/200/8);
								v:rotationy(0);
							end
						end
					end},
					
					{284.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								if i == 1 then
									v:spring(240/200/8);
									v:rotationz(-10);
									v:x(SCREEN_CENTER_X-320-10);
									v:sleep(240/200/4);
									v:spring(240/200/8);
									v:rotationz(-20);
									v:x(SCREEN_CENTER_X-320-20);
									v:sleep(240/200/8);
									v:spring(240/200/8);
									v:rotationz(0);
									v:x(SCREEN_CENTER_X-320);
								else
									v:sleep(240/200/4);
									v:spring(240/200/8);
									v:rotationz(10);
									v:x(SCREEN_CENTER_X+320+10);
									v:sleep(240/200/4);
									v:spring(240/200/8);
									v:rotationz(0);
									v:x(SCREEN_CENTER_X+320);
								end
							end
						end
					end},
					
					{316,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:bounceend(240/200/4);
								v:zoom(0.75);
								v:bounceend(240/200/4);
								v:zoom(0.5);
								v:bounceend(240/200/4);
								v:zoom(0.25);
								v:linear(240/200/16);
								v:zoom(1);
								v:y(SCREEN_CENTER_Y);
							end
						end
					end},
					
					{320,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:GetChild('Judgment'):x(160*multi);
								v:GetChild('Combo'):x(160*multi);
							end
						end
					end,true},
					
					{346,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:zoomx(1);
								v:zoomy(1);
								v:x(SCREEN_CENTER_X);
								v:y(SCREEN_CENTER_Y);
								if i == 1 then
									v:zoom(1.1);
									v:sleep(240/200/16);
									v:zoom(1.2);
									v:sleep(240/200/16);
									v:zoom(1.3);
									v:sleep(240/200/16);
									v:zoom(1.4);
									v:sleep(240/200/16);
									v:zoom(1.5);
									v:sleep(240/200/16);
									v:zoom(1.6);
									v:sleep(240/200/16);
									v:zoom(1.7);
									v:sleep(240/200/16);
									v:zoom(1.8);
								else
									v:zoom(0.9);
									v:sleep(240/200/16);
									v:zoom(0.8);
									v:sleep(240/200/16);
									v:zoom(0.7);
									v:sleep(240/200/16);
									v:zoom(0.6);
									v:sleep(240/200/16);
									v:zoom(0.5);
									v:sleep(240/200/16);
									v:zoom(0.4);
									v:sleep(240/200/16);
									v:zoom(0.3);
									v:sleep(240/200/16);
									v:zoom(0.2);
								end
							end
						end
					end,true},
					
					{348.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:zoom(1);
							end
						end
					end,true},
					
					{350,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+352*multi);
								v:GetChild('Judgment'):linear(240/200/8);
								v:GetChild('Judgment'):x(192*-multi);
								v:GetChild('Combo'):linear(240/200/8);
								v:GetChild('Combo'):x(192*-multi);
							end
						end
					end,true},
					
					{352,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								if i == 1 then
									v:bob();
									v:effectmagnitude(-180,0,400);
									v:effectclock('bgm');
									v:effectperiod(4);
									v:GetChild('Judgment'):bob();
									v:GetChild('Judgment'):effectmagnitude(180,0,0);
									v:GetChild('Judgment'):effectclock('bgm');
									v:GetChild('Judgment'):effectperiod(4);
									v:GetChild('Combo'):bob();
									v:GetChild('Combo'):effectmagnitude(180,0,0);
									v:GetChild('Combo'):effectclock('bgm');
									v:GetChild('Combo'):effectperiod(4);
								else
									v:bob();
									v:effectmagnitude(-180,0,-400);
									v:effectclock('bgm');
									v:effectperiod(4);
									v:GetChild('Judgment'):bob();
									v:GetChild('Judgment'):effectmagnitude(180,0,0);
									v:GetChild('Judgment'):effectclock('bgm');
									v:GetChild('Judgment'):effectperiod(4);
									v:GetChild('Combo'):bob();
									v:GetChild('Combo'):effectmagnitude(180,0,0);
									v:GetChild('Combo'):effectclock('bgm');
									v:GetChild('Combo'):effectperiod(4);
								end
							end
						end
					end},
					
					{350,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+352*multi);
								v:GetChild('Judgment'):linear(240/200/8);
								v:GetChild('Judgment'):x(192*-multi);
								v:GetChild('Combo'):linear(240/200/8);
								v:GetChild('Combo'):x(192*-multi);
							end
						end
					end,true},
					
					{364,function()
						SCREENMAN:GetTopScreen():addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():decelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1.5);
						SCREENMAN:GetTopScreen():zoomx(0.75);
						SCREENMAN:GetTopScreen():rotationz(20);
						SCREENMAN:GetTopScreen():accelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():rotationz(0);
						SCREENMAN:GetTopScreen():decelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(0.5);
						SCREENMAN:GetTopScreen():zoomx(2);
						SCREENMAN:GetTopScreen():rotationz(-30);
						SCREENMAN:GetTopScreen():accelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():rotationz(0);
						SCREENMAN:GetTopScreen():decelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(0.25);
						SCREENMAN:GetTopScreen():zoomx(4);
						SCREENMAN:GetTopScreen():rotationz(40);
						SCREENMAN:GetTopScreen():accelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():rotationz(0);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(-SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:addx(-SCREEN_CENTER_X);
								v:addy(-SCREEN_CENTER_Y);
								v:stopeffect();
								v:GetChild('Judgment'):stopeffect();
								v:GetChild('Combo'):stopeffect();
							end
						end
					end,true},
					
					{367,function()
						SCREENMAN:GetTopScreen():addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(-SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:addx(SCREEN_CENTER_X);
								v:addy(SCREEN_CENTER_Y);
								v:linear(0.15);
								v:addx(-multi*224);
								v:GetChild('Judgment'):linear(0.15);
								v:GetChild('Judgment'):addx(multi*224);
								v:GetChild('Combo'):linear(0.15);
								v:GetChild('Combo'):addx(multi*224);
							end
						end
					end,true},
					
					{398,function()
						SCREENMAN:GetTopScreen():addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():decelerate(0.45);
						SCREENMAN:GetTopScreen():zoomy(0.33);
						SCREENMAN:GetTopScreen():zoomx(3);
						SCREENMAN:GetTopScreen():rotationz(20);
						SCREENMAN:GetTopScreen():accelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():rotationz(0);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(-SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:addx(-SCREEN_CENTER_X);
								v:addy(-SCREEN_CENTER_Y);
							end
						end
					end},
					
					{400,function()
						SCREENMAN:GetTopScreen():addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(-SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:addx(SCREEN_CENTER_X);
								v:addy(SCREEN_CENTER_Y);
							end
						end
					end},
					
					{412,function()
						SCREENMAN:GetTopScreen():addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():decelerate(0.3);
						SCREENMAN:GetTopScreen():zoomy(0.5);
						SCREENMAN:GetTopScreen():zoomx(2);
						SCREENMAN:GetTopScreen():rotationz(-20);
						SCREENMAN:GetTopScreen():accelerate(0.3);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():rotationz(0);
						SCREENMAN:GetTopScreen():decelerate(0.3);
						SCREENMAN:GetTopScreen():zoomy(4);
						SCREENMAN:GetTopScreen():zoomx(0.25);
						SCREENMAN:GetTopScreen():rotationz(40);
						SCREENMAN:GetTopScreen():accelerate(0.3);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():rotationz(0);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(-SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:addx(-SCREEN_CENTER_X);
								v:addy(-SCREEN_CENTER_Y);
							end
						end
					end},
					
					{416,function()
						SCREENMAN:GetTopScreen():addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(-SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:addx(SCREEN_CENTER_X);
								v:addy(SCREEN_CENTER_Y);
							end
						end
					end},
					
					{428,function()
						SCREENMAN:GetTopScreen():addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():decelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(0.5);
						SCREENMAN:GetTopScreen():zoomx(2);
						SCREENMAN:GetTopScreen():accelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():decelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(5);
						SCREENMAN:GetTopScreen():zoomx(0.2);
						SCREENMAN:GetTopScreen():accelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():decelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(0.1);
						SCREENMAN:GetTopScreen():zoomx(10);
						SCREENMAN:GetTopScreen():accelerate(0.15);
						SCREENMAN:GetTopScreen():zoomy(1);
						SCREENMAN:GetTopScreen():zoomx(1);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(-SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:addx(-SCREEN_CENTER_X);
								v:addy(-SCREEN_CENTER_Y);
							end
						end
					end,true},
					
					{432,function()
						SCREENMAN:GetTopScreen():addx(-SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():addy(-SCREEN_CENTER_Y);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addx(SCREEN_CENTER_X);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):addy(SCREEN_CENTER_Y);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:x(SCREEN_CENTER_X);
								v:y(SCREEN_CENTER_Y+1350);
								v:GetChild('Judgment'):x(multi*160);
								v:GetChild('Combo'):x(multi*160);
							end
						end
					end,true},
					
					{464,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:y(SCREEN_CENTER_Y);
							end
						end
					end,true},
					
					{475,function()
						SCREENMAN:GetTopScreen():SetDrawByZPosition(true);
						SCREENMAN:GetTopScreen():GetChild('SongBackground'):z(-999);
						SCREENMAN:GetTopScreen():GetChild('SongForeground'):z(999);
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/16);
								v:x(SCREEN_CENTER_X+32*multi);
								v:GetChild('Judgment'):linear(240/200/16);
								v:GetChild('Judgment'):x(multi*128);
								v:GetChild('Combo'):linear(240/200/16);
								v:GetChild('Combo'):x(multi*128);
							end
						end
					end,true},
					
					{490,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:x(SCREEN_CENTER_X+32*multi);
								v:GetChild('Judgment'):x(multi*128);
								v:GetChild('Combo'):x(multi*128);
								v:z(0);
							end
						end
					end,true},
					
					{491,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X);
								v:GetChild('Judgment'):linear(240/200/8);
								v:GetChild('Judgment'):x(multi*160);
								v:GetChild('Combo'):linear(240/200/8);
								v:GetChild('Combo'):x(multi*160);
							end
						end
					end,true},
					
					{522,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:x(SCREEN_CENTER_X+32*multi);
								v:GetChild('Judgment'):x(multi*128);
								v:GetChild('Combo'):x(multi*128);
								v:z(0);
							end
						end
					end,true},
					
					{523,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X);
								v:GetChild('Judgment'):linear(240/200/8);
								v:GetChild('Judgment'):x(multi*160);
								v:GetChild('Combo'):linear(240/200/8);
								v:GetChild('Combo'):x(multi*160);
							end
						end
					end,true},
					
					{530,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/2);
								v:x(SCREEN_CENTER_X);
							end
						end
					end,true},
					
					{628,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:x(SCREEN_CENTER_X+320*multi);
								v:GetChild('Judgment'):x(160*-multi);
								v:GetChild('Combo'):x(160*-multi);
								v:decelerate(240/200/4);
								v:x(SCREEN_CENTER_X+512*multi);
								v:sleep(0);
								v:x(SCREEN_CENTER_X+464*multi);
								v:sleep(240/200/16);
								v:x(SCREEN_CENTER_X+416*multi);
								v:sleep(240/200/16);
								v:x(SCREEN_CENTER_X+368*multi);
								v:sleep(240/200/16);
								v:x(SCREEN_CENTER_X+320*multi);
							end
						end
					end,true},
					
					{630.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								if i == 1 then
									v:linear(240/200/16);
									v:rotationy(-10);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(-20);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(-30);
								end
							end
						end
					end},
					
					{632.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								if i == 2 then
									v:linear(240/200/16);
									v:rotationy(10);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(20);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(30);
								end
							end
						end
					end},
					
					{635,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:decelerate(240/200/4);
								v:rotationy(360*multi);
								v:sleep(0);
								v:rotationy(0);
							end
						end
					end},
					
					{640.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/16);
								v:rotationy(10*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(20*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(30*multi);
								v:sleep(240/200/16);
								v:decelerate(240/200/2);
								v:rotationy(0);
								v:rotationz(360);
							end
						end
					end},
					
					{644,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:rotationz(0);
								v:accelerate(240/200/16*5);
								v:rotationz(30*multi);
								v:zoom(0);
								v:y(SCREEN_HEIGHT);
								v:sleep(0);
								v:rotationz(-30*multi);
								v:y(0);
								v:accelerate(240/200/16*5);
								v:rotationz(0);
								v:zoom(1);
								v:y(SCREEN_CENTER_Y);
							end
						end
					end},
					
					{646.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/16);
								v:rotationy(10*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(20*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(30*multi);
							end
						end
					end},
					
					{649,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:decelerate(240/200/4);
								v:skewx(2*multi);
								v:linear(240/200/16);
								v:rotationy(22.5*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(15*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(7.5*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(0);
								v:decelerate(240/200/4);
								v:skewx(0);
							end
						end
					end},
					
					{660,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:zoomy(20);
								v:decelerate(240/200/4);
								v:zoomy(1);
								v:linear(240/200/16);
								v:zoomz(50);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:zoomz(1);
							end
						end
					end},
					
					{662.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								if i == 2 then
									v:linear(240/200/16);
									v:rotationy(10);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(20);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(30);
								end
							end
						end
					end},
					
					{664.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								if i == 1 then
									v:linear(240/200/16);
									v:rotationy(-10);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(-20);
									v:sleep(240/200/16);
									v:linear(240/200/16);
									v:rotationy(-30);
								end
							end
						end
					end},
					
					{667,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:decelerate(240/200/4);
								v:rotationy(360*multi);
								v:sleep(0);
								v:rotationy(0);
							end
						end
					end},
					
					{672.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/16);
								v:rotationy(10*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(20*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(30*multi);
								v:sleep(240/200/16);
								v:decelerate(240/200/2);
								v:rotationy(0);
								v:rotationz(360);
							end
						end
					end},
					
					{676,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:rotationz(0);
								v:accelerate(240/200/16*5);
								v:rotationz(30*multi);
								v:zoom(0);
								v:y(SCREEN_HEIGHT);
								v:sleep(0);
								v:rotationz(-30*multi);
								v:y(0);
								v:accelerate(240/200/16*5);
								v:rotationz(0);
								v:zoom(1);
								v:y(SCREEN_CENTER_Y);
							end
						end
					end},
					
					{678.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/16);
								v:rotationy(10*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(20*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(30*multi);
							end
						end
					end},
					
					{681,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:decelerate(240/200/4);
								v:skewx(2*multi);
								v:linear(240/200/16);
								v:rotationy(22.5*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(15*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(7.5*multi);
								v:sleep(240/200/16);
								v:linear(240/200/16);
								v:rotationy(0);
								v:decelerate(240/200/4);
								v:skewx(0);
							end
						end
					end},
					
					{691,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/4);
								v:x(SCREEN_CENTER_X);
								v:GetChild('Judgment'):linear(240/200/4);
								v:GetChild('Judgment'):x(multi*160);
								v:GetChild('Combo'):linear(240/200/4);
								v:GetChild('Combo'):x(multi*160);
							end
						end
					end,true},
					
					{704,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/2);
								v:zoom(1);
								v:rotationx(360);
								v:linear(240/200/2);
								v:rotationx(0);
								v:linear(240/200/2);
								v:rotationx(360);
							end
						end
					end},
					
					{712,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/2);
								v:rotationx(0);
								v:linear(240/200/2);
								v:rotationx(360);
								v:linear(240/200/2);
								v:rotationx(0);
							end
						end
					end},
					
					{721,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:skewx(0);
							end
						end
					end,true},
					
					{722,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:skewx(0);
							end
						end
					end,true},
					
					{724,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:skewx(0);
							end
						end
					end,true},
					
					{736,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/2);
								v:zoom(1);
								v:rotationx(360);
								v:linear(240/200/2);
								v:rotationx(0);
							end
						end
					end},
					
					{754,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:GetChild('Judgment'):linear(240/200/2);
								v:GetChild('Judgment'):x(0);
								v:GetChild('Combo'):linear(240/200/2);
								v:GetChild('Combo'):x(0);
								if i == 1 then
									v:linear(240/200/2);
									v:zoom(0);
								end
							end
						end
					end,true},
					
					{804,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:GetChild('Judgment'):linear(240/200/8);
								v:GetChild('Judgment'):x(160*multi);
								v:GetChild('Combo'):linear(240/200/8);
								v:GetChild('Combo'):x(160*multi);
								if i == 1 then
									v:linear(240/200/8);
									v:zoom(1);
								end
							end
						end
					end,true},
					
					{828,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200*2);
								v:zoom(0);
							end
						end
					end,true},
					
					{856,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:zoom(1);
								v:linear(240/200);
								v:x(SCREEN_CENTER_X+32*multi);
							end
						end
					end,true},
					
					{868,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+64*multi);
							end
						end
					end,true},
					
					{876,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+32*multi);
							end
						end
					end,true},
					
					{884,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+64*multi);
							end
						end
					end,true},
					
					{892,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+32*multi);
							end
						end
					end,true},
					
					{900,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+64*multi);
							end
						end
					end,true},
					
					{908,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+32*multi);
							end
						end
					end,true},
					
					{916,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+64*multi);
							end
						end
					end,true},
					
					{924,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+32*multi);
							end
						end
					end,true},
					
					{932,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+64*multi);
							end
						end
					end,true},
					
					{940,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+32*multi);
							end
						end
					end,true},
					
					{948,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+64*multi);
							end
						end
					end,true},
					
					{956,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:z(0);
								v:linear(240/200/8);
								v:x(SCREEN_CENTER_X+32*multi);
							end
						end
					end,true},
					
					{992.5,function()
						for i,v in pairs(prefix_plr) do
							local multi = -1; if i == 2 then multi = 1; end
							if v then
								v:x(SCREEN_CENTER_X);
							end
						end
					end,true},
					
				};
				
				prefix_messages = {
					{1.200,'DynastyVib'},
					{1.650,'DynastyVib'},
					{2.100,'DynastyVib'},
					{2.550,'DynastyVib'},
					{3.000,'DynastyVib'},
					{3.300,'DynastyVib'},
					
					{2.4+1.200,'DynastyVib'},
					{2.4+1.650,'DynastyVib'},
					{2.4+2.100,'DynastyVib'},
					{2.4+2.550,'DynastyVib'},
					{2.4+3.000,'DynastyVib'},
					{2.4+3.300,'DynastyVib'},
					
					{4.8+1.200,'DynastyVib'},
					{4.8+1.650,'DynastyVib'},
					{4.8+2.100,'DynastyVib'},
					{4.8+2.550,'DynastyVib'},
					{4.8+3.000,'DynastyVib'},
					{4.8+3.300,'DynastyVib'},
					
					{7.2+1.200,'DynastyVib'},
					{7.2+1.650,'DynastyVib'},
					{7.2+2.100,'DynastyVib'},
					{7.2+2.550,'DynastyVib'},
					{7.2+3.000,'DynastyVib'},
					{7.2+3.300,'DynastyVib'},
					
					{9.6+1.200,'DynastyVib'},
					{9.6+1.200,'DynastyShift'},
					{9.6+1.650,'DynastyVib'},
					{9.6+1.650,'DynastyShift'},
					{9.6+2.100,'DynastyVib'},
					{9.6+2.100,'DynastyShift'},
					{9.6+2.550,'DynastyVib'},
					{9.6+2.550,'DynastyShift'},
					{9.6+3.000,'DynastyVib'},
					{9.6+3.000,'DynastyShift'},
					{9.6+3.300,'DynastyVib'},
					{9.6+3.300,'DynastyShift'},
					
					{12+1.200,'DynastyVib'},
					{12+1.200,'DynastyShift'},
					{12+1.650,'DynastyVib'},
					{12+1.650,'DynastyShift'},
					{12+2.100,'DynastyVib'},
					{12+2.100,'DynastyShift'},
					{12+2.550,'DynastyVib'},
					{12+2.550,'DynastyShift'},
					{12+3.000,'DynastyVib'},
					{12+3.000,'DynastyShift'},
					{12+3.300,'DynastyVib'},
					{12+3.300,'DynastyShift'},
					
					{14.4+1.200,'DynastyVib'},
					{14.4+1.200,'DynastyShift'},
					{14.4+1.650,'DynastyVib'},
					{14.4+1.650,'DynastyShift'},
					{14.4+2.100,'DynastyVib'},
					{14.4+2.100,'DynastyShift'},
					{14.4+2.550,'DynastyVib'},
					{14.4+2.550,'DynastyShift'},
					{14.4+3.000,'DynastyLongVib'},
					{14.4+3.000,'DynastyReset'},
					
					{52.800,'TriggerYeahOne8th'},
					{52.950,'TriggerYeahTwo8th'},
					{53.250,'TriggerYeahOne8th'},
					{53.400,'TriggerYeahTwo8th'},
					{53.700,'TriggerYeahOne8th'},
					{53.850,'TriggerYeahTwo16th'},
					{53.925,'TriggerYeahOne16th'},
					{54.000,'TriggerYeahTwo8th'},
					{54.150,'TriggerYeahOne8th'},
					{54.450,'TriggerYeahTwo8th'},
					{54.600,'TriggerYeahOne8th'},
					{54.750,'TriggerYeahTwo8th'},
					{54.900,'TriggerYeahOne8th'},
					{55.050,'TriggerYeahTwo8th'},
					
					{55.200,'TriggerYeahOne8th'},
					{55.350,'TriggerYeahTwo8th'},
					{55.650,'TriggerYeahOne8th'},
					{55.800,'TriggerYeahTwo8th'},
					{56.100,'TriggerYeahOne8th'},
					{56.250,'TriggerYeahTwo16th'},
					{56.325,'TriggerYeahOne16th'},
					{56.400,'TriggerYeahTwo8th'},
					{56.550,'TriggerYeahOne8th'},
					{56.700,'TriggerYeahTwo8th'},
					{56.850,'TriggerYeahOne8th'},
					
					{60.000,'EggScreenVib'},
					{60.450,'EggScreenVib'},
					{60.900,'EggScreenVib'},
					{61.350,'EggScreenVib'},
					{61.800,'EggScreenVib'},
					{62.100,'EggScreenVib'},
					
					{62.700,'EggZoom1'},
					{63.300,'EggZoom2'},
					{63.900,'EggZoom1'},
					{64.500,'EggZoom2'},
					{65.100,'EggZoom1'},
					{65.700,'EggZoom2'},
					{66.300,'EggZoom1'},
					{66.900,'EggZoom2'},
					{67.500,'EggZoom1'},
					{68.100,'EggZoom2'},
					{68.700,'EggZoom1'},
					{69.300,'EggZoom2'},
					
					{9.6+60.000,'EggScreenVib'},
					{9.6+60.450,'EggScreenVib'},
					{9.6+60.900,'EggScreenVib'},
					{9.6+61.350,'EggScreenVib'},
					{9.6+61.800,'EggScreenVib'},
					{9.6+62.100,'EggScreenVib'},
					
					{9.6+62.700,'EggZoom1'},
					{9.6+63.300,'EggZoom2'},
					{9.6+63.900,'EggZoom1'},
					{9.6+64.500,'EggZoom2'},
					{9.6+65.100,'EggZoom1'},
					{9.6+65.700,'EggZoom2'},
					{9.6+66.300,'EggZoom1'},
					{9.6+66.900,'EggZoom2'},
					{9.6+67.500,'EggZoom1'},
					{9.6+68.100,'EggZoom2'},
					{9.6+68.700,'EggZoom1'},
					{9.6+69.300,'EggZoom2'},
					
					{19.2+60.000,'EggScreenVib'},
					{19.2+60.450,'EggScreenVib'},
					{19.2+60.900,'EggScreenVib'},
					{19.2+61.350,'EggScreenVib'},
					{19.2+61.800,'EggScreenVib'},
					{19.2+62.100,'EggScreenVib'},
					
					{87.300,'TriggerWoo'},
					{88.275,'TriggerW-Woo'},
					{89.700,'TriggerWoo'},
					{90.150,'TriggerWoo'},
					{90.450,'TriggerWoo'},
					{90.750,'TriggerWWoo'},
					
					{92.100,'TriggerWoo'},
					{93.075,'TriggerW-Woo'},
					{93.750,'TriggerWoo'},
					{94.050,'TriggerWoo'},
					{94.350,'TriggerWWoo'},
					
					{95.700,'TriggerBeep'},
					
					{96.000,'TriggerYeahOne8th'},
					{96.150,'TriggerYeahTwo8th'},
					{96.450,'TriggerYeahOne8th'},
					{96.600,'TriggerYeahTwo8th'},
					{96.900,'TriggerYeahOne8th'},
					{97.050,'TriggerYeahTwo16th'},
					{97.125,'TriggerYeahOne16th'},
					{97.200,'TriggerYeahTwo8th'},
					{97.350,'TriggerYeahOne8th'},
					{97.650,'TriggerYeahTwo8th'},
					{97.800,'TriggerYeahOne8th'},
					{97.950,'TriggerYeahTwo8th'},
					{98.100,'TriggerYeahOne8th'},
					{98.250,'TriggerYeahTwo8th'},
					
					{98.400,'TriggerYeahOne8th'},
					{98.550,'TriggerYeahTwo8th'},
					{98.850,'TriggerYeahOne8th'},
					{99.000,'TriggerYeahTwo8th'},
					{99.300,'TriggerYeahOne8th'},
					{99.450,'TriggerYeahTwo16th'},
					{99.525,'TriggerYeahOne16th'},
					{99.600,'TriggerYeahTwo8th'},
					{99.750,'TriggerYeahOne8th'},
					{99.900,'TriggerYeahTwo8th'},
					{100.050,'TriggerYeahOne8th'},
					
					{100.800,'TriggerYeahOne8th'},
					{100.950,'TriggerYeahTwo8th'},
					{101.250,'TriggerYeahOne8th'},
					{101.400,'TriggerYeahTwo8th'},
					{101.700,'TriggerYeahOne8th'},
					{101.850,'TriggerYeahTwo16th'},
					{101.925,'TriggerYeahOne16th'},
					
					{102.000,'TriggerYeahTwo8th'},
					{102.150,'TriggerYeahOne8th'},
					{102.300,'TriggerYeahTwo8th'},
					{102.450,'TriggerYeahOne16th'},
					{102.525,'TriggerYeahTwo16th'},
					{102.600,'TriggerYeahOne8th'},
					{102.750,'TriggerYeahTwo8th'},
					{102.900,'TriggerYeahOne8th'},
					{103.200,'TriggerYeahTwo8th'},
					{103.350,'TriggerYeahOne8th'},
					{103.500,'TriggerYeahTwo8th'},
					{103.650,'TriggerYeahOne8th'},
					
					{147.600,'EclairShimmyRight'},
					{147.750,'EclairShimmyRight'},
					{147.900,'EclairShimmyRight'},
					{148.050,'EclairShimmyRight'},
					{148.200,'EclairShimmyLeft'},
					{148.350,'EclairShimmyLeft'},
					{148.500,'EclairShimmyLeft'},
					{148.650,'EclairShimmyLeft'},
					
					{1.2+147.600,'EclairShimmyLeft'},
					{1.2+147.750,'EclairShimmyLeft'},
					{1.2+147.900,'EclairShimmyLeft'},
					{1.2+148.050,'EclairShimmyLeft'},
					{1.2+148.200,'EclairShimmyRight'},
					{1.2+148.350,'EclairShimmyRight'},
					{1.2+148.500,'EclairShimmyRight'},
					{1.2+148.650,'EclairShimmyRight'},
					
					{150.000,'EclairAux'},
					
					{9.6+147.600,'EclairShimmyLeft'},
					{9.6+147.750,'EclairShimmyLeft'},
					{9.6+147.900,'EclairShimmyLeft'},
					{9.6+148.050,'EclairShimmyLeft'},
					{9.6+148.200,'EclairShimmyRight'},
					{9.6+148.350,'EclairShimmyRight'},
					{9.6+148.500,'EclairShimmyRight'},
					{9.6+148.650,'EclairShimmyRight'},
					
					{9.6+1.2+147.600,'EclairShimmyRight'},
					{9.6+1.2+147.750,'EclairShimmyRight'},
					{9.6+1.2+147.900,'EclairShimmyRight'},
					{9.6+1.2+148.050,'EclairShimmyRight'},
					
					{190.950,'PanicDJ'},
					{195.750,'PanicDJ'},
					{200.550,'PanicDJ'},
					{205.350,'PanicDJ'},
					
					{226.800,'GottDoors1'},
					{227.850,'GottDoors2'},
					{229.050,'GottDoors1'},
					{230.250,'GottDoors2'},
					
					{4.8+226.800,'GottDoors1'},
					{4.8+227.850,'GottDoors2'},
					{4.8+229.050,'GottDoors1'},
					{4.8+230.250,'GottDoors2'},
					
					{9.6+226.800,'GottDoors1'},
					{9.6+227.850,'GottDoors2'},
					{9.6+229.050,'GottDoors1'},
					{9.6+230.250,'GottDoors2'},
					
					{250.800,'BurningLove'},
					
					{250.800,'BurningKicks8ths'},
					{250.800+240/200/8,'BurningKicks8ths'},
					{250.800+240/200/8*2,'BurningKicks8ths'},
					{250.800+240/200/8*3,'BurningKicks8ths'},
					{250.800+240/200/8*4,'BurningKicks8ths'},
					{250.800+240/200/8*5,'BurningKicks8ths'},
					{250.800+240/200/8*6,'BurningKicks8ths'},
					{250.800+240/200/8*7,'BurningKicks8ths'},
					
					{250.800+240/200/8*8,'BurningKicks8ths'},
					{250.800+240/200/8*9,'BurningKicks8ths'},
					{250.800+240/200/8*10,'BurningKicks8ths'},
					{250.800+240/200/8*11,'BurningKicks8ths'},
					{250.800+240/200/8*12,'BurningKicks8ths'},
					{250.800+240/200/8*13,'BurningKicks8ths'},
					{250.800+240/200/8*14,'BurningKicks16ths'},
					{250.800+240/200/8*14.5,'BurningKicks16ths'},
					{250.800+240/200/8*15,'BurningKicks16ths'},
					{250.800+240/200/8*15.5,'BurningKicks16ths'},
					
					{250.800+240/200/8*16,'BurningKicks8ths'},
					{250.800+240/200/8*17,'BurningKicks8ths'},
					{250.800+240/200/8*18,'BurningKicks8ths'},
					{250.800+240/200/8*19,'BurningKicks8ths'},
					{250.800+240/200/8*20,'BurningKicks8ths'},
					{250.800+240/200/8*21,'BurningKicks8ths'},
					{250.800+240/200/8*22,'BurningKicks16ths'},
					{250.800+240/200/8*22.5,'BurningKicks16ths'},
					{250.800+240/200/8*23,'BurningKicks16ths'},
					{250.800+240/200/8*23.5,'BurningKicks16ths'},
					
					{250.800+240/200/8*24,'BurningKicks8ths'},
					{250.800+240/200/8*25,'BurningKicks8ths'},
					{250.800+240/200/8*26,'BurningKicks8ths'},
					{250.800+240/200/8*27,'BurningKicks8ths'},
					{250.800+240/200/8*28,'BurningKicks8ths'},
					{250.800+240/200/8*29,'BurningKicks16ths'},
					{250.800+240/200/8*29.5,'BurningKicks16ths'},
					{250.800+240/200/8*30,'BurningKicks16ths'},
					{250.800+240/200/8*30.5,'BurningKicks16ths'},
					{250.800+240/200/8*31,'BurningKicks16ths'},
					{250.800+240/200/8*31.5,'BurningKicks16ths'},
					
					{250.800+240/200/8*32,'BurningKicks16ths'},
					{250.800+240/200/8*32.5,'BurningKicks16ths'},
					{250.800+240/200/8*33,'BurningKicks16ths'},
					{250.800+240/200/8*33.5,'BurningKicks16ths'},
					{250.800+240/200/8*34,'BurningKicks16ths'},
					{250.800+240/200/8*34.5,'BurningKicks16ths'},
					{250.800+240/200/8*35,'BurningKicks16ths'},
					{250.800+240/200/8*35.5,'BurningKicks16ths'},
					{250.800+240/200/8*36,'BurningKicks16ths'},
					{250.800+240/200/8*36.5,'BurningKicks16ths'},
					{250.800+240/200/8*37,'BurningKicks16ths'},
					{250.800+240/200/8*37.5,'BurningKicks16ths'},
					{250.800+240/200/8*38,'BurningKicks16ths'},
					{250.800+240/200/8*38.5,'BurningKicks16ths'},
					{250.800+240/200/8*39,'BurningKicks16ths'},
					{250.800+240/200/8*39.5,'BurningKicks16ths'},
					
					{276.900,'BurningBeep'},
					
				};
				
				prefix_mods = {
				
				{0,400,'2x,-999999% Cover,*10000 No Beat','end'},
				
				{0.900,19.200,'*3.3334 Wave,*1.6667 50% Drunk,*1.6667 50% Tipsy','end'},
				
				{18.000,240/200/4*6,'*0.8334 Stealth,*0.8334 Dark','len'},
				
				{19.200+240/200/4,240/200/4*4,'Blind','len'},
				
				{19.425,240/200/16*5,'*10000 300% Centered,*10000 No Stealth,*10000 No Dark','len'},
				
				{19.800,240/200/4,'*6.6667 200% Centered','len'},
				{19.800+240/200/4,240/200/4,'*6.6667 100% Centered','len'},
				{19.800+240/200/4*2,240/200/4,'*6.6667 No Centered','len'},
				
				{21.450,36.150,'*10000 300% Beat','end'},
				{30.750,240/200/4,'*10000 1000% Beat','len'},
				{37.050,240/200/4,'*10000 -500% Beat','len'},
				{37.950,240/200/2,'*10000 -500% Beat','len'},
				{38.850,240/200/4,'*10000 500% Beat','len'},
				{39.450,240/200/4,'*10000 -500% Beat','len'},
				
				{21.000,40.800,'*10000 0.285714x,*10000 -300% Reverse,*10000 85.7143% Centered,*0.4167 25% Flip','end'},
				
				{40.800,240/200/2,'*10000 2x,*10000 No Reverse,*10000 No Centered,*0.4167 No Flip','len'},
				
				{42.750,240/200/4,'*1000000 10000% Beat','len'},
				{52.350,240/200/4,'*1000000 10000% Beat','len'},
				
				{42.900,52.800,'*10000 100.01% Reverse,*10000 200% Centered,*10000 0x,*10000 Stealth','end',2},
				{52.800,240/200/4,'*10000 No Reverse,*10000 No Centered,*10000 2x,*10000 No Stealth','len',2},
				
				{52.800,57.600,'*10000 100.01% Reverse','end',1},
				
				{57.000,240/200/8,'*3.3334 25% Mini','len'},
				{57.000+240/200/8,240/200/8,'*3.3334 50% Mini','len'},
				{57.000+240/200/8*2,240/200/8,'*3.3334 75% Mini','len'},
				{57.000+240/200/8*3,240/200/8,'*3.3334 Mini','len'},
				{57.000+240/200/8*4,240/200*2,'*0.4167 No Mini','len'},
				
				{57.000,240/200/2,'*10000 100.01% Reverse','len'},
				
				{57.600,240/200/2,'*6.667 No Reverse','len'},
				{57.600+240/200/2,240/200/2,'*6.667 100.01% Reverse','len'},
				{57.600+240/200/2*2,240/200/2,'*6.667 No Reverse','len'},
				{57.600+240/200/2*3,240/200/2,'*6.667 100.01% Reverse','len'},
				{57.600+240/200/2*4,240/200/2,'*6.667 No Reverse','len'},
				{57.600+240/200/2*4,81.600,'*10000 500% Invert','end'},
				
				{57.500,240/200/4,'*10000 500% Beat','len'},
				{57.500+240/200/2,240/200/4,'*10000 -500% Beat','len'},
				{57.500+240/200/2*2,240/200/4,'*10000 500% Beat','len'},
				{57.500+240/200/2*3,240/200/4,'*10000 -500% Beat','len'},
				
				{52.800,57.600,'Blind','end'},
				
				{61.800,69.600,'*4 1x,*4 C106.66667','end'},
				
				{62.400,69.600,'*0.833334 200% Centered','end'},
				
				{63.600,240/200,'*0.9524 Stealth','len'},
				
				{64.800,240/200/8,'*6.6667 No Stealth','len'},
				{64.800-0.050,67.200,'*10000 100.01% Reverse,*10000 No Centered','end'},
				
				{64.800,240/200/4*7,'*3.3334 100% Drunk,*3.3334 100% Wave','len',1},
				{64.800,240/200/4*7,'*3.3334 -100% Drunk,*3.3334 -100% Wave','len',2},
				
				{66.900,240/200/4,'*3.3334 No Drunk,*3.3334 No Wave','len'},
				
				{67.200,69.600,'*10000 100.01% Reverse,*0.833334 200% Centered','end'},
				
				{68.400,240/200,'*0.9524 Stealth','len'},
				
				{69.600,240/200/8,'*6.6667 No Stealth','len'},
				{69.600-0.050,240/200/4,'*10000 No Reverse,*10000 No Centered,*10000 2x','len'},
				
				{72.000,240/200*6-240/200/4,'*3.3334 100% Drunk,*1.6667 50% Wave','len',1},
				{72.000,240/200*6-240/200/4,'*3.3334 -100% Drunk,*1.6667 -50% Wave','len',2},
				
				{78.900,240/200/4,'*3.3334 No Drunk,*1.6667 No Wave','len'},
				{79.200,240/200/4,'*10000 No Mini','len'},
				
				{81.600,90.600,'*10000 -250% Invert,*10000 250% Flip','end'},
				
				{81.600,240/200/8,'*10000 Stealth','len',1},
				{81.600,240/200/8,'*10000 50% Stealth','len',2},
				{81.600+240/200/8,240/200/8,'*10000 Stealth','len',2},
				{81.600+240/200/8,240/200/8,'*10000 50% Stealth','len',1},
				{81.600+240/200/8*2,240/200/16,'*10000 Stealth','len',1},
				{81.600+240/200/8*2,240/200/16,'*10000 50% Stealth','len',2},
				{81.600+240/200/8*2.5,240/200/8,'*10000 Stealth','len',2},
				{81.600+240/200/8*2.5,240/200/8,'*10000 50% Stealth','len',1},
				{81.600+240/200/8*3.5,240/200/16,'*10000 Stealth','len',1},
				{81.600+240/200/8*3.5,240/200/16,'*10000 50% Stealth','len',2},
				
				{0.6+81.600,240/200/8,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				{0.6+81.600+240/200/8,240/200/8,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				{0.6+81.600+240/200/8*2,240/200/16,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				{0.6+81.600+240/200/8*2.5,240/200/8,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				{0.6+81.600+240/200/8*3.5,240/200/16,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				
				{1.2+81.600,240/200/8,'*10000 Stealth,*10000 No Sudden','len',2},
				{1.2+81.600,240/200/8,'*10000 50% Stealth','len',1},
				{1.2+81.600+240/200/8,240/200/8,'*10000 Stealth','len',1},
				{1.2+81.600+240/200/8,240/200/8,'*10000 50% Stealth','len',2},
				{1.2+81.600+240/200/8*2,240/200/16,'*10000 Stealth','len',2},
				{1.2+81.600+240/200/8*2,240/200/16,'*10000 50% Stealth','len',1},
				{1.2+81.600+240/200/8*2.5,240/200/8,'*10000 Stealth','len',1},
				{1.2+81.600+240/200/8*2.5,240/200/8,'*10000 50% Stealth','len',2},
				{1.2+81.600+240/200/8*3.5,240/200/16,'*10000 Stealth','len',2},
				{1.2+81.600+240/200/8*3.5,240/200/16,'*10000 50% Stealth','len',1},
				
				{1.8+81.600,240/200/8,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				{1.8+81.600+240/200/8,240/200/8,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				{1.8+81.600+240/200/8*2,240/200/16,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				{1.8+81.600+240/200/8*2.5,240/200/8,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				{1.8+81.600+240/200/8*3.5,240/200/16,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				
				{84.000,240/200/8,'*10000 Stealth,*10000 No Hidden','len',1},
				{84.000,240/200/8,'*10000 50% Stealth','len',2},
				{84.000+240/200/8,240/200/8,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				{84.000+240/200/8*2,240/200/8,'*10000 Stealth,*10000 No Sudden','len',2},
				{84.000+240/200/8*2,240/200/8,'*10000 50% Stealth','len',1},
				{84.000+240/200/8*3,240/200/8,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				
				{84.600,240/200/16,'*10000 Stealth,*10000 No Hidden','len',1},
				{84.600,240/200/16,'*10000 50% Stealth','len',2},
				{84.600+240/200/16,240/200/16,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				{84.600+240/200/16*2,240/200/16,'*10000 Stealth,*10000 No Sudden','len',2},
				{84.600+240/200/16*2,240/200/16,'*10000 50% Stealth','len',1},
				{84.600+240/200/16*3,240/200/16,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				{84.900,240/200/16,'*10000 Stealth,*10000 No Hidden','len',1},
				{84.900,240/200/16,'*10000 50% Stealth','len',2},
				{84.900+240/200/16,240/200/16,'*10000 50% Stealth,*10000 400% Sudden,*10000 No Hidden','len'},
				{84.900+240/200/16*2,240/200/16,'*10000 Stealth,*10000 No Sudden','len',2},
				{84.900+240/200/16*2,240/200/16,'*10000 50% Stealth','len',1},
				{84.900+240/200/16*3,240/200/16,'*10000 50% Stealth,*10000 400% Hidden,*10000 No Sudden','len'},
				
				{85.200,240/200/2,'*10000 No Stealth,*10000 No Hidden','len'},
				
				{85.350,96.000,'*10000 -250% Invert,*10000 250% Flip','end'},
				
				{86.100,94.800,'*0.8334 25% Tornado','end'},
				{94.800,240/200/4*3,'*0.2778 No Tornado','len'},
				
				{96.000,240/200/4,'*10000 No Invert,*10000 No Flip','len'},
				
				{100.200,240/200/8,'*6.6667 50% Mini','len'},
				{100.200+240/200/8,240/200/8,'*6.6667 Mini','len'},
				{100.200+240/200/8*2,240/200/8,'*6.6667 50% Mini','len'},
				{100.200+240/200/8*3,240/200/8,'*6.6667 No Mini','len'},
				
				{96.000,104.550,'Blind','end'},
				
				{104.850,240/200/8*3,'*3.3334 50% Reverse','len'},
				{104.850+240/200/8,110.400,'*36.6667 550% Invert','end'},
				{104.850+240/200/8*3,240/200/8,'*3.3334 No Reverse','len'},
				
				{105.600,109.200,'*40 No Boost','len'},
				
				{105.600,240/200/8,'*20 400% Boost','len'},
				{105.600+240/200,240/200/8,'*20 400% Boost','len'},
				{105.600+240/200*2,240/200/8,'*20 400% Boost','len'},
				{105.600+240/200*2.5,240/200/8,'*20 400% Boost','len'},
				
				{105.750,240/200/4,'*10000 800% Beat','len'},
				{105.750+240/200,240/200/4,'*10000 -800% Beat','len'},
				{105.750+240/200*2,240/200/4,'*10000 800% Beat','len'},
				{105.750+240/200*2.5,240/200/4,'*10000 -800% Beat','len'},
				
				{105.300,129.150,'*10000 1.8x','end'},
				
				{96.000,103.800,'*10000 100.01% Reverse','end',2},
				{103.800,240/200/8,'*10000 No Reverse','len',2},
				
				{110.100,129.600,'*23.3334 200% Invert','end'},
				
				{110.400,129.150,'*10000 0.1x,*10000 C3600,*1.25 1000% Wave,*26.6667 200% Invert','end'},
				
				{114.900,1,'*320 C3600','len'},
				{114.900,240/200/8,'*320 C10000','len'},
				
				{117.750,118.800,'*13.3334 No Flip','end'},
				{117.750,240/200/16,'*13.3334 -50% Flip','len'},
				{117.750+240/200/16*3,240/200/16,'*13.3334 50% Flip','len'},
				{117.750+240/200/16*6,240/200/16,'*13.3334 -50% Flip','len'},
				{117.750+240/200/16*9,240/200/16,'*13.3334 50% Flip','len'},
				{117.750+240/200/16*12,240/200/16,'*13.3334 -50% Flip','len'},
				
				{120.900,1,'*320 C3600','len'},
				{120.900,240/200/8,'*320 C10000','len'},
				
				{121.950,240/200/4,'*10 Dark,*10 Stealth','len'},
				{122.250,240/200/4,'*10 No Dark,*10 No Stealth','len'},
				
				{126.600,127.200,'*30 No Drunk','end'},
				{126.600,0.0625,'*125 150% Drunk','len'},
				{126.600+240/200/24*1,0.0625,'*125 -150% Drunk','len'},
				{126.600+240/200/24*2,0.0625,'*125 150% Drunk','len'},
				{126.600+240/200/24*3,0.0625,'*125 -150% Drunk','len'},
				{126.600+240/200/24*4,0.0625,'*125 150% Drunk','len'},
				{126.600+240/200/24*5,0.0625,'*125 -150% Drunk','len'},
				
				{127.200,127.800,'*13.3334 No Flip','end'},
				{127.200,240/200/16,'*13.3334 -50% Flip','len'},
				{127.200+240/200/16*3,240/200/16,'*13.3334 50% Flip','len'},
				
				{127.800,0.0625,'*12.5 Tipsy','len'},
				{127.800+240/200/16*1,0.0625,'*25 -100% Tipsy','len'},
				{127.800+240/200/16*2,0.0625,'*25 Tipsy','len'},
				{127.800+240/200/16*3,0.0625,'*25 -100% Tipsy','len'},
				{127.800+240/200/16*4,0.0625,'*25 Tipsy','len'},
				{127.800+240/200/16*5,0.0625,'*12.5 No Tipsy','len'},
				
				{129.150,240/200/8,'*10000 2x,*10000 C200,*10000 No Wave','len'},
				
				{129.150,240/200/8*3,'*3 Dark,*3 Stealth','len'},
				
				{129.600,139.200,'*10000 No Invert,*10000 50% Stealth,*10000 No Dark,*10000 0.125x','end'},
				{129.600,139.200,'*0.10416667 -100% Flip','end'},
				{129.600,139.350,'*10000 No Reverse,*10000 No Split,*10000 No Cross,*10000 No Alternate','end'},
				
				{139.200,240/200/4*3,'*10000 1.375x','len'},
				{139.200+240/200/4*3,240/200/4,'*5 2x','len'},
				
				{139.200,240/200/4,'*6.6667 No Flip','len'},
				
				{139.500,240/200/16,'*40 300% Drunk','len'},
				{139.500+240/200/16,240/200/16,'*80 -300% Drunk','len'},
				{139.500+240/200/16*2,240/200/8,'*40 No Drunk','len'},
				
				{140.100,240/200/16,'*40 300% Drunk','len'},
				{140.100+240/200/16,240/200/16,'*80 -300% Drunk','len'},
				{140.100+240/200/16*2,240/200/16,'*80 300% Drunk','len'},
				{140.100+240/200/16*3,240/200/16,'*80 -300% Drunk','len'},
				{140.100+240/200/16*4,240/200/8,'*40 No Drunk','len'},
				
				{140.250,240/200/4,'*10000 1000% Beat','len'},
				
				{140.400,240/200/8*13,'*0.128201 25% Mini,*0.512821 Distant,*0.256411 -50% Flip','len'},
				
				{142.350,240/200/8,'*3.3334 No Mini,*13.3334 No Distant,*6.6667 No Flip','len'},
				
				{142.500,147.300,'*6.6667 -50% Flip','end'},
				{142.800,147.300,'*10.4667 314% Dizzy,*3.3334 Wave,*6.6667 200% Bumpy','end',1},
				{142.800,147.300,'*10.4667 -314% Dizzy,*3.3334 -100% Wave,*6.6667 -200% Bumpy','end',2},
				
				{144.300,240/200/4,'*13.3334 -50% Flip,*13.3334 200% Invert,*6 90% Stealth','len',1},
				{144.300+240/200/4,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',1},
				{144.300+240/200/4*2,240/200/4,'*13.3334 150% Flip,*13.3334 -200% Invert,*6 90% Stealth','len',1},
				{144.300+240/200/4*3,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',1},
				
				{144.300+240/200/4,240/200/4,'*13.3334 150% Flip,*13.3334 No Invert,*6 90% Stealth','len',2},
				{144.300+240/200/4*2,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',2},
				{144.300+240/200/4*3,240/200/4,'*13.3334 -50% Flip,*13.3334 200% Invert,*6 90% Stealth','len',2},
				{144.300+240/200/4*4,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',2},
				
				{147.300,240/200/4*9,'*6.6667 No Flip,*20.9334 No Dizzy,*6.6667 No Wave,*13.3334 No Bumpy,*6.6667 Mini','len'},
				
				{150.000,156.900,'*6.6667 -50% Flip,*13.3334 No Mini','end'},
				{150.000,156.900,'*10.4667 314% Dizzy,*3.3334 Wave,*6.6667 200% Bumpy','end',1},
				{150.000,156.900,'*10.4667 -314% Dizzy,*3.3334 -100% Wave,*6.6667 -200% Bumpy','end',2},
				
				{153.900,240/200/4,'*13.3334 -50% Flip,*13.3334 200% Invert,*6 90% Stealth','len',2},
				{153.900+240/200/4,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',2},
				{153.900+240/200/4*2,240/200/4,'*13.3334 150% Flip,*13.3334 -200% Invert,*6 90% Stealth','len',2},
				{153.900+240/200/4*3,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',2},
				
				{153.900+240/200/4,240/200/4,'*13.3334 150% Flip,*13.3334 No Invert,*6 90% Stealth','len',1},
				{153.900+240/200/4*2,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',1},
				{153.900+240/200/4*3,240/200/4,'*13.3334 -50% Flip,*13.3334 200% Invert,*6 90% Stealth','len',1},
				{153.900+240/200/4*4,240/200/4,'*13.3334 -50% Flip,*13.3334 No Invert,*6 No Stealth','len',1},
				
				{156.900,240/200/4*9,'*6.6667 No Flip,*20.9334 No Dizzy,*6.6667 No Wave,*13.3334 No Bumpy,*6.6667 Mini','len'},
				
				{159.000,240/200/2,'*16.6667 1000% Drunk,*2.2222 Stealth,*2.2222 Dark','len'},
				
				{159.600,178.800,'*10000 No Drunk,*10000 250% Hallway,*10000 100% Flip,*10000 -100% Tornado,*10000 No Invert,*10000 75% Mini,*10000 -100% Centered,*10000 200% Wave,*10000 Sudden,*10000 200% SuddenOffset,*10000 Hidden,*10000 10% HiddenOffset,*3.3334 No Stealth,*3.3334 No Dark','end',1},
				{159.600,178.800,'*10000 100.001% Reverse,*10000 No Drunk,*10000 250% Hallway,*10000 100% Flip,*10000 -100% Tornado,*10000 No Invert,*10000 75% Mini,*10000 -100% Centered,*10000 200% Wave,*10000 Sudden,*10000 200% SuddenOffset,*10000 Hidden,*10000 10% HiddenOffset,*3.3334 No Stealth,*3.3334 No Dark','end',2},
				
				{178.500,240/200/4,'*4.4445 Stealth,*4.4445 Dark','len'},
				
				{178.800,240/200/4,'*10000 No Reverse,*10000 No Drunk,*10000 No Hallway,*10000 No Flip,*10000 No Tornado,*10000 No Invert,*10000 No Mini,*10000 No Centered,*10000 No Wave,*10000 No Sudden,*10000 No Hidden','len'},
				
				{178.650,187.050,'*10000 500% Beat','end'},
				
				{178.800,187.050,'*10000 Sudden,*10000 -15% SuddenOffset,*10000 90% Stealth','end',1},
				{178.800,187.050,'*10000 Hidden,*10000 15% HiddenOffset,*10000 90% Stealth,*10000 Dark','end',2},
				
				{178.800,240/200/4,'*10000 No Flip,*10000 No Stealth','len',1},
				{178.800,240/200/4,'*10000 Flip,*10000 90% Stealth','len',2},
				
				{178.800,187.050,'*13.3334 No Flip,*13.3334 No Stealth','end',1},
				{178.800,187.050,'*13.3334 Flip,*13.3334 90% Stealth','end',2},
				
				{178.800,240/200,'*13.3334 Flip,*13.3334 90% Stealth','len',1},
				{178.800+240/200*2,240/200,'*13.3334 Flip,*13.3334 90% Stealth','len',1},
				{178.800+240/200*4,240/200,'*13.3334 Flip,*13.3334 90% Stealth','len',1},
				{178.800+240/200*6,240/200,'*13.3334 Flip,*13.3334 90% Stealth','len',1},
				
				{178.800,240/200,'*13.3334 No Flip,*13.3334 No Stealth','len',2},
				{178.800+240/200*2,240/200,'*13.3334 No Flip,*13.3334 No Stealth','len',2},
				{178.800+240/200*4,240/200,'*13.3334 No Flip,*13.3334 No Stealth','len',2},
				{178.800+240/200*6,240/200,'*13.3334 No Flip,*13.3334 No Stealth','len',2},
				
				{187.050,240/200/8,'*10000 Hidden,*6.6667 No Flip,*6.6667 No Stealth','len'},
				
				{187.200,240/200/4,'*10000 1256.637% Dizzy','len'},
				{187.200+240/200/4,240/200/4,'*10000 No Dizzy','len'},
				
				{187.650,240/200/4,'*10000 Brake','len',1},
				{187.650+240/200/4,240/200/4,'*10000 No Brake','len',1},
				{187.650,240/200/4,'*10000 Boost','len',2},
				{187.650+240/200/4,240/200/4,'*10000 No Boost','len',2},
				
				{188.100,240/200/4,'*10000 Centered,*1000000 -10000% Mini,*10000 50% Flip','len'},
				{188.100+240/200/4,240/200/4,'*10000 No Centered,*1000000 No Mini,*10000 No Flip','len'},
				
				{188.400,207.300,'*10000 -250% Invert,*10000 250% Flip,*10000 -50% Bumpy,*10000 150% Wave','end'},
				
				{190.500,240/200/8,'*100000 -1000% Bumpy','len'},
				{190.500+240/200/8,240/200/8,'*66.66667 -50% Bumpy','len'},
				
				{191.400,240/200/4,'*8 0x','len'},
				{191.400+240/200/4,240/200/4,'*8 2x','len'},
				
				{196.200,240/200/4,'*8 0x','len'},
				{196.200+240/200/4,240/200/4,'*8 2x','len'},
				
				{196.800,240/200/2,'*3.3334 200% Drunk,*3.3334 200% Tipsy','len'},
				{196.800+240/200/2,240/200/2,'*3.3334 No Drunk,*3.3334 No Tipsy','len'},
				
				{200.100,240/200/8,'*100000 -1000% Bumpy','len'},
				{200.100+240/200/8,240/200/8,'*66.66667 -50% Bumpy','len'},
				
				{201.000,240/200/4,'*8 0x','len'},
				{201.000+240/200/4,240/200/4,'*8 2x','len'},
				
				{205.800,240/200/4,'*8 0x','len'},
				{205.800+240/200/4,240/200/4,'*8 2x','len'},
				
				{206.400,240/200/16,'*20 150% Tipsy','len'},
				{206.400+240/200/16,240/200/16,'*40 -150% Tipsy','len'},
				{206.400+240/200/16*2,240/200/16,'*40 150% Tipsy','len'},
				{206.400+240/200/16*3,240/200/16,'*40 -150% Tipsy','len'},
				{206.400+240/200/16*4,240/200/16,'*40 150% Tipsy','len'},
				{206.400+240/200/16*5,240/200/16,'*40 -150% Tipsy','len'},
				{206.400+240/200/16*6,240/200/16,'*40 150% Tipsy','len'},
				{206.400+240/200/16*7,240/200/16,'*40 -150% Tipsy','len'},
				{206.400+240/200/16*8,240/200/16,'*40 150% Tipsy','len'},
				{206.400+240/200/16*9,240/200/16,'*40 -150% Tipsy','len'},
				{206.400+240/200/16*10,240/200/16,'*40 150% Tipsy','len'},
				{206.400+240/200/16*11,240/200/16,'*20 No Tipsy','len'},
				
				{207.300,240/200/4,'*8.3334 No Invert,*8.3334 No Flip,*1.6667 No Bumpy,*5 No Wave','len'},
				
				{207.600,211.200,'*10000 Stealth,*10000 Dark,*10000 No Hallway,*10000 No Reverse','end'},
				
				{207.600,226.200,'*3.3334 Drunk','end'},
				
				{207.600,240/200-0.050,'*3.3334 No Stealth,*3.3334 No Dark,*2.5 300% Hallway','len'},
				{207.600+240/200,240/200-0.050,'*3.3334 No Stealth,*3.3334 No Dark,*2.5 300% Hallway,*10000 100.01% Reverse','len'},
				{207.600+240/200*2,240/200-0.050,'*3.3334 No Stealth,*3.3334 No Dark,*2.5 300% Hallway','len'},
				
				{207.600,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{207.600+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{207.600+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{207.600+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{207.600+240/200/8*3,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{207.600+240/200/8*3+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{207.600+240/200/8*3+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{207.600+240/200/8*3+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{208.800,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{208.800+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{208.800+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{208.800+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{208.800+240/200/8*3,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{208.800+240/200/8*3+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{208.800+240/200/8*3+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{208.800+240/200/8*3+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{210.000,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{210.000+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{210.000+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{210.000+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{210.000+240/200/8*3,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{210.000+240/200/8*3+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{210.000+240/200/8*3+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{210.000+240/200/8*3+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{217.200,220.800,'*10000 Stealth,*10000 Dark,*10000 No Hallway,*10000 No Reverse','end'},
				
				{217.200,240/200-0.050,'*3.3334 No Stealth,*3.3334 No Dark,*2.5 300% Hallway','len'},
				{217.200+240/200,240/200-0.050,'*3.3334 No Stealth,*3.3334 No Dark,*2.5 300% Hallway,*10000 100.01% Reverse','len'},
				{217.200+240/200*2,240/200-0.050,'*3.3334 No Stealth,*3.3334 No Dark,*2.5 300% Hallway','len'},
				
				{217.200,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{217.200+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{217.200+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{217.200+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{217.200+240/200/8*3,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{217.200+240/200/8*3+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{217.200+240/200/8*3+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{217.200+240/200/8*3+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{218.400,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{218.400+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{218.400+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{218.400+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{218.400+240/200/8*3,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{218.400+240/200/8*3+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{218.400+240/200/8*3+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{218.400+240/200/8*3+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{219.600,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{219.600+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{219.600+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{219.600+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{219.600+240/200/8*3,240/200/32*5,'*10000 -200% Mini,*10000 20% Flip','len'},
				{219.600+240/200/8*3+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{219.600+240/200/8*3+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{219.600+240/200/8*3+240/200/32*5,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{216.300,217.250,'*10000 Drunk,*10000 No Flip','end'},
				
				{222.000,240/200/16,'*13.3334 Tipsy','len'},
				{226.125,240/200/16,'*13.3334 No Tipsy','len'},
				
				{225.600,240/200/32*17,'*10000 -200% Mini,*10000 20% Flip','len'},
				{225.600+240/200/32,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*3,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*5,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*7,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*9,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*11,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*13,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*15,240/200/32,'*53.3334 No Mini,*5.3334 No Flip','len'},
				{225.600+240/200/32*17,240/200/16,'*53.3334 No Mini,*5.3334 No Flip','len'},
				
				{226.200,240/200/2,'*1.6667 No Drunk','len'},
				
				{226.800,240/200/8,'*20 -300% Flip,*20 300% Invert','len',2},
				{226.800+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',2},
				
				{227.850,240/200/8,'*20 -300% Flip,*20 300% Invert','len',1},
				{227.850+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',1},
				{229.050,240/200/8,'*20 -300% Flip,*20 300% Invert','len',2},
				{229.050+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',2},
				{230.250,240/200/8,'*20 -300% Flip,*20 300% Invert','len',1},
				{230.250+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',1},
				
				{230.400,240/200/4,'*1.6667 50% Flip,*16.6667 -500% Mini,*1.6667 50% Reverse','len',2},
				{230.400+240/200/4,240/200/4,'*1.6667 No Flip,*16.6667 No Mini','len',2},
				{230.400+240/200/4,235.200,'*1.6667 100.01% Reverse','end'},
				
				{231.000,240/200/16,'*13.3334 No Reverse,*6.6667 50% Split,*6.6667 50% Cross,*6.6667 50% Alternate','len'},
				{231.000+240/200/16,240/200/16,'*13.3334 No Reverse,*6.6667 100% Split,*6.6667 No Cross,*6.6667 No Alternate','len'},
				{231.000+240/200/16*2,240/200/16,'*13.3334 No Reverse,*6.6667 50% Split,*6.6667 -50% Cross,*6.6667 50% Alternate','len'},
				{231.000+240/200/16*3,240/200/16,'*13.3334 No Reverse,*6.6667 No Split,*6.6667 No Cross,*6.6667 No Alternate','len'},
				{231.000+240/200/16*4,240/200/16,'*13.3334 100.01% Reverse,*6.6667 -50% Split,*6.6667 -50% Cross,*6.6667 -50% Alternate','len'},
				{231.000+240/200/16*5,240/200/16,'*13.3334 100.01% Reverse,*6.6667 -100% Split,*6.6667 No Cross,*6.6667 No Alternate','len'},
				{231.000+240/200/16*6,240/200/16,'*13.3334 100.01% Reverse,*6.6667 -50% Split,*6.6667 50% Cross,*6.6667 -50% Alternate','len'},
				{231.000+240/200/16*7,240/200/16,'*13.3334 100.01% Reverse,*6.6667 No Split,*6.6667 No Cross,*6.6667 No Alternate','len'},
				
				{4.8+226.800,240/200/8,'*20 -300% Flip,*20 300% Invert','len',2},
				{4.8+226.800+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',2},
				
				{4.8+227.850,240/200/8,'*20 -300% Flip,*20 300% Invert','len',1},
				{4.8+227.850+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',1},
				{4.8+229.050,240/200/8,'*20 -300% Flip,*20 300% Invert','len',2},
				{4.8+229.050+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',2},
				{4.8+230.250,240/200/8,'*20 -300% Flip,*20 300% Invert','len',1},
				{4.8+230.250+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',1},
				
				{235.200,240/200/4,'*6.6667 No Reverse','len',2},
				{235.200+240/200/4,240/200/4,'*6.6667 100.01% Reverse','len',2},
				{235.200+240/200/4*2,240/200/8,'*6.6667 No Reverse','len',2},
				{235.200+240/200/4*2.5,240/200/4,'*6.6667 100.01% Reverse','len',2},
				{235.200+240/200/4*3.5,240/200/8,'*6.6667 No Reverse','len',2},
				
				{236.100,240.300,'*6.6667 100.01% Reverse','end',1},
				
				{9.6+226.800,240/200/8,'*20 -300% Flip,*20 300% Invert','len',2},
				{9.6+226.800+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',2},
				
				{9.6+227.850,240/200/8,'*20 -300% Flip,*20 300% Invert','len',1},
				{9.6+227.850+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',1},
				{9.6+229.050,240/200/8,'*20 -300% Flip,*20 300% Invert','len',2},
				{9.6+229.050+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',2},
				{9.6+230.250,240/200/8,'*20 -300% Flip,*20 300% Invert','len',1},
				{9.6+230.250+240/200/8,240/200/8,'*10000 No Flip,*10000 No Invert','len',1},
				
				{240.000,240/200/4,'*6.6667 100.01% Reverse','len',2},
				{240.000+240/200/4,240/200/8,'*6.6667 No Reverse','len'},
				{240.000+240/200/4*1.5,240/200/4,'*6.6667 100.01% Reverse','len'},
				{240.000+240/200/4*2.5,240/200/4,'*6.6667 No Reverse','len'},
				{240.000+240/200/4*3.5,240/200/8,'*6.6667 100.01% Reverse','len'},
				{240.000+240/200,240/200/4,'*6.6667 No Reverse','len'},
				
				{241.500,240/200/16,'*40 300% Drunk','len'},
				{241.500+240/200/16,240/200/16,'*80 -300% Drunk','len'},
				{241.500+240/200/16*2,240/200/8,'*40 No Drunk','len'},
				
				{242.550,240/200/16,'*40 -300% Drunk','len'},
				{242.550+240/200/16,240/200/16,'*80 300% Drunk','len'},
				{242.550+240/200/16*2,240/200/8,'*40 No Drunk','len'},
				
				{242.850,240/200/16,'*40 300% Drunk','len'},
				{242.850+240/200/16,240/200/16,'*80 -300% Drunk','len'},
				{242.850+240/200/16*2,240/200/8,'*40 No Drunk','len'},
				
				{243.750,240/200/16,'*40 -300% Drunk','len'},
				{243.750+240/200/16,240/200/16,'*80 300% Drunk','len'},
				{243.750+240/200/16*2,240/200/8,'*40 No Drunk','len'},
				
				{244.050,240/200/16,'*40 300% Drunk','len'},
				{244.050+240/200/16,240/200/16,'*80 -300% Drunk','len'},
				{244.050+240/200/16*2,240/200/16,'*80 300% Drunk','len'},
				{244.050+240/200/16*3,240/200/16,'*80 -300% Drunk','len'},
				{244.050+240/200/16*4,240/200/8,'*40 No Drunk','len'},
				
				{244.800,240/200/16,'*40 -300% Drunk','len'},
				{244.800+240/200/16,240/200/16,'*80 300% Drunk','len'},
				{244.800+240/200/16*2,240/200/8,'*40 No Drunk','len'},
				
				{245.250,240/200/16,'*40 300% Drunk','len'},
				{245.250+240/200/16,240/200/16,'*80 -300% Drunk','len'},
				{245.250+240/200/16*2,240/200/16,'*80 300% Drunk','len'},
				{245.250+240/200/16*3,240/200/16,'*80 -300% Drunk','len'},
				{245.250+240/200/16*4,240/200/8,'*40 No Drunk','len'},
				
				{245.850,240/200/16,'*40 -300% Drunk','len'},
				{245.850+240/200/16,240/200/16,'*80 300% Drunk','len'},
				{245.850+240/200/16*2,240/200/8,'*40 No Drunk','len'},
				
				{241.800,240/200/2,'*10000 No Centered','len'},
				
				{241.800,240/200/8-0.050,'*3.125 Centered','len'},
				{241.800+240/200/8,240/200/8-0.050,'*3.125 Centered','len'},
				{241.800+240/200/8*2,240/200/8-0.050,'*3.125 Centered','len'},
				{241.800+240/200/8*3,240/200/8-0.050,'*3.125 Centered','len'},
				
				{243.000,240/200/2,'*10000 No Centered','len'},
				
				{243.000,240/200/8-0.050,'*3.125 Centered','len'},
				{243.000+240/200/8,240/200/8-0.050,'*3.125 Centered','len'},
				{243.000+240/200/8*2,240/200/8-0.050,'*3.125 Centered','len'},
				{243.000+240/200/8*3,240/200/8-0.050,'*3.125 Centered','len'},
				
				{244.350,240/200/2,'*10000 No Centered','len'},
				
				{244.350,240/200/8-0.050,'*3.125 Centered','len'},
				{244.350+240/200/8,240/200/8-0.050,'*3.125 Centered','len'},
				{244.350+240/200/8*2,240/200/8-0.050,'*3.125 Centered','len'},
				
				{245.550,240/200/2,'*10000 No Centered','len'},
				
				{245.550,240/200/8-0.050,'*3.125 Centered','len'},
				{245.550+240/200/8,240/200/8-0.050,'*3.125 Centered','len'},
				
				{243.300,240/200/4,'*10000 No Tornado','len'},
				{244.500,240/200/4,'*10000 No Tornado','len'},
				{245.700,240/200/4,'*10000 No Tornado','len'},
				
				{246.000,240/200/8,'*6.6667 Split','len'},
				{246.000+240/200/8,240/200/4,'*6.6667 100.01% Reverse,*6.6667 No Split','len'},
				{246.000+240/200/8*3,240/200/8,'*6.6667 No Reverse,*6.6667 Split','len'},
				{246.000+240/200/8*4,240/200/4,'*6.6667 No Split','len'},
				{246.000+240/200/8*6,240/200/8,'*6.6667 Split','len'},
				{246.000+240/200/8*7,240/200/4,'*6.6667 100.01% Reverse,*6.6667 No Split','len'},
				{246.000+240/200/8*9,240/200/8,'*6.6667 No Reverse,*6.6667 Split','len'},
				{246.000+240/200/8*10,240/200/4,'*6.6667 No Split','len'},
				{246.000+240/200/8*12,240/200/4,'*6.6667 100.01% Reverse','len'},
				{246.000+240/200/8*14,240/200/4,'*6.6667 No Reverse','len'},
				
				{246.300,240/200/8*3,'*13.3334 Flip','len'},
				{246.300+240/200/8*3,240/200/8*3,'*13.3334 No Flip,*13.3334 Invert','len'},
				{246.300+240/200/8*6,240/200/8*3,'*13.3334 Flip,*13.3334 -100% Invert','len'},
				{246.300+240/200/8*9,240/200/8*3,'*13.3334 No Flip,*13.3334 No Invert','len'},
				
				{248.400,240/200*2,'*4.1667 1000% Drunk,*4.1667 1000% Tipsy,*4.1667 1000% Bumpy,*4.1667 1000% Tornado','len'},
				{250.800,240/200*2,'*10000 No Drunk,*10000 No Tipsy,*10000 No Bumpy,*10000 No Tornado','len'},
				
				{256.800,240/200,'*0.4167 -50% Flip','len'},
				
				{256.800,297.750,'*1.6667 200% Bumpy','end',1},
				{256.800,297.750,'*1.6667 -200% Bumpy','end',2},
				{258.000,297.750,'*3.3334 -50% Flip,*3.3334 No Invert','end'},
				
				{260.400,240/200*2,'*3.3334 50% Invert','len'},
				{260.400+240/200*4,240/200*2,'*3.3334 50% Invert','len'},
				{260.400+240/200*8,240/200*2,'*3.3334 50% Invert','len'},
				{260.400+240/200*12,240/200*2,'*3.3334 50% Invert','len'},
				{260.400+240/200*16,240/200*2,'*3.3334 50% Invert','len'},
				{260.400+240/200*20,240/200*2,'*3.3334 50% Invert','len'},
				
				{259.350,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',1},
				{259.350+240/200/8,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{259.350+240/200/8*2,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',1},
				{259.350+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{259.350+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',1},
				{259.350+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				
				{259.350+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',2},
				{259.350+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{259.350+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',2},
				{259.350+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{259.350+240/200/8*5,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',2},
				{259.350+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				
				{261.750,240/200/8,'*26.6667 -50% Flip,*13.3334 150% Invert,*12 90% Stealth','len',1},
				{261.750+240/200/8,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',1},
				{261.750+240/200/8*2,240/200/8,'*26.6667 150% Flip,*13.3334 -50% Invert,*12 90% Stealth','len',1},
				{261.750+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',1},
				{261.750+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 -150% Invert,*12 90% Stealth','len',1},
				{261.750+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 50% Invert,*12 No Stealth','len',1},
				
				{261.750+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 -150% Invert,*12 90% Stealth','len',2},
				{261.750+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 50% Invert,*12 No Stealth','len',2},
				{261.750+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*13.3334 150% Invert,*12 90% Stealth','len',2},
				{261.750+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',2},
				{261.750+240/200/8*5,240/200/8,'*26.6667 150% Flip,*13.3334 -50% Invert,*12 90% Stealth','len',2},
				{261.750+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',2},
				
				{264.150,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',1},
				{264.150+240/200/8,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{264.150+240/200/8*2,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',1},
				{264.150+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{264.150+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',1},
				{264.150+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				
				{264.150+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',2},
				{264.150+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{264.150+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',2},
				{264.150+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{264.150+240/200/8*5,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',2},
				{264.150+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				
				{265.200,240/200/4,'*13.3334 Split','len',1},
				{265.200+240/200/4,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Split','len',1},
				{265.200+240/200/4*2,240/200/4,'*13.3334 No Reverse,*13.3334 Alternate','len',1},
				{265.200+240/200/4*3,240/200/4,'*13.3334 No Alternate','len',1},
				{265.200+240/200/4*4,240/200/4,'*13.3334 Cross','len',1},
				{265.200+240/200/4*5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Cross','len',1},
				{265.200+240/200/4*6,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Split','len',1},
				{265.200+240/200/4*7,240/200/4,'*13.3334 No Reverse,*13.3334 No Split','len',1},
				
				{265.200+240/200/4*0.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Cross','len',2},
				{265.200+240/200/4*1.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Cross','len',2},
				{265.200+240/200/4*2.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Split','len',2},
				{265.200+240/200/4*3.5,240/200/4,'*13.3334 No Reverse,*13.3334 No Split','len',2},
				{265.200+240/200/4*4.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Alternate','len',2},
				{265.200+240/200/4*5.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Alternate','len',2},
				{265.200+240/200/4*6.5,240/200/4,'*13.3334 No Reverse,*13.3334 Cross','len',2},
				{265.200+240/200/4*7.5,240/200/4,'*13.3334 No Reverse,*13.3334 No Cross','len',2},
				
				{268.950,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',2},
				{268.950+240/200/8,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{268.950+240/200/8*2,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',2},
				{268.950+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{268.950+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',2},
				{268.950+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				
				{268.950+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',1},
				{268.950+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{268.950+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',1},
				{268.950+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{268.950+240/200/8*5,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',1},
				{268.950+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				
				{271.350,240/200/8,'*26.6667 -50% Flip,*13.3334 150% Invert,*12 90% Stealth','len',2},
				{271.350+240/200/8,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',2},
				{271.350+240/200/8*2,240/200/8,'*26.6667 150% Flip,*13.3334 -50% Invert,*12 90% Stealth','len',2},
				{271.350+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',2},
				{271.350+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 -150% Invert,*12 90% Stealth','len',2},
				{271.350+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 50% Invert,*12 No Stealth','len',2},
				
				{271.350+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 -150% Invert,*12 90% Stealth','len',1},
				{271.350+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 50% Invert,*12 No Stealth','len',1},
				{271.350+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*13.3334 150% Invert,*12 90% Stealth','len',1},
				{271.350+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',1},
				{271.350+240/200/8*5,240/200/8,'*26.6667 150% Flip,*13.3334 -50% Invert,*12 90% Stealth','len',1},
				{271.350+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',1},
				
				{273.750,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',2},
				{273.750+240/200/8,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{273.750+240/200/8*2,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',2},
				{273.750+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{273.750+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',2},
				{273.750+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				
				{273.750+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',1},
				{273.750+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{273.750+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',1},
				{273.750+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{273.750+240/200/8*5,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',1},
				{273.750+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				
				{274.800,240/200/4,'*13.3334 Split','len',2},
				{274.800+240/200/4,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Split','len',2},
				{274.800+240/200/4*2,240/200/4,'*13.3334 No Reverse,*13.3334 Alternate','len',2},
				{274.800+240/200/4*3,240/200/4,'*13.3334 No Alternate','len',2},
				{274.800+240/200/4*4,240/200/4,'*13.3334 Cross','len',2},
				{274.800+240/200/4*5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Cross','len',2},
				{274.800+240/200/4*6,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Split','len',2},
				{274.800+240/200/4*7,240/200/4,'*13.3334 No Reverse,*13.3334 No Split','len',2},
				
				{274.800+240/200/4*0.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Cross','len',1},
				{274.800+240/200/4*1.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Cross','len',1},
				{274.800+240/200/4*2.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Split','len',1},
				{274.800+240/200/4*3.5,240/200/4,'*13.3334 No Reverse,*13.3334 No Split','len',1},
				{274.800+240/200/4*4.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Alternate','len',1},
				{274.800+240/200/4*5.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Alternate','len',1},
				{274.800+240/200/4*6.5,240/200/4,'*13.3334 No Reverse,*13.3334 Cross','len',1},
				{274.800+240/200/4*7.5,240/200/4,'*13.3334 No Reverse,*13.3334 No Cross','len',1},
				
				{277.050,286.500,'*6.6667 Drunk,*6.6667 Wave','end'},
				
				{278.550,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',1},
				{278.550+240/200/8,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{278.550+240/200/8*2,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',1},
				{278.550+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{278.550+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',1},
				{278.550+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				
				{278.550+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',2},
				{278.550+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{278.550+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',2},
				{278.550+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{278.550+240/200/8*5,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',2},
				{278.550+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				
				{280.950,240/200/8,'*26.6667 -50% Flip,*13.3334 150% Invert,*12 90% Stealth','len',1},
				{280.950+240/200/8,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',1},
				{280.950+240/200/8*2,240/200/8,'*26.6667 150% Flip,*13.3334 -50% Invert,*12 90% Stealth','len',1},
				{280.950+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',1},
				{280.950+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 -150% Invert,*12 90% Stealth','len',1},
				{280.950+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 50% Invert,*12 No Stealth','len',1},
				
				{280.950+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 -150% Invert,*12 90% Stealth','len',2},
				{280.950+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 50% Invert,*12 No Stealth','len',2},
				{280.950+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*13.3334 150% Invert,*12 90% Stealth','len',2},
				{280.950+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',2},
				{280.950+240/200/8*5,240/200/8,'*26.6667 150% Flip,*13.3334 -50% Invert,*12 90% Stealth','len',2},
				{280.950+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*13.3334 50% Invert,*12 No Stealth','len',2},
				
				{283.350,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',1},
				{283.350+240/200/8,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{283.350+240/200/8*2,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',1},
				{283.350+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				{283.350+240/200/8*4,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',1},
				{283.350+240/200/8*5,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',1},
				
				{283.350+240/200/8,240/200/8,'*26.6667 150% Flip,*26.6667 No Invert,*12 90% Stealth','len',2},
				{283.350+240/200/8*2,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{283.350+240/200/8*3,240/200/8,'*26.6667 -50% Flip,*26.6667 200% Invert,*12 90% Stealth','len',2},
				{283.350+240/200/8*4,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				{283.350+240/200/8*5,240/200/8,'*26.6667 150% Flip,*26.6667 -200% Invert,*12 90% Stealth','len',2},
				{283.350+240/200/8*6,240/200/8,'*26.6667 -50% Flip,*26.6667 No Invert,*12 No Stealth','len',2},
				
				{284.400,240/200/4,'*13.3334 Split','len',1},
				{284.400+240/200/4,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Split','len',1},
				{284.400+240/200/4*2,240/200/4,'*13.3334 No Reverse,*13.3334 Alternate','len',1},
				{284.400+240/200/4*3,240/200/4,'*13.3334 No Alternate','len',1},
				{284.400+240/200/4*4,240/200/4,'*13.3334 Cross','len',1},
				{284.400+240/200/4*5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Cross','len',1},
				
				{284.400+240/200/4*0.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Cross','len',2},
				{284.400+240/200/4*1.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Cross','len',2},
				{284.400+240/200/4*2.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Split','len',2},
				{284.400+240/200/4*3.5,240/200/4,'*13.3334 No Reverse,*13.3334 No Split','len',2},
				{284.400+240/200/4*4.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 -100% Alternate','len',2},
				{284.400+240/200/4*5.5,240/200/4,'*13.3334 100.01% Reverse,*13.3334 No Alternate','len',2},
				
				{286.200,240/200/8,'*13.3334 No Reverse','len'},
				{286.200+240/200/8,240/200/8,'*13.3334 100.01% Reverse','len'},
				{286.200+240/200/8*2,240/200/4,'*13.3334 No Reverse','len'},
				
				{286.500,240/200/4,'*3.3334 No Drunk,*3.3334 No Wave','len'},
				
				{286.800,240/200,'*10000 314% Dizzy','len'},
				{286.800+240/200,240/200,'*2.618 No Dizzy','len'},
				
				{286.800,240/200/8,'*6.6667 Brake','len',1},
				{286.800+240/200/8,240/200/8,'*6.6667 No Brake','len',1},
				{286.800+240/200/8*2,240/200/8,'*6.6667 Brake','len',1},
				{286.800+240/200/8*3,240/200/8,'*6.6667 No Brake','len',1},
				{286.800+240/200/8*4,240/200/8,'*6.6667 Brake','len',1},
				{286.800+240/200/8*5,240/200/8,'*6.6667 No Brake','len',1},
				{286.800+240/200/8*6,240/200/8,'*6.6667 Brake','len',1},
				{286.800+240/200/8*7,240/200/8,'*6.6667 No Brake','len',1},
				
				{286.800,240/200/8,'*6.6667 Boost','len',2},
				{286.800+240/200/8,240/200/8,'*6.6667 No Boost','len',2},
				{286.800+240/200/8*2,240/200/8,'*6.6667 Boost','len',2},
				{286.800+240/200/8*3,240/200/8,'*6.6667 No Boost','len',2},
				{286.800+240/200/8*4,240/200/8,'*6.6667 Boost','len',2},
				{286.800+240/200/8*5,240/200/8,'*6.6667 No Boost','len',2},
				{286.800+240/200/8*6,240/200/8,'*6.6667 Boost','len',2},
				{286.800+240/200/8*7,240/200/8,'*6.6667 No Boost','len',2},
				
				{288.150,240/200/8,'*13.3334 100.01% Reverse,*6.6667 -50% Split,*6.6667 -50% Cross,*6.6667 -50% Alternate','len'},
				{288.150+240/200/8,240/200/8,'*13.3334 100.01% Reverse,*6.6667 -100% Split,*6.6667 No Cross,*6.6667 No Alternate','len'},
				{288.150+240/200/8*2,240/200/8,'*13.3334 100.01% Reverse,*6.6667 -50% Split,*6.6667 50% Cross,*6.6667 -50% Alternate','len'},
				{288.150+240/200/8*3,240/200/4,'*13.3334 100.01% Reverse,*6.6667 No Split,*6.6667 No Cross,*6.6667 No Alternate','len'},
				{288.150+240/200/8*4,240/200/8,'*13.3334 No Reverse','len',2},
				{288.150+240/200/8*5,240/200/8,'*13.3334 No Reverse','len',1},
				{288.150+240/200/8*6,240/200/8*15,'*13.3334 100.01% Reverse,*6.6667 50% Stealth','len',2},
				
				{289.350,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				{289.350+240/200/16*3,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{289.350+240/200/16*6,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',1},
				{289.350+240/200/16*9,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{289.350+240/200/16*12,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				{289.350+240/200/16*15,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{289.350+240/200/16*18,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',1},
				{289.350+240/200/16*21,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{289.350+240/200/16*24,240/200/16*2,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				
				{289.350,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				{289.350+240/200/16*3,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{289.350+240/200/16*6,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',2},
				{289.350+240/200/16*9,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{289.350+240/200/16*12,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				{289.350+240/200/16*15,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{289.350+240/200/16*18,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',2},
				{289.350+240/200/16*21,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{289.350+240/200/16*24,240/200/16*2,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				
				{291.300,240/200/4,'*13.3334 No Reverse,*6.6667 No Stealth,*26.6667 -50% Flip,*26.6667 No Invert','len'},
				
				{291.600,240/200/8,'*6.6667 Brake','len',2},
				{291.600+240/200/8,240/200/8,'*6.6667 No Brake','len',2},
				{291.600+240/200/8*2,240/200/8,'*6.6667 Brake','len',2},
				{291.600+240/200/8*3,240/200/8,'*6.6667 No Brake','len',2},
				
				{291.600,240/200/8,'*6.6667 Boost','len',1},
				{291.600+240/200/8,240/200/8,'*6.6667 No Boost','len',1},
				{291.600+240/200/8*2,240/200/8,'*6.6667 Boost','len',1},
				{291.600+240/200/8*3,240/200/8,'*6.6667 No Boost','len',1},
				
				{292.200,240/200,'*13.3334 Alternate','len'},
				
				{292.800,240/200/8,'*6.6667 Brake','len',1},
				{292.800+240/200/8,240/200/8,'*6.6667 No Brake','len',1},
				{292.800+240/200/8*2,240/200/8,'*6.6667 Brake','len',1},
				{292.800+240/200/8*3,240/200/8,'*6.6667 No Brake','len',1},
				
				{292.800,240/200/8,'*6.6667 Boost','len',2},
				{292.800+240/200/8,240/200/8,'*6.6667 No Boost','len',2},
				{292.800+240/200/8*2,240/200/8,'*6.6667 Boost','len',2},
				{292.800+240/200/8*3,240/200/8,'*6.6667 No Boost','len',2},
				
				{293.400,240/200/8*27,'*13.3334 No Reverse,*13.3334 No Alternate','len',1},
				{293.400,240/200/8*27,'*13.3334 100.01% Reverse,*13.3334 No Alternate,*6.6667 50% Stealth','len',2},
				
				{294.300,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				{294.300+240/200/16*3,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{294.300+240/200/16*6,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',1},
				{294.300+240/200/16*9,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{294.300+240/200/16*12,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				{294.300+240/200/16*15,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{294.300+240/200/16*18,240/200/16*4,'*26.6667 150% Flip,*26.6667 -200% Invert','len',1},
				{294.300+240/200/16*22,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{294.300+240/200/16*25,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				{294.300+240/200/16*28,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{294.300+240/200/16*31,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				{294.300+240/200/16*34,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				{294.300+240/200/16*37,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',1},
				{294.300+240/200/16*40,240/200/16*2,'*26.6667 -50% Flip,*26.6667 No Invert','len',1},
				
				{294.300,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				{294.300+240/200/16*3,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{294.300+240/200/16*6,240/200/16*3,'*26.6667 -50% Flip,*26.6667 200% Invert','len',2},
				{294.300+240/200/16*9,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{294.300+240/200/16*12,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				{294.300+240/200/16*15,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{294.300+240/200/16*18,240/200/16*4,'*26.6667 -50% Flip,*26.6667 200% Invert','len',2},
				{294.300+240/200/16*22,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{294.300+240/200/16*25,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				{294.300+240/200/16*28,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{294.300+240/200/16*31,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				{294.300+240/200/16*34,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				{294.300+240/200/16*37,240/200/16*3,'*26.6667 150% Flip,*26.6667 -200% Invert','len',2},
				{294.300+240/200/16*40,240/200/16*3,'*26.6667 -50% Flip,*26.6667 No Invert','len',2},
				
				{297.450,240/200/4,'*13.3334 No Reverse,*6.6667 No Stealth,*26.6667 -50% Flip,*26.6667 No Invert','len'},
				
				{297.750,400,'*4.1667 1000% Drunk,*4.1667 1000% Tipsy,*4.1667 1000% Bumpy,*4.1667 1000% Tornado,*0.8334 200% Mini','end'},
				
				}
				
				for i = 10.800,17.999,240/200*2 do
					table.insert(prefix_mods,{i,240/200,'*0.8334 Stealth','len'});
					table.insert(prefix_mods,{i+240/200,240/200,'*0.8334 No Stealth','len'});
				end
				
				for i = 110.550,119.499,240/200/2 do
					table.insert(prefix_mods,{i,240/200/4,'*26.6667 -200% Invert','len'});
				end
				
				for i = 120.150,123.749,240/200/2 do
					table.insert(prefix_mods,{i,240/200/4,'*26.6667 -200% Invert','len'});
				end
				
				for i = 124.950,128.549,240/200/2 do
					table.insert(prefix_mods,{i,240/200/4,'*26.6667 -200% Invert','len'});
				end
				
				for i = 147.600,149.999,240/200/4 do
					table.insert(prefix_mods,{i,240/200/8,'*13.3334 Flip,*13.3334 -100% Invert','len'});
					table.insert(prefix_mods,{i+240/200/8,240/200/8,'*13.3334 No Flip,*13.3334 No Invert','len'});
				end
				
				for i = 157.200,158.999,240/200/4 do
					table.insert(prefix_mods,{i,240/200/8,'*13.3334 Flip,*13.3334 -100% Invert','len'});
					table.insert(prefix_mods,{i+240/200/8,240/200/8,'*13.3334 No Flip,*13.3334 No Invert','len'});
				end
				
				for i = 222.075,226.124,240/200/8 do
					table.insert(prefix_mods,{i,240/200/16,'*26.6667 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/200/16,240/200/16,'*26.6667 Tipsy','len'});
				end
				
				for i = 224.550,224.699,240/200/16 do
					table.insert(prefix_mods,{i,240/200/32,'*53.3334 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/200/32,240/200/32,'*53.3334 Tipsy','len'});
				end
				
				for i = 224.850,224.999,240/200/16 do
					table.insert(prefix_mods,{i,240/200/32,'*53.3334 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/200/32,240/200/32,'*53.3334 Tipsy','len'});
				end
				
				for i = 225.150,225.299,240/200/32 do
					table.insert(prefix_mods,{i,240/200/64,'*106.6667 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/200/64,240/200/64,'*106.6667 Tipsy','len'});
				end
				
				for i = 225.450,225.599,240/200/32 do
					table.insert(prefix_mods,{i,240/200/64,'*106.6667 -100% Tipsy','len'});
					table.insert(prefix_mods,{i+240/200/64,240/200/64,'*106.6667 Tipsy','len'});
				end
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			prefix_inc = prefix_inc + 1;
			
			if beat > prefix_firstseenbeat+0.1 then
			
				-----------------------
				-- Player mod resets --
				-----------------------
				GAMESTATE:ApplyGameCommand('mod,clearall')
				
				--------------------------------------------------------------------------------------------
				-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
				--------------------------------------------------------------------------------------------
				for i,v in pairs(prefix_mods) do
					if prefix_time >=v[1] then
						if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
							if table.getn(v) == 5 then
								GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
							else
								GAMESTATE:ApplyGameCommand('mod,'..v[3]);
							end
						end
					end
				end
				
				if beat >= 0 and not checked then
					
					table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
					table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
					checked = true;
					
					SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
					SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
					for i,v in pairs(prefix_plr) do
						if v then
							SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
							SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						end
					end
				end
				
				-------------------------
				-- BEAT SPECIFIC STUFF --
				-------------------------
				if beat >= 4 and beat < 65 then
					for i,v in pairs(prefix_plr) do
						if v then
							v:vibrate();
							v:effectmagnitude(auxvar:getaux(),0,0);
						end
					end
				end
				
				if beat >= 72 and beat < 136 then
					GAMESTATE:ApplyGameCommand('mod,*10000 '..math.sin(beat*math.pi/4)*1000 ..'% Bumpy');
				end
				
				if beat >= 104 and beat < 136 then
					for i,v in pairs(prefix_plr) do
						if v then
							v:rotationy(math.sin(beat*math.pi/8)*30);
						end
					end
				end
				
				if beat >= 144 and beat < 176 then
					GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi/4)*100+100 ..'% Centered',1);
					GAMESTATE:ApplyGameCommand('mod,*10000 '..math.cos(beat*math.pi/4)*1+1 ..'x',1);
					GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi/4)*50+50 ..'% Stealth',1);
					GAMESTATE:ApplyGameCommand('mod,*10000 '..math.cos(beat*math.pi/4)*100+100 ..'% Centered',2);
					GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi/4)*1+1 ..'x',2);
					GAMESTATE:ApplyGameCommand('mod,*10000 '..math.cos(beat*math.pi/4)*50+50 ..'% Stealth',2);
				end
				
				if beat >= 200 and beat < 208 then
					SCREENMAN:GetTopScreen():vibrate();
					SCREENMAN:GetTopScreen():effectmagnitude(0,auxvar:getaux(),0);
				end
				
				if beat >= 208 and beat < 216 then
					GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi/2)*50+550 ..'% Invert');
				end
				
				if beat >= 224 and beat < 232 then
					GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi/2)*50+550 ..'% Invert');
				end
				
				if beat >= 232 and beat < 240 then
					SCREENMAN:GetTopScreen():vibrate();
					SCREENMAN:GetTopScreen():effectmagnitude(0,auxvar:getaux(),0);
				end
				
				if beat >= 240 and beat < 264 then
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*math.sin(beat*math.pi/2)*25 ..'% Mini');
				end
				
				if beat >= 264 and beat < 272 then
					SCREENMAN:GetTopScreen():vibrate();
					SCREENMAN:GetTopScreen():effectmagnitude(0,auxvar:getaux(),0);
				end
				
				if beat >= 288 and beat < 315 then
					for i,v in pairs(prefix_plr) do
						if v then
							if i == 1 then
								v:y(SCREEN_CENTER_Y+(-math.abs(math.cos(beat*math.pi/2)*100))+100);
							end
						end
					end
				end
				
				if beat >= 289 and beat < 316 then
					for i,v in pairs(prefix_plr) do
						if v then
							if i == 2 then
								v:y(SCREEN_CENTER_Y+(-math.abs(math.sin(beat*math.pi/2)*100))+100);
							end
						end
					end
				end
				
				if beat >= 319 and beat < 320.5 then
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*multi ..'% Drunk');
				end
				
				if beat >= 432 and beat < 440 then
					local phase = math.mod(math.floor(beat*4),4) + 1;
					if phase == 4 then
						GAMESTATE:ApplyGameCommand('mod,*10000 -500% Reverse,*10000 250% Split,*10000 250% Cross,*10000 250% Alternate');
					elseif phase == 2 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 250% Split,*10000 -250% Cross,*10000 -250% Alternate');
					elseif phase == 3 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 -250% Cross,*10000 250% Alternate');
					else
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 250% Cross,*10000 -250% Alternate');
					end
				end
				
				if beat >= 440 and beat < 448 then
					local phase = math.mod(math.floor(beat*4),4) + 1;
					if phase == 2 then
						GAMESTATE:ApplyGameCommand('mod,*10000 -500% Reverse,*10000 250% Split,*10000 250% Cross,*10000 250% Alternate');
					elseif phase == 4 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 250% Split,*10000 -250% Cross,*10000 -250% Alternate');
					elseif phase == 3 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 -250% Cross,*10000 250% Alternate');
					else
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 250% Cross,*10000 -250% Alternate');
					end
				end
				
				if beat >= 448 and beat < 456 then
					local phase = math.mod(math.floor(beat*4),4) + 1;
					if phase == 2 then
						GAMESTATE:ApplyGameCommand('mod,*10000 -500% Reverse,*10000 250% Split,*10000 250% Cross,*10000 250% Alternate');
					elseif phase == 4 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 250% Split,*10000 -250% Cross,*10000 -250% Alternate');
					elseif phase == 1 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 -250% Cross,*10000 250% Alternate');
					else
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 250% Cross,*10000 -250% Alternate');
					end
				end
				
				if beat >= 456 and beat < 464 then
					local phase = math.mod(math.floor(beat*4),4) + 1;
					if phase == 4 then
						GAMESTATE:ApplyGameCommand('mod,*10000 -500% Reverse,*10000 250% Split,*10000 250% Cross,*10000 250% Alternate');
					elseif phase == 2 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 250% Split,*10000 -250% Cross,*10000 -250% Alternate');
					elseif phase == 1 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 -250% Cross,*10000 250% Alternate');
					else
						GAMESTATE:ApplyGameCommand('mod,*10000 No Reverse,*10000 -250% Split,*10000 250% Cross,*10000 -250% Alternate');
					end
				end
				
				if beat >= 476 and beat < 490 then
					for i,v in pairs(prefix_plr) do
						if v then
							if i == 1 then
								v:x(SCREEN_CENTER_X+math.cos(beat*math.pi)*-32);
								v:GetChild('Judgment'):x(-160+math.cos(beat*math.pi)*32);
								v:GetChild('Combo'):x(-160+math.cos(beat*math.pi)*32);
								v:z(math.sin(beat*math.pi)*-100);
							else
								v:x(SCREEN_CENTER_X+math.cos(beat*math.pi)*32);
								v:GetChild('Judgment'):x(160+math.cos(beat*math.pi)*-32);
								v:GetChild('Combo'):x(160+math.cos(beat*math.pi)*-32);
								v:z(math.sin(beat*math.pi)*100);
							end
						end
					end
				end
				
				if beat >= 500 and beat < 502 then
					for i,v in pairs(prefix_plr) do
						if v then
							if i == 1 then
								v:x(SCREEN_CENTER_X+math.cos(beat*math.pi)*(-auxvar:getaux()/3.125));
								v:GetChild('Judgment'):x(-160+math.cos(beat*math.pi)*(auxvar:getaux()/3.125));
								v:GetChild('Combo'):x(-160+math.cos(beat*math.pi)*(auxvar:getaux()/3.125));
								v:z(math.sin(beat*math.pi)*auxvar:getaux());
							else
								v:x(SCREEN_CENTER_X+math.cos(beat*math.pi)*(auxvar:getaux()/3.125));
								v:GetChild('Judgment'):x(160+math.cos(beat*math.pi)*(-auxvar:getaux()/3.125));
								v:GetChild('Combo'):x(160+math.cos(beat*math.pi)*(-auxvar:getaux()/3.125));
								v:z(math.sin(beat*math.pi)*-auxvar:getaux());
							end
						end
					end
				end
				
				if beat >= 502 and beat < 522 then
					for i,v in pairs(prefix_plr) do
						if v then
							if i == 1 then
								v:x(SCREEN_CENTER_X+math.cos(beat*math.pi)*-32);
								v:GetChild('Judgment'):x(-160+math.cos(beat*math.pi)*32);
								v:GetChild('Combo'):x(-160+math.cos(beat*math.pi)*32);
								v:z(math.sin(beat*math.pi)*100);
							else
								v:x(SCREEN_CENTER_X+math.cos(beat*math.pi)*32);
								v:GetChild('Judgment'):x(160+math.cos(beat*math.pi)*-32);
								v:GetChild('Combo'):x(160+math.cos(beat*math.pi)*-32);
								v:z(math.sin(beat*math.pi)*-100);
							end
						end
					end
				end
				
				if beat >= 692 and beat < 704 then
					local zoommod = math.mod(beat,4);
					for i,v in pairs(prefix_plr) do
						if v then
							v:zoom((4-zoommod)/4);
						end
					end
				end
				
				if beat >= 720.5 and beat < 721 then
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*100 ..'% Drunk');
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*50+50 ..'% Flip');
					for i,v in pairs(prefix_plr) do
						if v then
							v:skewx(multi);
						end
					end
				end
				
				if beat >= 721.5 and beat < 722 then
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*100 ..'% Drunk');
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*50+50 ..'% Flip');
					for i,v in pairs(prefix_plr) do
						if v then
							v:skewx(multi*0.5);
						end
					end
				end
				
				if beat >= 722.5 and beat < 724 then
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*100 ..'% Drunk');
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*50+50 ..'% Flip');
					for i,v in pairs(prefix_plr) do
						if v then
							v:skewx(multi*0.5);
						end
					end
				end
				
				if beat >= 723 and beat < 723.5 then
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*400 ..'% Drunk');
					for i,v in pairs(prefix_plr) do
						if v then
							v:skewx(multi*1.5);
						end
					end
				end
				
				if beat >= 724 and beat < 736 then
					local zoommod = math.mod(beat,4);
					for i,v in pairs(prefix_plr) do
						if v then
							v:zoom((4-zoommod)/4);
						end
					end
				end
				
				if beat >= 756.5 and beat < 759 or beat >= 772.5 and beat < 775 or beat >= 788.5 and beat < 791 then
					local phase = math.mod(beat,1);
					if phase >= 0 and phase < 0.25 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Flip,*10000 Invert,*10000 95% Stealth');
					elseif phase >= 0.25 and phase < 0.5 then
						GAMESTATE:ApplyGameCommand('mod,*10000 Flip,*10000 No Invert,*10000 95% Stealth');
					elseif phase >= 0.5 and phase < 0.75 then
						GAMESTATE:ApplyGameCommand('mod,*10000 Flip,*10000 -100% Invert,*10000 95% Stealth');
					else
						GAMESTATE:ApplyGameCommand('mod,*10000 No Flip,*10000 No Invert,*10000 50% Stealth');
					end
				end
				
				if beat >= 760 and beat < 763 or beat >= 776 and beat < 779 or beat >= 792 and beat < 795 then
					local phase = math.mod(beat,1);
					if phase >= 0 and phase < 0.25 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Flip,*10000 Invert,*10000 95% Stealth');
					elseif phase >= 0.25 and phase < 0.5 then
						GAMESTATE:ApplyGameCommand('mod,*10000 Flip,*10000 No Invert,*10000 95% Stealth');
					elseif phase >= 0.5 and phase < 0.75 then
						GAMESTATE:ApplyGameCommand('mod,*10000 Flip,*10000 -100% Invert,*10000 95% Stealth');
					else
						GAMESTATE:ApplyGameCommand('mod,*10000 No Flip,*10000 No Invert,*10000 50% Stealth');
					end
				end
				
				if beat >= 764 and beat < 767 or beat >= 780 and beat < 783 or beat >= 796 and beat < 799 then
					local phase = math.mod(beat,1);
					if phase >= 0 and phase < 0.25 then
						GAMESTATE:ApplyGameCommand('mod,*10000 No Flip,*10000 Invert,*10000 95% Stealth');
					elseif phase >= 0.25 and phase < 0.5 then
						GAMESTATE:ApplyGameCommand('mod,*10000 Flip,*10000 No Invert,*10000 95% Stealth');
					elseif phase >= 0.5 and phase < 0.75 then
						GAMESTATE:ApplyGameCommand('mod,*10000 Flip,*10000 -100% Invert,*10000 95% Stealth');
					else
						GAMESTATE:ApplyGameCommand('mod,*10000 No Flip,*10000 No Invert,*10000 50% Stealth');
					end
				end
				
				if beat >= 810.5 and beat < 811 or beat >= 814.5 and beat < 815 or beat >= 818.5 and beat < 819 then
					local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
					GAMESTATE:ApplyGameCommand('mod,*10000 '..multi*100 ..'% Tornado');
				end
				
				if beat >= 860 and beat < 924 then
					for i,v in pairs(prefix_plr) do
						if v then
							if i == 1 then
								v:z(math.sin(beat*math.pi)*-150);
							else
								v:z(math.sin(beat*math.pi)*150);
							end
						end
					end
				end
				
				if beat >= 924 and beat < 956 then
					for i,v in pairs(prefix_plr) do
						if v then
							if i == 1 then
								v:z(math.sin(beat*math.pi)*-300);
							else
								v:z(math.sin(beat*math.pi)*300);
							end
						end
					end
				end
				
				--------------------------------------------------------------
				-- Message reader to make specific values of the actor aux. --
				--------------------------------------------------------------
				if prefix_curmessage <= table.getn(prefix_messages) then
                    if prefix_time >= prefix_messages[prefix_curmessage][1] then
                        if prefix_messages[prefix_curmessage][3] or prefix_time < prefix_messages[prefix_curmessage][1]+2 then
                            MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
                        end
                        prefix_curmessage = prefix_curmessage + 1;
                    end
                end
				
				---------------------------------------
				-- ACTION RPGS AINT GOT SHIT ON THIS --
				---------------------------------------
				if beat > prefix_firstseenbeat+0.1 then -- performance coding!! --
					while prefix_curaction<=table.getn(prefix_actions) and GAMESTATE:GetSongBeat()>=prefix_actions[prefix_curaction][1] do
						if prefix_actions[prefix_curaction][3] or GAMESTATE:GetSongBeat() < prefix_actions[prefix_curaction][1]+2 then
							if type(prefix_actions[prefix_curaction][2]) == 'function' then
								prefix_actions[prefix_curaction][2]()
							elseif type(prefix_actions[prefix_curaction][2]) == 'string' then
								MESSAGEMAN:Broadcast(prefix_actions[prefix_curaction][2]);
							end
						end
						prefix_curaction = prefix_curaction+1;
					end
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (0.012 - 0.907) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		DynastyVibMessageCommand="finishtweening;aux,50;linear,240/200/16*3;aux,0"
		DynastyLongVibMessageCommand="finishtweening;aux,0;linear,240/200/4*3;aux,50;linear,240/200/4*3;aux,0"
		EggScreenVibMessageCommand="finishtweening;aux,200;linear,240/200/16*3;aux,0"
		TriggerBeepMessageCommand="finishtweening;aux,1000;linear,240/200/4;aux,0"
		EclairAuxMessageCommand="finishtweening;aux,0;linear,240/200/8;aux,100"
		BurningLoveMessageCommand="finishtweening;aux,0;linear,240/200*5;aux,1"
		DynastyShiftMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local randomx1 = math.random(-30,30);
				local randomy1 = math.random(-30,30);
				local randomz1 = math.random(-30,30);
				local randomx2 = math.random(-30,30);
				local randomy2 = math.random(-30,30);
				local randomz2 = math.random(-30,30);
				if v then
					if i == 1 then
						v:decelerate(240/200/16);
						v:rotationx(randomx1);
						v:rotationy(randomy1);
						v:rotationz(randomz1);
					else
						v:decelerate(240/200/16);
						v:rotationx(randomx2);
						v:rotationy(randomy2);
						v:rotationz(randomz2);
					end
				end
			end
		end"
		DynastyResetMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/200/4*6);
					v:rotationx(0);
					v:rotationy(0);
					v:rotationz(0);
				end
			end
		end"
		TriggerYeahOne8thMessageCommand="%function()
			local rand = math.random(1,4);
			for i,v in pairs(prefix_plr) do
				if v then
					if rand == 1 then
						if i == 1 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(0);
							v:linear(240/200/16);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomy(0);
							v:y(SCREEN_HEIGHT);
						end
					elseif rand == 2 then
						if i == 1 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X+128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X-128);
						end
					elseif rand == 3 then
						if i == 1 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_HEIGHT);
							v:linear(240/200/16);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomy(0);
							v:y(0);
						end
					else
						if i == 1 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X-128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X+128);
						end
					end
				end
			end
		end"
		TriggerYeahTwo8thMessageCommand="%function()
			local rand = math.random(1,4);
			for i,v in pairs(prefix_plr) do
				if v then
					if rand == 1 then
						if i == 2 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(0);
							v:linear(240/200/16);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomy(0);
							v:y(SCREEN_HEIGHT);
						end
					elseif rand == 2 then
						if i == 2 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X+128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X-128);
						end
					elseif rand == 3 then
						if i == 2 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_HEIGHT);
							v:linear(240/200/16);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomy(0);
							v:y(0);
						end
					else
						if i == 2 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X-128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/16);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X+128);
						end
					end
				end
			end
		end"
		TriggerYeahOne16thMessageCommand="%function()
			local rand = math.random(1,4);
			for i,v in pairs(prefix_plr) do
				if v then
					if rand == 1 then
						if i == 1 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(0);
							v:linear(240/200/32);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomy(0);
							v:y(SCREEN_HEIGHT);
						end
					elseif rand == 2 then
						if i == 1 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X+128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X-128);
						end
					elseif rand == 3 then
						if i == 1 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_HEIGHT);
							v:linear(240/200/32);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomy(0);
							v:y(0);
						end
					else
						if i == 1 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X-128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X+128);
						end
					end
				end
			end
		end"
		TriggerYeahTwo16thMessageCommand="%function()
			local rand = math.random(1,4);
			for i,v in pairs(prefix_plr) do
				if v then
					if rand == 1 then
						if i == 2 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(0);
							v:linear(240/200/32);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomy(0);
							v:y(SCREEN_HEIGHT);
						end
					elseif rand == 2 then
						if i == 2 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X+128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X-128);
						end
					elseif rand == 3 then
						if i == 2 then
							v:zoomx(1);
							v:zoomy(0);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_HEIGHT);
							v:linear(240/200/32);
							v:zoomy(1);
							v:y(SCREEN_CENTER_Y);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomy(0);
							v:y(0);
						end
					else
						if i == 2 then
							v:zoomx(0);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X-128);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(1);
							v:x(SCREEN_CENTER_X);
						else
							v:zoomx(1);
							v:zoomy(1);
							v:x(SCREEN_CENTER_X);
							v:y(SCREEN_CENTER_Y);
							v:linear(240/200/32);
							v:zoomx(0);
							v:x(SCREEN_CENTER_X+128);
						end
					end
				end
			end
		end"
		EggZoom1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:zoomz(100);
						v:decelerate(240/200/4);
						v:zoomz(1);
					else
						v:zoomz(-100);
						v:decelerate(240/200/4);
						v:zoomz(1);
					end
				end
			end
		end"
		EggZoom2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:zoomz(-100);
						v:decelerate(240/200/4);
						v:zoomz(1);
					else
						v:zoomz(100);
						v:decelerate(240/200/4);
						v:zoomz(1);
					end
				end
			end
		end"
		TriggerWooMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:skewx(-0.5);
						v:decelerate(240/200/4);
						v:skewx(0);
					else
						v:skewx(0.5);
						v:decelerate(240/200/4);
						v:skewx(0);
					end
				end
			end
		end"
		TriggerWWooMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:skewx(0.5);
						v:decelerate(240/200/8);
						v:skewx(0);
						v:sleep(0);
						v:skewx(-0.5);
						v:decelerate(240/200/4);
						v:skewx(0);
					else
						v:skewx(-0.5);
						v:decelerate(240/200/8);
						v:skewx(0);
						v:sleep(0);
						v:skewx(0.5);
						v:decelerate(240/200/4);
						v:skewx(0);
					end
				end
			end
		end"
		TriggerW-WooMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:skewx(0.5);
						v:decelerate(240/200/16*3);
						v:skewx(0);
						v:sleep(0);
						v:skewx(-0.5);
						v:decelerate(240/200/4);
						v:skewx(0);
					else
						v:skewx(-0.5);
						v:decelerate(240/200/16*3);
						v:skewx(0);
						v:sleep(0);
						v:skewx(0.5);
						v:decelerate(240/200/4);
						v:skewx(0);
					end
				end
			end
		end"
		EclairShimmyRightMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:linear(240/200/16);
					v:addx(64);
				end
			end
		end"
		EclairShimmyLeftMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:linear(240/200/16);
					v:addx(-64);
				end
			end
		end"
		PanicDJMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:linear(240/200/16);
					v:zoomx(0.4);
					v:sleep(240/200/16);
					v:linear(240/200/16);
					v:zoomx(0.55);
					v:rotationz(10);
					v:linear(240/200/16);
					v:zoomx(0.7);
					v:rotationz(-20);
					v:linear(240/200/16);
					v:zoomx(0.85);
					v:rotationz(30);
					v:linear(240/200/16);
					v:zoomx(1);
					v:rotationz(0);
				end
			end
		end"
		GottDoors1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:zoom(0);
						v:linear(240/200/8);
						v:zoom(1);
					else
						v:zoom(1);
						v:sleep(240/200/8);
						v:zoom(0);
					end
				end
			end
		end"
		GottDoors2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:zoom(0);
						v:linear(240/200/8);
						v:zoom(1);
					else
						v:zoom(1);
						v:sleep(240/200/8);
						v:zoom(0);
					end
				end
			end
		end"
		BurningKicks8thsMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:zoom(auxvar:getaux());
					v:linear(240/200/8);
					v:zoom(0);
				end
			end
		end"
		BurningKicks16thsMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:zoom(auxvar:getaux());
					v:linear(240/200/16);
					v:zoom(0);
				end
			end
		end"
	/>
	
	<Layer
		File="test"
		OnCommand="stretchto,0,0,SCREEN_WIDTH,SCREEN_HEIGHT;diffusealpha,0"
		BurningBeepMessageCommand="%function(self)
			self:diffusealpha(1);
			self:sleep(240/200/4);
			self:diffusealpha(0);
		end"
	/>
	
</children></ActorFrame>