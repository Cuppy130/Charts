<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,128.05"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{0.441,'TurnUpTheMusic'},

					{3.529,'Vib'},

					{0.441+240/136*2,'TurnUpTheMusic'},

					{7.059,'Vib'},

					{0.441+240/136*4,'TurnUpTheMusic'},

					{10.588,'Vib'},

					{0.441+240/136*6,'TurnUpTheMusic'},

					{14.117,'Vib'},

					{0.441+240/136*8,'TurnUpTheMusic'},
					{0.441+240/136*9,'TurnUpTheMusic'},
					{0.441+240/136*10,'TurnUpTheMusic'},
					{0.441+240/136*11,'TurnUpTheMusic'},

					{0.441+240/136/2*24,'TurnUpTheMusic'},
					{0.441+240/136/2*25,'TurnUpTheMusic'},
					{0.441+240/136/2*26,'TurnUpTheMusic'},
					{0.441+240/136/2*27,'TurnUpTheMusic'},

					{0.441+240/136/4*56,'TurnUp'},
					{0.441+240/136/4*57,'TurnUp'},
					{0.441+240/136/4*58,'TurnUp'},
					{0.441+240/136/4*59,'TurnUp'},

					{28.676,'Jump'},
					{28.676+240/136/4*1,'Jump'},
					{28.676+240/136/4*2,'Jump'},

					{30.000,'UpDown'},

					{28.676+240/136*2,'Jump'},
					{28.676+240/136*2+240/136/4*1,'Jump'},
					{28.676+240/136*2+240/136/4*2,'Jump'},

					{33.529,'UpDown'},

					{28.676+240/136*4,'Jump'},
					{28.676+240/136*4+240/136/4*1,'Jump'},
					{28.676+240/136*4+240/136/4*2,'Jump'},

					{37.059,'UpDown'},

					{28.676+240/136*6,'Jump'},
					{28.676+240/136*6+240/136/4*1,'Jump'},
					{28.676+240/136*6+240/136/4*2,'Jump'},

					{40.588,'UpDown'},

					{99.265,'Jump'},
					{99.265+240/136/4*1,'Jump'},
					{99.265+240/136/4*2,'Jump'},

					{99.265+240/136/4*3,'JumpHold'},

					{99.265+240/136*2,'Jump'},
					{99.265+240/136*2+240/136/4*1,'Jump'},
					{99.265+240/136*2+240/136/4*2,'Jump'},

					{99.265+240/136*2+240/136/4*3,'JumpHold'},

					{99.265+240/136*4,'Jump'},
					{99.265+240/136*4+240/136/4*1,'Jump'},
					{99.265+240/136*4+240/136/4*2,'Jump'},

					{99.265+240/136*4+240/136/4*3,'JumpHold'},

					{99.265+240/136*6,'Jump'},
					{99.265+240/136*6+240/136/4*1,'Jump'},
					{99.265+240/136*6+240/136/4*2,'Jump'},

					{99.265+240/136*7,'Jump'},
					{99.265+240/136*7+240/136/4*1,'Jump'},
					{99.265+240/136*7+240/136/4*2,'Jump'},
					{99.265+240/136*7+240/136/4*3,'Hey'},

					{113.382,'Jump'},
					{113.382+240/136/4*1,'Jump'},
					{113.382+240/136/4*2,'Jump'},

					{113.382+240/136/4*3,'JumpHold'},

					{113.382+240/136*2,'Jump'},
					{113.382+240/136*2+240/136/4*1,'Jump'},
					{113.382+240/136*2+240/136/4*2,'Jump'},

					{113.382+240/136*2+240/136/4*3,'JumpHold'},

					{113.382+240/136*4,'Jump'},
					{113.382+240/136*4+240/136/4*1,'Jump'},
					{113.382+240/136*4+240/136/4*2,'Jump'},

					{113.382+240/136*4+240/136/4*3,'JumpHold'},

					{113.382+240/136*6,'Jump'},
					{113.382+240/136*6+240/136/4*1,'Jump'},
					{113.382+240/136*6+240/136/4*2,'Jump'},

					{113.382+240/136*7,'Jump'},
					{113.382+240/136*7+240/136/4*1,'Jump'},
					{113.382+240/136*7+240/136/4*2,'Jump'},
					{113.382+240/136*7+240/136/4*3,'Hey'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2.5x,-999999% Cover,*10000 No Beat','end'},

				{1.765,240/136/8,'*3.2 67% Drunk','len'},
				{1.765+240/136/8,240/136/8,'*9.1 -133% Drunk','len'},
				{1.765+240/136/8*2,240/136/8,'*12.2 200% Drunk','len'},
				{1.765+240/136/8*3,240/136/8,'*18.2 -200% Drunk','len'},
				{1.765+240/136/8*4,240/136/8,'*18.2 200% Drunk','len'},
				{1.765+240/136/8*5,240/136/8,'*18.2 -200% Drunk','len'},
				{1.765+240/136/8*6,240/136/8,'*9.1 No Drunk','len'},

				{5.294,240/136/8,'*3.2 -67% Drunk','len'},
				{5.294+240/136/8,240/136/8,'*9.1 133% Drunk','len'},
				{5.294+240/136/8*2,240/136/8,'*12.2 -200% Drunk','len'},
				{5.294+240/136/8*3,240/136/8,'*18.2 200% Drunk','len'},
				{5.294+240/136/8*4,240/136/8,'*18.2 -200% Drunk','len'},
				{5.294+240/136/8*5,240/136/8,'*18.2 200% Drunk','len'},
				{5.294+240/136/8*6,240/136/8,'*9.1 No Drunk','len'},

				{8.823,240/136/8,'*3.2 67% Drunk','len'},
				{8.823+240/136/8,240/136/8,'*9.1 -133% Drunk','len'},
				{8.823+240/136/8*2,240/136/8,'*12.2 200% Drunk','len'},
				{8.823+240/136/8*3,240/136/8,'*18.2 -200% Drunk','len'},
				{8.823+240/136/8*4,240/136/8,'*18.2 200% Drunk','len'},
				{8.823+240/136/8*5,240/136/8,'*18.2 -200% Drunk','len'},
				{8.823+240/136/8*6,240/136/8,'*9.1 No Drunk','len'},

				{12.353,240/136/8,'*3.2 -67% Drunk','len'},
				{12.353+240/136/8,240/136/8,'*9.1 133% Drunk','len'},
				{12.353+240/136/8*2,240/136/8,'*12.2 -200% Drunk','len'},
				{12.353+240/136/8*3,240/136/8,'*9.1 No Drunk','len'},

				{13.456,240/136/16,'*9.1 Flip','len'},
				{13.456+240/136/16,240/136/16*3,'*9.1 Flip,*9.1 -100% Invert','len'},

				{13.897,240/136/32,'*10000 No Flip,*10000 No Invert','len'},
				{13.897+240/136/32,240/136/32,'*10000 Flip,*10000 No Invert','len'},
				{13.897+240/136/32*2,240/136/32,'*10000 No Flip,*10000 Invert','len'},
				{13.897+240/136/32*3,240/136/32,'*10000 Flip,*10000 No -100% Invert','len'},
				{13.897+240/136/32*4,240/136/32*8,'*10000 No Flip,*10000 No Invert','len'},

				{15.882,240/136/8,'*9.1 200% Drunk','len'},
				{15.882+240/136/8,240/136/8,'*9.1 No Drunk','len'},

				{15.882+240/136,240/136/8,'*9.1 -200% Drunk','len'},
				{15.882+240/136+240/136/8,240/136/8,'*9.1 No Drunk','len'},

				{15.882+240/136*2,240/136/8,'*9.1 200% Drunk','len'},
				{15.882+240/136*2+240/136/8,240/136/8,'*9.1 No Drunk','len'},

				{15.882+240/136*3,240/136/8,'*9.1 -200% Drunk','len'},
				{15.882+240/136*3+240/136/8,240/136/8,'*9.1 No Drunk','len'},

				{26.912,240/136/8,'*12.2 200% Drunk','len'},
				{26.912+240/136/8*1,240/136/8,'*18.2 -200% Drunk','len'},
				{26.912+240/136/8*2,240/136/8,'*18.2 200% Drunk','len'},
				{26.912+240/136/8*3,240/136/8,'*18.2 -200% Drunk','len'},
				{26.912+240/136/8*4,240/136/8,'*9.1 No Drunk','len'},

				{28.235,42.794,'*9.1 Centered,*10 1.75x','end'},
				{28.235,240/136/4,'*9.1 -100% Mini,*0.91 10% Flip','len'},

				{28.676,42.794,'*1.52 -100% Mini,*0.152 10% Flip','end'},

				{28.676,240/136/4*3,'*1.52 Mini,*0.152 -10% Flip','len'},
				{28.676+240/136*2,240/136/4*3,'*1.52 Mini,*0.152 -10% Flip','len'},
				{28.676+240/136*4,240/136/4*3,'*1.52 Mini,*0.152 -10% Flip','len'},
				{28.676+240/136*6,240/136/4*3,'*1.52 Mini,*0.152 -10% Flip','len'},

				{30.000,240/136/8,'*3.2 67% Drunk','len'},
				{30.000+240/136/8,240/136/8,'*9.1 -133% Drunk','len'},
				{30.000+240/136/8*2,240/136/8,'*12.2 200% Drunk','len'},
				{30.000+240/136/8*3,240/136/8,'*18.2 -200% Drunk','len'},
				{30.000+240/136/8*4,240/136/8,'*18.2 200% Drunk','len'},
				{30.000+240/136/8*5,240/136/8,'*18.2 -200% Drunk','len'},
				{30.000+240/136/8*6,240/136/8,'*9.1 No Drunk','len'},

				{33.529,240/136/8,'*3.2 -67% Drunk','len'},
				{33.529+240/136/8,240/136/8,'*9.1 133% Drunk','len'},
				{33.529+240/136/8*2,240/136/8,'*12.2 -200% Drunk','len'},
				{33.529+240/136/8*3,240/136/8,'*18.2 200% Drunk','len'},
				{33.529+240/136/8*4,240/136/8,'*18.2 -200% Drunk','len'},
				{33.529+240/136/8*5,240/136/8,'*18.2 200% Drunk','len'},
				{33.529+240/136/8*6,240/136/8,'*9.1 No Drunk','len'},

				{37.059,240/136/8,'*3.2 67% Drunk','len'},
				{37.059+240/136/8,240/136/8,'*9.1 -133% Drunk','len'},
				{37.059+240/136/8*2,240/136/8,'*12.2 200% Drunk','len'},
				{37.059+240/136/8*3,240/136/8,'*18.2 -200% Drunk','len'},
				{37.059+240/136/8*4,240/136/8,'*18.2 200% Drunk','len'},
				{37.059+240/136/8*5,240/136/8,'*18.2 -200% Drunk','len'},
				{37.059+240/136/8*6,240/136/8,'*9.1 No Drunk','len'},

				{40.588,240/136/8,'*3.2 -67% Drunk','len'},
				{40.588+240/136/8,240/136/8,'*9.1 133% Drunk','len'},
				{40.588+240/136/8*2,240/136/8,'*12.2 -200% Drunk','len'},
				{40.588+240/136/8*3,240/136/8,'*18.2 200% Drunk','len'},
				{40.588+240/136/8*4,240/136/8,'*18.2 -200% Drunk','len'},
				{40.588+240/136/8*5,240/136/8,'*18.2 200% Drunk','len'},
				{40.588+240/136/8*6,240/136/8,'*9.1 No Drunk','len'},

				{42.353,240/136/4+0.050,'*2.5 Stealth,*2.5 Dark','len'},
				{42.353+240/136/4,240/136/4,'*10000 No Centered,*10000 No Flip,*10000 No Mini','len'},
				{42.353+240/136/4+0.050,240/136/4,'*2.5 No Stealth,*2.5 No Dark','len'},

				{42.794,240/136*8,'*10000 2x,*10000 200% Wave,*10000 50% Drunk','len'},
				{56.912-240/136/4,240/136*8,'2x,*4.6 -200% Wave,*0.6 50% Tipsy,*0.6 No Drunk','len'},
				{56.912+240/136*8-240/136/4,240/136/4,'*4.6 No Wave,*2.3 No Drunk,*2.3 2.5x','len'},

				{71.029,240/136/8*3,'*1.6 Brake','len'},
				{71.029+240/136/8*3,240/136/16,'*9.1 No Brake','len'},
				{71.029+240/136/16*7,240/136/16*7,'*1.3 Brake','len'},
				{71.029+240/136/8*7,240/136/8,'*4.6 No Brake','len'},

				{72.794,240/136/2,'*0.57 50% Tornado','len'},
				{72.794+240/136/2,240/136/2,'*0.57 No Tornado','len'},

				{74.559,240/136/8*3,'*1.6 Brake','len'},
				{74.559+240/136/8*3,240/136/16,'*9.1 No Brake','len'},
				{74.559+240/136/16*7,240/136/16*7,'*1.3 Brake','len'},
				{74.559+240/136/8*7,240/136/8,'*4.6 No Brake','len'},

				{76.323,240/136/2,'*0.57 50% Tornado','len'},
				{76.323+240/136/2,240/136/2,'*0.57 No Tornado','len'},

				{78.088,240/136/8*3,'*1.6 Brake','len'},
				{78.088+240/136/8*3,240/136/16,'*9.1 No Brake','len'},
				{78.088+240/136/16*7,240/136/16*7,'*1.3 Brake','len'},
				{78.088+240/136/8*7,240/136/8,'*4.6 No Brake','len'},

				{79.853,240/136/2,'*0.57 50% Tornado','len'},
				{79.853+240/136/2,240/136/2,'*0.57 No Tornado','len'},

				{81.617,240/136/8*3,'*1.6 Brake','len'},
				{81.617+240/136/8*3,240/136/16,'*9.1 No Brake','len'},
				{81.617+240/136/16*7,240/136/16*7,'*1.3 Brake','len'},
				{81.617+240/136/8*7,240/136/8,'*4.6 No Brake','len'},

				{83.382,240/136/2,'*0.57 50% Tornado','len'},
				{83.382+240/136/2,240/136/2,'*0.57 No Tornado','len'},

				{85.147,240/136/8*3,'*1.6 Brake','len'},
				{85.147+240/136/8*3,240/136/16,'*9.1 No Brake','len'},
				{85.147+240/136/16*7,240/136/16*7,'*1.3 Brake','len'},
				{85.147+240/136/8*7,240/136/8,'*4.6 No Brake','len'},

				{86.912,240/136/2,'*1.12 Tornado','len'},
				{86.912+240/136/2,240/136/2,'*1.12 No Tornado','len'},

				{88.676,240/136/8*3,'*1.6 Brake','len'},
				{88.676+240/136/8*3,240/136/16,'*9.1 No Brake','len'},
				{88.676+240/136/16*7,240/136/16*7,'*1.3 Brake','len'},
				{88.676+240/136/8*7,240/136/8,'*4.6 No Brake','len'},

				{90.441,240/136/2,'*1.12 Tornado','len'},
				{90.441+240/136/2,240/136/2,'*1.12 No Tornado','len'},

				{92.206,240/136/2,'*2.75 0x','len'},
				{92.206+240/136/2,240/136/2,'*2.75 2.5x','len'},

				{93.970,240/136/2,'*1.12 Tornado','len'},
				{93.970+240/136/2,240/136/2,'*1.12 No Tornado','len'},

				{95.735,240/136/16,'*72.6 400% Drunk,*72.6 400% Tipsy','len'},
				{95.735+240/136/16,240/136/16,'*72.6 No Drunk,*72.6 No Tipsy','len'},

				{95.956,240/136/16,'*72.6 -400% Drunk,*72.6 -400% Tipsy','len'},
				{95.956+240/136/16,240/136/16,'*72.6 No Drunk,*72.6 No Tipsy','len'},

				{96.287,240/136/16,'*72.6 400% Drunk,*72.6 400% Tipsy','len'},
				{96.287+240/136/16,240/136/16,'*72.6 No Drunk,*72.6 No Tipsy','len'},

				{96.617,240/136/16,'*72.6 -400% Drunk,*72.6 -400% Tipsy','len'},
				{96.617+240/136/16,240/136/16,'*72.6 No Drunk,*72.6 No Tipsy','len'},

				{96.838,240/136/16,'*72.6 400% Drunk,*72.6 400% Tipsy','len'},
				{96.838+240/136/16,240/136/16,'*145.1 -400% Drunk,*145.1 -400% Tipsy','len'},
				{96.838+240/136/8,240/136/16,'*72.6 No Drunk,*72.6 No Tipsy','len'},

				{97.169,240/136/16,'*72.6 400% Drunk,*72.6 400% Tipsy','len'},
				{97.169+240/136/16,240/136/16,'*72.6 No Drunk,*72.6 No Tipsy','len'},

				{97.390,240/136/16,'*72.6 -400% Drunk,*72.6 -400% Tipsy','len'},
				{97.390+240/136/16,240/136/16,'*145.1 400% Drunk,*145.1 400% Tipsy','len'},
				{97.390+240/136/8,240/136/16,'*72.6 No Drunk,*72.6 No Tipsy','len'},

				{97.720,240/136/16,'*72.6 -400% Drunk,*72.6 -400% Tipsy','len'},
				{97.720+240/136/16,240/136/16,'*72.6 400% No Drunk,*72.6 400% No Tipsy','len'},

				{97.941,240/136/2,'*11.4 1000% Bumpy','len'},

				{98.823,200,'*9.1 Centered','end'},
				{98.823,240/136/4,'*9.1 -100% Mini,*0.91 10% Flip,*45.4 No Bumpy','len'},

				{99.265,200,'*4.54 -100% Mini,*0.454 10% Flip','end'},

				{111.617,240/136/4*4,'*1.52 -100% Mini,*0.152 10% Flip','len'},

				{99.265,240/136/4*7,'*1.52 Mini,*0.152 -10% Flip','len'},
				{99.265+240/136*2,240/136/4*7,'*1.52 Mini,*0.152 -10% Flip','len'},
				{99.265+240/136*4,240/136/4*7,'*1.52 Mini,*0.152 -10% Flip','len'},
				{99.265+240/136*6,240/136/4*4,'*1.52 Mini,*0.152 -10% Flip','len'},

				{125.735,240/136/4*4,'*1.52 -100% Mini,*0.152 10% Flip','len'},

				{113.382,240/136/4*7,'*1.52 Mini,*0.152 -10% Flip','len'},
				{113.382+240/136*2,240/136/4*7,'*1.52 Mini,*0.152 -10% Flip','len'},
				{113.382+240/136*4,240/136/4*7,'*1.52 Mini,*0.152 -10% Flip','len'},
				{113.382+240/136*6,240/136/4*4,'*1.52 Mini,*0.152 -10% Flip','len'},

				{127.500,200,'*1.14 Dark','end'},



				}
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						
					end
				end
			end			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 0 and beat < 29 or beat >= 32 and beat < 63 then
				for i,v in pairs(prefix_plr) do
					if v then
						GAMESTATE:ApplyGameCommand('mod,*10000 -'..auxvar:getaux() ..'% Mini');
						GAMESTATE:ApplyGameCommand('mod,*10000 '..(auxvar:getaux()/10) ..'% Flip');
					end
				end
			end

			if beat >= 7 and beat < 8 or beat >= 15 and beat < 16 or beat >= 23 and beat < 24 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:vibrate();
						v:effectmagnitude(auxvar2:getaux(),auxvar2:getaux(),auxvar2:getaux());
					end
				end
			end

			if beat >= 64 and beat < 96 or beat >= 224 and beat < 252 or beat >= 224 and beat < 284 then
				for i,v in pairs(prefix_plr) do
					if v then
						GAMESTATE:ApplyGameCommand('mod,*10000 '..(100-auxvar:getaux()) ..'% Centered');
					end
				end
			end

			if beat >= 252 and beat < 255 or beat >= 284 and beat < 287 then
				for i,v in pairs(prefix_plr) do
					if v then
						GAMESTATE:ApplyGameCommand('mod,*10000 '..(100-auxvar:getaux()) ..'% Centered');
						GAMESTATE:ApplyGameCommand('mod,*10000 '..2*auxvar:getaux() ..'% Distant');
					end
				end
			end

			if beat >= 255 and beat < 256 or beat >= 287 and beat < 288 then
				for i,v in pairs(prefix_plr) do
					if v then
						GAMESTATE:ApplyGameCommand('mod,*10000 '..2*auxvar:getaux() ..'% Brake');
					end
				end
			end

			if beat >= 228 and beat < 232 or beat >= 268 and beat < 272 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..math.sin(beat*math.pi)*15 ..'% Alternate,*10000 '..math.sin(beat*math.pi)*-7.5 ..'% Reverse');
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi)*60+60 ..'% Invert');
			end

			if beat >= 236 and beat < 240 or beat >= 276 and beat < 280 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..math.sin(beat*math.pi)*15 ..'% Cross,*10000 '..math.sin(beat*math.pi)*-7.5 ..'% Reverse');
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi)*60+60 ..'% Invert');
			end

			if beat >= 244 and beat < 248 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.sin(beat*math.pi)*15 ..'% Alternate,*10000 '..-math.sin(beat*math.pi)*-7.5 ..'% Reverse');
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi)*60+60 ..'% Invert');
			end

			if beat >= 260 and beat < 264 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.sin(beat*math.pi)*15 ..'% Cross,*10000 '..-math.sin(beat*math.pi)*-7.5 ..'% Reverse');
				GAMESTATE:ApplyGameCommand('mod,*10000 '..-math.cos(beat*math.pi)*60+60 ..'% Invert');
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.429 - 0.002) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		SkewTwitchMessageCommand="finishtweening;aux,0;linear,9.6;aux,1.5;linear,1.6;aux,0"
		TurnUpTheMusicMessageCommand="finishtweening;aux,0;decelerate,240/136/4;aux,200;accelerate,240/136/4;aux,0"
		TurnUpMessageCommand="finishtweening;aux,0;decelerate,240/136/8;aux,200;accelerate,240/136/8;aux,0"
		JumpMessageCommand="finishtweening;aux,0;decelerate,240/136/8;aux,100;accelerate,240/136/8;aux,0"
		JumpHoldMessageCommand="finishtweening;aux,0;decelerate,240/136/4;aux,100;sleep,240/136/4*3;accelerate,240/136/4;aux,0"
		UpDownMessageCommand="finishtweening;aux,0;linear,240/136/8*3;aux,100;linear,240/136/8*3;aux,0"
		HeyMessageCommand="finishtweening;aux,0;decelerate,240/136/8;aux,100;accelerate,240/136/8;aux,0"
	/>
	
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar2 = self; self:hidden(1) end"
		VibMessageCommand="finishtweening;aux,0;linear,240/136/16;aux,25;linear,240/136/16;aux,0"
	/>
	
</children></ActorFrame>