<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,115.47"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{23.351,'WubWah'},
					{24.648,'WubWuhDub'},
					{28.216,'Yoy'},
					{82.054,'Brrr'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2.25x,-999999% Cover,*10000 No Beat','end'},

				{0.324,240/185*7-240/185/8,'*1.55 Drunk,*1.55 Tipsy,*1.55 90% Stealth','len'},

				{8.756,240/185/2,'*1.55 No Drunk,*1.55 No Tipsy,*1.3875 No Stealth','len'},

				{9.405,240/185/8,'*9.25 150% Mini,*0.925 -15% Flip','len'},
				{9.405+240/185/8,240/185/8,'*9.25 No Mini,*0.925 No Flip','len'},
				{9.405+240/185/8*2,240/185/8,'*9.25 150% Mini,*0.925 -15% Flip','len'},
				{9.405+240/185/8*3,240/185/8,'*9.25 No Mini,*0.925 No Flip','len'},

				{10.054,240/185/4,'*6.167 -200% Mini,*0.6167 20% Flip,*6.167 Stealth,*6.167 Dark','len'},
				{10.216,240/185/4,'*10000 750% Beat','len'},
				{10.378,240/185/4,'*10000 50% Stealth,*10000 No Mini,*10000 No Mini,*10000 No Dark','len'},

				{10.702,240/185/8,'*4 50% Flip','len'},
				{10.702+240/185/8,240/185/8,'*4 No Flip','len'},
				{10.702+240/185/8*3,240/185/8,'*8 100.01% Reverse','len'},
				{10.702+240/185/8*4,240/185/8,'*8 No Reverse,*4 50% Split,*4 50% Cross,*4 50% Alternate','len'},
				{10.702+240/185/8*5,240/185/8,'*4 50% Split,*4 No Cross,*4 No Alternate','len'},
				{10.702+240/185/8*6,240/185/8,'*4 50% Split,*4 -50% Cross,*4 50% Alternate','len'},
				{10.702+240/185/8*7,240/185/8,'*4 No Split,*4 No Cross,*4 No Alternate','len'},

				{12.000,240/185/8,'*4 50% Flip','len'},
				{12.000+240/185/8,240/185/8,'*4 No Flip','len'},
				{12.000+240/185/8*3,240/185/8,'*8 100.01% Reverse','len'},
				{12.000+240/185/8*4,240/185/8,'*8 No Reverse,*4 50% Split,*4 50% Cross,*4 50% Alternate','len'},
				{12.000+240/185/8*5,240/185/8,'*4 50% Split,*4 No Cross,*4 No Alternate','len'},
				{12.000+240/185/8*6,240/185/8,'*4 50% Split,*4 -50% Cross,*4 50% Alternate','len'},
				{12.000+240/185/8*7,240/185/8,'*4 No Split,*4 No Cross,*4 No Alternate','len'},

				{13.297,240/185/8,'*4 50% Flip','len'},
				{13.297+240/185/8,240/185/8,'*4 No Flip','len'},
				{13.297+240/185/8*3,240/185/2,'*8 100.01% Reverse','len'},

				{13.946,240/185/8,'*4 50% Flip','len'},
				{13.946+240/185/8,240/185/8,'*4 No Flip','len'},
				{13.946+240/185/8*3,240/185/2,'*8 No Reverse','len'},

				{14.594,240/185/8,'*4 50% Flip','len'},
				{14.594+240/185/8,240/185/8,'*4 No Flip','len'},
				{14.594+240/185/8*3,240/185/2*7+240/185/8,'*8 100.01% Reverse','len'},

				{15.243,240/185/8,'*4 50% Flip','len'},
				{15.243+240/185/8,240/185/8,'*4 No Flip','len'},
				{15.243+240/185/8*2,240/185/8,'*4 50% Flip','len'},
				{15.243+240/185/8*3,240/185/8,'*4 No Flip','len'},

				{15.892,240/185*3,'*1.28473 -500% Mini,*0.128473 50% Flip,*0.26 Stealth,*0.26 Dark,*0.26 0.5x','len'},

				{19.783,240/185*3,'*10000 No Mini,*10000 No Flip,*10000 2.25x,*1.028 No Stealth,*1.028 No Dark,*10000 No Reverse','len'},

				{20.756,240/185*15+240/185/4,'*4 Dark,*1.55 Wave','len'},
				{20.756,240/185*15+240/185/4,'*1.55 50% Tipsy,*1.55 -50% Drunk,*3.09 Bumpy','len',1},
				{20.756,240/185*15+240/185/4,'*1.55 -50% Tipsy,*1.55 50% Drunk,*3.09 -100% Bumpy','len',2},

				{20.919,240/185/4*3,'*10000 500% Beat','len'},
				{20.919+240/185,240/185/4*2,'*10000 -500% Beat','len'},
				{20.919+240/185*2,240/185/4*3,'*10000 -500% Beat','len'},
				{20.919+240/185*3,240/185/4*2,'*10000 500% Beat','len'},
				{20.919+240/185*4,240/185/4*3,'*10000 500% Beat','len'},
				{20.919+240/185*5,240/185/4*2,'*10000 -500% Beat','len'},
				{20.919+240/185*6,240/185/4,'*10000 -500% Beat','len'},
				{20.919+240/185*6.5,240/185/4,'*10000 500% Beat','len'},
				{20.919+240/185*7,240/185/4,'*10000 -500% Beat','len'},

				{22.054,240/185/32,'*24.667 Stealth','len'},
				{22.054+240/185/32,240/185/32,'*24.667 No Stealth','len'},
				{22.054+240/185/32*2,240/185/32,'*24.667 Stealth','len'},
				{22.054+240/185/32*3,240/185/32,'*24.667 No Stealth','len'},
				{22.054+240/185/32*4,240/185/32,'*24.667 Stealth','len'},
				{22.054+240/185/32*5,240/185/32,'*24.667 No Stealth','len'},
				{22.054+240/185/32*6,240/185/32,'*24.667 Stealth','len'},
				{22.054+240/185/32*7,240/185/32,'*24.667 No Stealth','len'},

				{23.027,240/185/4,'*6 0x','len'},
				{23.027+240/185/4,240/185/4,'*6 2.25x','len'},

				{25.621,240/185/12,'*18.5 200% Drunk','len'},
				{25.621+240/185/12,240/185/12,'*37 -200% Drunk','len'},
				{25.621+240/185/12*2,240/185/12,'*37 200% Drunk','len'},
				{25.621+240/185/12*3,240/185/12,'*37 -200% Drunk','len'},
				{25.621+240/185/12*4,240/185/12,'*37 200% Drunk','len'},
				{25.621+240/185/12*5,240/185/12,'*18.5 No Drunk','len'},

				{25.621,240/185/4,'*1.54167 50% Reverse','len'},
				{25.621+240/185/4,240/185/4,'*1.54167 No Reverse','len'},

				{27.243,240/185/12,'*37 400% Tipsy','len'},
				{27.243+240/185/12,240/185/12,'*74 -400% Tipsy','len'},
				{27.243+240/185/12*2,240/185/12,'*74 No Tipsy','len'},

				{29.189,240/185/16,'*12.34 Split','len'},
				{29.189+240/185/16,240/185/8,'*12.34 No Split,*12.34 100.01% Reverse','len'},
				{29.189+240/185/16*3,240/185/16,'*12.34 No Reverse','len'},

				{29.838,240/185/32,'*24.667 Stealth','len'},
				{29.838+240/185/32,240/185/32,'*24.667 No Stealth','len'},
				{29.838+240/185/32*2,240/185/32,'*24.667 Stealth','len'},
				{29.838+240/185/32*3,240/185/32,'*24.667 No Stealth','len'},
				{29.838+240/185/32*4,240/185/32,'*24.667 Stealth','len'},
				{29.838+240/185/32*5,240/185/32,'*24.667 No Stealth','len'},
				{29.838+240/185/32*6,240/185/32,'*24.667 Stealth','len'},
				{29.838+240/185/32*7,240/185/32,'*24.667 No Stealth','len'},

				{31.297,240/185/4*3,'*10000 -500% Beat','len'},
				{31.297+240/185,240/185/4*2,'*10000 500% Beat','len'},
				{31.297+240/185*2,240/185/4*3,'*10000 500% Beat','len'},
				{31.297+240/185*3,240/185/4*2,'*10000 -500% Beat','len'},
				{31.297+240/185*4,240/185/4*3,'*10000 -500% Beat','len'},
				{31.297+240/185*5,240/185/4*2,'*10000 500% Beat','len'},
				{31.297+240/185*6,240/185/4,'*10000 500% Beat','len'},
				{31.297+240/185*6.5,240/185/4,'*10000 -500% Beat','len'},
				{31.297+240/185*7,240/185/4,'*10000 500% Beat','len'},

				{32.432,240/185/16*3,'*41.11 1000% Bumpy','len'},
				{32.432+240/185/16*3,240/185/16,'*123.34 No Bumpy','len'},

				{33.405,240/185/12,'*18.5 -200% Drunk','len'},
				{33.405+240/185/12,240/185/12,'*37 200% Drunk','len'},
				{33.405+240/185/12*2,240/185/12,'*37 -200% Drunk','len'},
				{33.405+240/185/12*3,240/185/12,'*37 200% Drunk','len'},
				{33.405+240/185/12*4,240/185/12,'*37 -200% Drunk','len'},
				{33.405+240/185/12*5,240/185/12,'*18.5 No Drunk','len'},

				{33.405,240/185/4,'*1.54167 50% Reverse','len'},
				{33.405+240/185/4,240/185/4,'*1.54167 No Reverse','len'},

				{36,240/185/4,'*3.0834 -100% Flip','len'},
				{36+240/185/4,240/185/4,'*3.0834 No Flip','len'},

				{37.621,240/185/8,'*6.167 Brake','len'},
				{37.621+240/185/8,240/185/8,'*6.167 No Brake','len'},

				{39.567,240/185/32,'*24.667 Stealth','len'},
				{39.567+240/185/32,240/185/32,'*24.667 No Stealth','len'},
				{39.567+240/185/32*2,240/185/32,'*24.667 Stealth','len'},
				{39.567+240/185/32*3,240/185/32,'*24.667 No Stealth','len'},
				{39.567+240/185/32*4,240/185/32,'*24.667 Stealth','len'},
				{39.567+240/185/32*5,240/185/32,'*24.667 No Stealth','len'},
				{39.567+240/185/32*6,240/185/32,'*24.667 Stealth','len'},
				{39.567+240/185/32*7,240/185/32,'*24.667 No Stealth','len'},

				{40.216,240/185/32,'*24.667 Stealth','len'},
				{40.216+240/185/32,240/185/32,'*24.667 No Stealth','len'},
				{40.216+240/185/32*2,240/185/32,'*24.667 Stealth','len'},
				{40.216+240/185/32*3,240/185/32,'*24.667 No Stealth','len'},
				{40.216+240/185/32*4,240/185/32,'*24.667 Stealth','len'},
				{40.216+240/185/32*5,240/185/32,'*24.667 No Stealth','len'},
				{40.216+240/185/32*6,240/185/32,'*24.667 Stealth','len'},
				{40.216+240/185/32*7,240/185/32,'*24.667 No Stealth','len'},

				{40.540,0.050,'*10000 200% Mini,*10000 No Dark,*10000 No Wave,*10000 No Drunk,*10000 No Tipsy,*10000 No Bumpy','len'},

				{40.540+0.050,240/185-0.050,'*1.61 No Mini','len'},
				{40.540,240/185*16,'*2 1.5x','len'},

				{41.838,240/185*15,'*10000 100% Stealth,*10000 -100% Hidden,*10000 -100% Sudden,*10000 260% HiddenOffset,*10000 270% SuddenOffset','len',1},
				{41.838,240/185*15,'*10000 100% Hidden,*10000 100% Sudden,*10000 260% HiddenOffset,*10000 270% SuddenOffset,*10000 2513% Dizzy,*10000 200% Tornado,*10000 50% Stealth','len',2},

				{41.838-240/185/4,240/185*15,'*6.167 200% Bumpy,*3.083 Drunk','len'},

				{42.162,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{42.162+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*2+42.162,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*2+42.162+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*4+42.162,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*4+42.162+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{52.540,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{52.540+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*2+52.540,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*2+52.540+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*4+52.540,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*4+52.540+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{61.297,0.050,'*10000 200% Mini,*10000 No Stealth,*10000 No Tornado,*10000 No Drunk,*10000 No Dizzy,*10000 No Bumpy,*10000 No Hidden,*10000 No Sudden','len'},

				{61.297+0.050,240/185-0.050,'*1.61 No Mini','len'},
				{61.297,240/185*17,'*2 2.25x','len'},

				{62.594,240/185/8,'*8 Flip','len'},
				{62.594+240/185/8,240/185/8,'*8 No Flip','len'},
				{62.594+240/185/8*2,240/185/8,'*8 Flip','len'},
				{62.594+240/185/8*3,240/185/8,'*8 No Flip','len'},
				{62.594+240/185/8*4,240/185/8,'*8 Flip','len'},
				{62.594+240/185/8*5,240/185/8,'*8 No Flip','len'},

				{63.729,240/185/8,'*8 100.01% Reverse','len'},
				{63.729+240/185/8,240/185/8,'*8 No Reverse','len'},
				{63.729+240/185/8*2,240/185/8,'*8 100.01% Reverse','len'},
				{63.729+240/185/8*3,240/185/8,'*8 No Reverse','len'},
				{63.729+240/185/8*4,240/185/8,'*8 100.01% Reverse','len'},
				{63.729+240/185/8*5,240/185/8,'*8 No Reverse','len'},
				{63.729+240/185/8*6,240/185/8,'*8 100.01% Reverse','len'},
				{63.729+240/185/8*7,240/185/8,'*8 No Reverse','len'},

				{65.189,240/185/8,'*8 Invert','len'},
				{65.189+240/185/8,240/185/8,'*8 No Invert','len'},
				{65.189+240/185/8*3,240/185/8,'*8 Flip,*8 -100% Invert','len'},
				{65.189+240/185/8*4,240/185/8,'*8 No Flip,*8 No Invert','len'},

				{66.486,240/185/8,'*8 Split','len'},
				{66.486+240/185/8,240/185/8,'*8 No Split,*8 100.01% Reverse','len'},
				{66.486+240/185/8*2,240/185/8,'*8 100.01% Reverse,*8 -100% Split','len'},
				{66.486+240/185/8*3,240/185/8,'*8 No Reverse,*8 No Split','len'},
				{66.486+240/185/8*4,240/185/4,'*4 -100% Flip','len'},
				{66.486+240/185/8*6,240/185/4,'*4 No Flip','len'},

				{67.783,240/185/8,'*8 100.01% Reverse,*4 -50% Split,*4 -50% Cross,*4 -50% Alternate','len'},
				{67.783+240/185/8,240/185/8,'*8 No Reverse,*4 -50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*2,240/185/8,'*8 No Reverse,*8 50% Split,*4 50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*3,240/185/8,'*8 No Reverse,*4 50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*4,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*4 -50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*5,240/185/8,'*8 No Reverse,*4 -50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*6,240/185/8,'*8 No Reverse,*8 50% Split,*4 50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*7,240/185/8,'*8 No Reverse,*4 50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*8,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*4 -50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*9,240/185/8,'*8 No Reverse,*4 -50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*10,240/185/8,'*8 No Reverse,*8 50% Split,*4 50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*11,240/185/8,'*8 No Reverse,*4 50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*12,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*4 -50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*13,240/185/8,'*8 No Reverse,*4 -50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*14,240/185/8,'*8 No Reverse,*8 50% Split,*4 50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*15,240/185/8,'*8 No Reverse,*4 50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{67.783+240/185/8*16,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*4 -50% Cross,*8 -50% Alternate','len'},
				{67.783+240/185/8*17,240/185/8,'*8 100.01% Reverse,*4 -100% Split,*4 No Cross,*4 No Alternate','len'},
				{67.783+240/185/8*18,240/185/8,'*8 100.01% Reverse,*4 -50% Split,*4 50% Cross,*4 -50% Alternate','len'},
				{67.783+240/185/8*19,240/185/8,'*8 100.01% Reverse,*4 No Split,*4 No Cross,*4 No Alternate','len'},
				{67.783+240/185/8*20,240/185/8,'*8 No Reverse,*4 50% Split,*4 50% Cross,*4 50% Alternate','len'},
				{67.783+240/185/8*21,240/185/8,'*8 No Reverse,*4 100% Split,*4 No Cross,*4 No Alternate','len'},
				{67.783+240/185/8*22,240/185/8,'*8 No Reverse,*4 50% Split,*4 -50% Cross,*4 50% Alternate','len'},
				{67.783+240/185/8*23,240/185/8,'*8 No Reverse,*4 No Split,*4 No Cross,*4 No Alternate','len'},

				{71.513,240/185/4,'*10000 1000% Beat','len'},

				{72.648,240/185*8,'*8 100.01% Reverse','len'},
				{72.648,240/185/4,'*10000 100.01% Reverse','len'},

				{72.973,240/185/8,'*8 Flip','len'},
				{72.973+240/185/8,240/185/8,'*8 No Flip','len'},
				{72.973+240/185/8*2,240/185/8,'*8 Flip','len'},
				{72.973+240/185/8*3,240/185/8,'*8 No Flip','len'},
				{72.973+240/185/8*4,240/185/8,'*8 Flip','len'},
				{72.973+240/185/8*5,240/185/8,'*8 No Flip','len'},

				{74.108,240/185/8,'*8 No Reverse','len'},
				{74.108+240/185/8,240/185/8,'*8 100.01% Reverse','len'},
				{74.108+240/185/8*2,240/185/8,'*8 No Reverse','len'},
				{74.108+240/185/8*3,240/185/8,'*8 100.01% Reverse','len'},
				{74.108+240/185/8*4,240/185/8,'*8 No Reverse','len'},
				{74.108+240/185/8*5,240/185/8,'*8 100.01% Reverse','len'},
				{74.108+240/185/8*6,240/185/8,'*8 No Reverse','len'},
				{74.108+240/185/8*7,240/185/8,'*8 100.01% Reverse','len'},

				{75.567,240/185/8,'*8 Invert','len'},
				{75.567+240/185/8,240/185/8,'*8 No Invert','len'},
				{75.567+240/185/8*3,240/185/8,'*8 Flip,*8 -100% Invert','len'},
				{75.567+240/185/8*4,240/185/8,'*8 No Flip,*8 No Invert','len'},

				{76.865,240/185/8,'*8 -100% Split','len'},
				{76.865+240/185/8,240/185/8,'*8 No Split,*8 No Reverse','len'},
				{76.865+240/185/8*2,240/185/8,'*8 Split,*8 No Reverse','len'},
				{76.865+240/185/8*3,240/185/8,'*8 100.01% Reverse,*8 No Split','len'},
				{76.865+240/185/8*4,240/185/4,'*4 -100% Flip','len'},
				{76.865+240/185/8*6,240/185/4,'*4 No Flip','len'},

				{78.162,240/185/8,'*8 No Reverse,*4 50% Split,*4 50% Cross,*4 50% Alternate','len'},
				{78.162+240/185/8,240/185/8,'*8 100.01% Reverse,*8 50% Split,*8 -50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*2,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*3,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*4,240/185/8,'*8 No Reverse,*8 50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*5,240/185/8,'*8 100.01% Reverse,*8 50% Split,*8 -50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*6,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*7,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*8,240/185/8,'*8 No Reverse,*8 50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*9,240/185/8,'*8 100.01% Reverse,*8 50% Split,*8 -50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*10,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*11,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*12,240/185/8,'*8 No Reverse,*8 50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*13,240/185/8,'*8 100.01% Reverse,*8 50% Split,*8 -50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*14,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 -50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*15,240/185/8,'*8 100.01% Reverse,*8 -50% Split,*8 50% Cross,*8 -50% Alternate','len'},
				{78.162+240/185/8*16,240/185/8,'*8 No Reverse,*8 50% Split,*8 50% Cross,*8 50% Alternate','len'},
				{78.162+240/185/8*17,240/185/8,'*8 No Reverse,*4 Split,*4 No Cross,*4 No Alternate','len'},
				{78.162+240/185/8*18,240/185/8,'*8 No Reverse,*4 50% Split,*4 -50% Cross,*4 50% Alternate','len'},
				{78.162+240/185/8*19,240/185/8,'*8 No Reverse,*4 No Split,*4 No Cross,*4 No Alternate','len'},
				{78.162+240/185/8*20,240/185/8,'*8 100.01% Reverse,*4 -50% Split,*4 -50% Cross,*4 -50% Alternate','len'},
				{78.162+240/185/8*21,240/185/8,'*8 100.01% Reverse,*4 -100% Split,*4 No Cross,*4 No Alternate','len'},
				{78.162+240/185/8*22,240/185/8,'*8 100.01% Reverse,*4 -50% Split,*4 50% Cross,*4 -50% Alternate','len'},
				{78.162+240/185/8*23,240/185/8,'*8 100.01% Reverse,*4 No Split,*4 No Cross,*4 No Alternate','len'},

				{82.054,240/185*8,'2x,C128','len'},

				{83.027-240/185/8,240/185/4,'*10000 1600% Beat','len'},
				{83.027,240/185/8,'*16 No Reverse','len'},

				{83.351,240/185*4,'*4 No Centered,*6.1667 No Tornado','len'},

				{83.351,240/185/2,'*2 200% Centered,*1.54167 Tornado','len'},
				{84.486,240/185/8*5,'*2 200% Centered,*1.234 Tornado','len'},
				{85.946,240/185/2,'*2 200% Centered,*1.54167 Tornado','len'},
				{87.081,240/185/8,'*2 200% Centered,*3.0834 Tornado','len'},
				{87.567,240/185/4,'*2 200% Centered,*3.0834 Tornado','len'},

				{88.216,240/185/8,'*12.34 -100% Flip,*12.34 100% Invert','len'},
				{88.216+240/185/8,240/185/8,'*12.34 No Flip,*12.34 No Invert','len'},

				{88.540,240/185*4,'*2 No Centered','len'},

				{88.540,240/185/4,'*2 200% Centered','len'},
				{88.540+240/185/2,240/185/4,'*2 200% Centered','len'},
				{88.540+240/185/2*2,240/185/4,'*2 200% Centered','len'},
				{88.540+240/185/2*3,240/185/4,'*2 200% Centered','len'},
				{88.540+240/185/2*4,240/185,'*2 400% Centered','len'},

				{88.540+240/185/2*4,240/185,'Stealth,Dark','len'},

				{92.432,240/185/4,'*10000 No Centered','len'},
				{92.432,240/185*18,'*10000 1.5x','len'},

				{92.432,240/185/8,'*3.0834 No Stealth,*3.0834 No Dark','len'},
				{92.432+240/185/8,240/185/8,'*3.0834 Stealth,*3.0834 Dark','len'},
				{92.432+240/185/8*2,240/185/8,'*3.0834 No Stealth,*3.0834 No Dark','len'},
				{92.432+240/185/8*3,240/185/8,'*3.0834 Stealth,*3.0834 Dark','len'},
				{92.432+240/185/8*4,240/185/8,'*3.0834 No Stealth,*3.0834 No Dark','len'},

				{93.729,240/185*15,'*10000 100% Stealth,*10000 -100% Hidden,*10000 -100% Sudden,*10000 260% HiddenOffset,*10000 270% SuddenOffset','len',1},
				{93.729,240/185*15,'*10000 100% Hidden,*10000 100% Sudden,*10000 260% HiddenOffset,*10000 270% SuddenOffset,*10000 2513% Dizzy,*10000 Flip,*10000 -200% Tornado,*10000 50% Stealth','len',2},

				{93.729-240/185/4,240/185*15,'*6.167 200% Bumpy,*3.083 Drunk','len'},
				{93.729-240/185/4,240/185*15+240/185/4,'*3.083 Dark','len'},

				{94.054,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{94.054+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*2+94.054,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*2+94.054+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*4+94.054,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*4+94.054+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{104.432,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{104.432+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*2+104.432,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*2+104.432+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{240/185*4+104.432,240/185/2*3,'*1.92 -200% HiddenOffset,*1.92 -200% SuddenOffset','len'},
				{240/185*4+104.432+240/185/4*3,240/185,'*40 No Dizzy','len'},

				{112.865,240/185/4,'*6.167 No Mini,*3.083 No Stealth,*10000 No Tornado,*3.0834 No Drunk,*77.485 No Dizzy,*6.167 No Bumpy,*10000 No Hidden,*10000 No Sudden,*10000 No Flip','len'},

				{112.540,240/185*3,'*10000 C185,*10000 Dark','len'},

				{113.027,240/185+240/185*8,'*10000 314% Dizzy','len'},
				{113.027,240/185/8,'*10000 600% Invert','len'},
				{113.189,240/185*2,'*1.54167 500% Invert','len'},

				{113.837,240/185/4,'*10000 0% Dizzy','len',1},
				{113.837,240/185/4,'*10000 -314% Dizzy,*10000 Flip,*10000 400% Invert','len',2},

				{114.080,240/185/4,'*10000 -471% Dizzy,*10000 Flip,*10000 400% Invert','len',1},
				{114.080,240/185/4,'*10000 -628% Dizzy,*10000 No Flip,*10000 500% Invert','len',2},

				{114.323,240/185/2,'*10000 No Dizzy,*10000 No Flip,*10000 500% Invert','len'},

				}
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						
					end
				end
			end
			
			if beat >= 63 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:spring(240/185/8);
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 87 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/185/32);
						v:skewx(-1);
						v:sleep(240/185/32);
						v:linear(240/185/32);
						v:skewx(1);
						v:sleep(240/185/32);
						v:linear(240/185/32);
						v:skewx(-1);
						v:sleep(240/185/32);
						v:linear(240/185/32);
						v:skewx(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 92.5 and fgcurcommand == 3 or beat >= 220.5 and fgcurcommand == 7 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/185/16);
						v:rotationz(-30);
						v:linear(240/185/16);
						v:rotationz(30);
						v:linear(240/185/16);
						v:rotationz(-30);
						v:sleep(240/185/16);
						v:linear(240/185/16);
						v:rotationz(0);
						v:sleep(240/185/16);
						v:decelerate(240/185/4);
						v:zoomx(0);
						v:zoomy(0);
						v:bounceend(240/185/4);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 107 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/185/16*3);
						v:zoomx(2);
						v:zoomy(0);
						v:bounceend(240/185/16);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 118 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/185/4);
						v:rotationz(360*multi);
						v:decelerate(240/185/8);
						v:zoomx(3);
						v:accelerate(240/185/8);
						v:zoomx(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 156 and fgcurcommand == 6 or beat >= 316 and fgcurcommand == 8 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/185/2);
						v:zoomx(0.2);
						v:zoomy(5);
						v:accelerate(240/185/2);
						v:zoomx(1);
						v:zoomy(1);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 347.5 and fgcurcommand == 9 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+multi*320);
						v:GetChild('Judgment'):x(multi*-160);
						v:GetChild('Combo'):x(multi*-160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat > 70 and beat < 73 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:vibrate();
						v:effectmagnitude(auxvar:getaux(),0,0);
					end
				end
			end

			if beat >= 74 and beat < 77 then
				for i,v in pairs(prefix_plr) do
					if v then
						GAMESTATE:ApplyGameCommand('mod,*10000 '..-auxvar:getaux() ..'% Flip');
					end
				end
			end

			if beat >= 85 and beat < 88 or beat >= 252 and beat < 255 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:vibrate();
						v:effectmagnitude(0,0,auxvar:getaux());
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.312 - -0.002) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		WubWahMessageCommand="finishtweening;aux,0;linear,240/185/16*3;aux,100;linear,240/185/16;aux,0"
		WubWuhDubMessageCommand="finishtweening;aux,0;decelerate,240/185/8;aux,100;spring,240/185/8;aux,0"
		YoyMessageCommand="finishtweening;aux,0;linear,240/185/8;aux,500;linear,240/185/8;aux,0"
		BrrrMessageCommand="finishtweening;aux,0;linear,240/185/2;aux,500;linear,240/185/16;aux,0"
	/>
	
</children></ActorFrame>