<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,111.41"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{29.639,'Flash'},
					{29.639,'ShineOn'},
					{40.934,'ShineOff'},

					{41.205,'Flash'},
					{41.205,'ShiningRay'},
					{44.096,'ShiningRay'},
					{52.771,'ShiningRay'},
					{55.663,'ShiningRay'},
					{64.337,'ShiningRay'},
					{67.229,'ShiningRay'},
					{75.904,'ShiningRay'},
					{78.795,'ShiningRay'},

					{99.036,'Flash'},
				};
				
				
				prefix_mods = {
				
				{0,200,'4.5x,Cover,*10000 No Beat','end'},

				{0,29.096,'Blind','end'},

				{29.639,99.036,'-99999% Cover','end'},

				{40.843,41.205,'Cover','end'},

				{0.723,27.289,'*0.34584 Centered,*10000 Stealth,*10000 125% Brake,*1.0375 300% Drunk,*0.1729167 -50% Flip','end'},
				{3.615,27.289,'*0.69167 Dark','end'},
				{3.615,27.289,'*10000 100.01% Reverse','end',2},

				{27.289,0.050,'*10000 No Reverse,*10000 No Brake','len'},

				{27.470,240/83/2,'*0.69167 No Centered,*0.69167 No Stealth,*2.075 No Drunk,*0.345834 No Flip','len'},

				{29.277,240/83/8,'*5.53334 Stealth,*5.53334 Dark','len'},
				{29.277+240/83/8,240/83/8,'*10000 No Stealth,*10000 No Dark','len'},
				{29.639,240/83*4,'*10000 0.5% Bumpy,*10000 75% Brake,*10000 Drunk','len'},

				{40.843,240/83/16,'*10000 Stealth,*10000 Dark','len'},
				{40.843+240/83/16,240/83/16,'*10000 No Stealth,*10000 No Dark,*10000 No Bumpy,*10000 No Brake,*10000 No Drunk','len'},

				{43.735,240/83/16,'*5.53334 Brake','len'},
				{43.735+240/83/16,240/83/16,'*5.53334 No Brake','len'},

				{46.265,240/83/4*7,'*2.075 150% Distant,*6.91667 500% Bumpy,*10 0.5x,*5.53334 400% Sudden,*10000 -75% SuddenOffset,*2.76667 200% Centered,*0.69167 50% Stealth','len'},
				{46.265+240/83/4*7,240/83/2,'*2.075 No Distant,*13.83334 No Bumpy,*10 4.5x,*5.53334 No Sudden,*5.53334 200% SuddenOffset,*2.76667 No Centered,*0.69167 No Stealth','len'},

				{52.410,240/83/16,'*5.53334 Boost','len'},
				{52.410+240/83/16,240/83/16,'*5.53334 No Boost','len'},

				{55.301,240/83/16,'*5.53334 Brake','len'},
				{55.301+240/83/16,240/83/16,'*5.53334 No Brake','len'},

				{57.831,240/83/4*7,'*2.075 150% Distant,*6.91667 500% Bumpy,*10 0.5x,*5.53334 400% Sudden,*10000 -75% SuddenOffset,*2.76667 200% Centered,*0.69167 50% Stealth','len'},
				{57.831+240/83/4*7,240/83/2,'*2.075 No Distant,*13.83334 No Bumpy,*10 4.5x,*5.53334 No Sudden,*5.53334 200% SuddenOffset,*2.76667 No Centered,*0.69167 No Stealth','len'},

				{66.506,240/83/16,'*11.06667 Split','len'},
				{66.506+240/83/16,240/83/16,'*11.06667 No Split,*11.06667 100.01% Reverse','len'},
				{66.506+240/83/16*2,240/83/16,'*11.06667 No Reverse','len'},

				{69.398,240/83/4*7,'*2.76667 200% Distant,*6.91667 500% Bumpy,*10 0.5x,*5.53334 400% Sudden,*10000 -75% SuddenOffset,*5.53334 400% Centered,*0.69167 50% Stealth,*10000 628% Dizzy','len'},
				{69.398+240/83/4*7,240/83/2,'*2.76667 No Distant,*13.83334 No Bumpy,*10 4.5x,*5.53334 No Sudden,*5.53334 200% SuddenOffset,*5.53334 No Centered,*0.69167 No Stealth,*10000 No Dizzy','len'},

				{75.542,240/83/16,'*5.53334 Boost','len'},
				{75.542+240/83/16,240/83/16,'*5.53334 No Boost','len'},

				{78.072,240/83/16,'*11.06667 Alternate','len'},
				{78.072+240/83/16,240/83/16,'*11.06667 No Alternate,*11.06667 100.01% Reverse','len'},
				{78.072+240/83/16*2,240/83/16,'*11.06667 No Reverse','len'},

				{80.964,240/83/4*7,'*2.76667 200% Distant,*6.91667 500% Bumpy,*10 0.5x,*5.53334 400% Sudden,*10000 -75% SuddenOffset,*5.53334 400% Centered,*0.69167 50% Stealth,*10000 628% Dizzy','len'},
				{80.964+240/83/4*7,240/83/2,'*2.76667 No Distant,*13.83334 No Bumpy,*10 4.5x,*5.53334 No Sudden,*5.53334 200% SuddenOffset,*5.53334 No Centered,*0.69167 No Stealth,*10000 No Dizzy','len'},

				{86.747,240/83*4,'*4.15 300% Bumpy,*0.69167 50% Drunk,*0.69167 50% Tipsy','len',1},
				{86.747,240/83*4,'*4.15 -300% Bumpy,*0.69167 -50% Drunk,*0.69167 -50% Tipsy','len',2},
				{98.313,240/83*4,'*4.15 No Bumpy,*0.69167 No Drunk,*0.69167 No Tipsy','len'},

				{99.036,200,'*10000 1x,*10000 C88.53334,*10000 300% Drunk,*10000 25% Stealth','end'},

				{99.036,240/83-0.050,'*0.69167 200% Centered','len'},
				{99.036+240/83/4*3,240/83/4-0.050,'*1.4 Stealth,*1.4 Dark','len'},
				{99.036+240/83-0.050,0.050,'*10000 No Centered,*10000 100.01% Reverse','len'},

				{101.928,240/83/4*3,'*1.4 25% Stealth,*1.4 No Dark','len'},
				{101.928,240/83-0.050,'*0.69167 200% Centered,*10000 100.01% Reverse','len'},
				{101.928+240/83/4*3,240/83/4-0.050,'*1.4 Stealth,*1.4 Dark','len'},
				{101.928+240/83-0.050,0.050,'*10000 No Centered,*10000 No Reverse','len'},

				{104.819,240/83/4*3,'*1.4 25% Stealth,*1.4 No Dark','len'},
				{104.819,240/83-0.050,'*0.69167 200% Centered','len'},
				{104.819+240/83/4*3,240/83/4-0.050,'*1.4 Stealth,*1.4 Dark','len'},
				{104.819+240/83-0.050,0.050,'*10000 No Centered,*10000 100.01% Reverse','len'},

				{107.711,240/83/4*3,'*1.4 25% Stealth,*1.4 No Dark','len'},
				{107.711,200,'*0.69167 400% Centered,*10000 100.01% Reverse','end'},
				{107.711+240/83/4*3,200,'*1.4 Stealth,*1.4 Dark','end'},

				}
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
						
					end
				end
			end
			
			if beat >= 56 and fgcurcommand == 1 or beat >= 72 and fgcurcommand == 2 or beat >= 88 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/83/16*3);
						v:rotationz(-30);
						v:decelerate(240/83/16*3);
						v:rotationz(30);
						v:decelerate(240/83/8*3);
						v:rotationz(-360);
						v:sleep(240/83/4);
						v:decelerate(240/83/16*3);
						v:rotationz(-330);
						v:decelerate(240/83/16*3);
						v:rotationz(-390);
						v:decelerate(240/83/8*3);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 104 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:decelerate(240/83/16*3);
						v:rotationz(-30);
						v:decelerate(240/83/16*3);
						v:rotationz(30);
						v:decelerate(240/83/8*3);
						v:rotationz(-360);
						v:sleep(240/83/4);
						v:decelerate(240/83/16*3);
						v:rotationz(-330);
						v:decelerate(240/83/16*3);
						v:rotationz(-390);
						v:decelerate(240/83/16*3);
						v:rotationz(-330);
						v:decelerate(240/83/16*3);
						v:rotationz(-720);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 120 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:GetChild('Judgment'):decelerate(240/83/2);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):decelerate(240/83/2);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end

			if beat >= 136 and fgcurcommand == 6 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 56 and beat < 63 or beat >= 72 and beat < 79 or beat >= 88 and beat < 95 or beat >= 104 and beat < 111 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux() ..'% Distant,*10000 '..auxvar:getaux() ..'% Mini,*10000 '..-auxvar:getaux()/10 ..'% Flip,*10000 '..auxvar:getaux()*2.5 ..'% Bumpy,*10000 '..auxvar:getaux()*5 ..'% Drunk');
			end

			if beat >= 120 and beat < 136 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+math.sin(beat*math.pi/4)*160*multi);
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.711 - -0.035) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		ShiningRayMessageCommand="finishtweening;aux,0;decelerate,240/83/16*3;aux,50;decelerate,240/83/16*3;aux,100;decelerate,240/83/8*3;aux,0"
	/>

	<ActorFrame OnCommand="fov,20;hidden,1" ShineOnMessageCommand="hidden,0" ShineOffMessageCommand="hidden,1"><children>
		<Layer
			File="starsmask"
			OnCommand="%function(self)
			self:customtexturerect(0,0,1,1);
			self:x(SCREEN_CENTER_X);
			self:y(SCREEN_CENTER_Y);
			self:zoomto(SCREEN_WIDTH*2,SCREEN_HEIGHT*2);
			self:ztest(1);
			self:ztestmode('writeonfail'); end"
			ShineOnMessageCommand="%function(self)
			self:linear(240/83*4);
			self:rotationz(180); end"
			
		/>
	</children></ActorFrame>

	<Layer
		File="whiteflash"
		OnCommand="%function(self)
		self:stretchto(0,0,SCREEN_WIDTH,SCREEN_HEIGHT)
		self:diffusealpha(0); end"
		FlashMessageCommand="%function(self)
		self:diffusealpha(1);
		self:sleep(0.05);
		self:linear(240/83/8-0.05);
		self:diffusealpha(0); end"
	/>
	
</children></ActorFrame>