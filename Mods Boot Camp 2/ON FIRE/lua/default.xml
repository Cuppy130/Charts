<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,116.49"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					--{25.612,'SkewTwitch'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2.5x,-999999% Cover,*10000 No Beat','end'},

				{0,240/160,'*10000 200% Mini','len'},

				{1.503,240/160/8*59,'*0.1808 No Mini','len'},

				{1.690,240/160/4,'*10000 500% Beat','len'},
				{1.690+240/160/2,240/160/4,'*10000 -500% Beat','len'},
				{1.690+240/160/2*2,240/160/4,'*10000 500% Beat','len'},
				{1.690+240/160/2*3,240/160/4,'*10000 -500% Beat','len'},
				{1.690+240/160/2*4,240/160/4,'*10000 500% Beat','len'},
				{1.690+240/160/2*5,240/160/4,'*10000 -500% Beat','len'},
				{1.690+240/160/2*6,240/160/4,'*10000 500% Beat','len'},
				{1.690+240/160/2*7,240/160/4,'*10000 -500% Beat','len'},
				{1.690+240/160/2*8,240/160/4,'*10000 500% Beat','len'},
				{1.690+240/160/2*9,240/160/4,'*10000 -500% Beat','len'},
				{1.690+240/160/2*10,240/160/4,'*10000 500% Beat','len'},
				{1.690+240/160/2*11,240/160/4,'*10000 -500% Beat','len'},
				{1.690+240/160/2*12,240/160/4,'*10000 500% Beat','len'},
				{1.690+240/160/2*13,240/160/4,'*10000 -500% Beat','len'},
				{1.690+240/160/2*14,240/160/4,'*10000 500% Beat','len'},

				{12.565,240/160/32,'*10000 200% Drunk','len'},
				{12.565+240/160/32,240/160/32,'*10000 -200% Drunk','len'},
				{12.565+240/160/32*2,240/160/32,'*10000 200% Drunk','len'},
				{12.565+240/160/32*3,240/160/32,'*10000 -200% Drunk','len'},
				{12.565+240/160/32*4,240/160/32,'*10000 No Drunk','len'},

				{13.315,240/160*7,'*10000 200% Beat,*8 150% Bumpy','len'},

				{13.503,240/160/4*7,'*0.762 200% Distant','len'},
				{13.503+240/160/4*7,240/160/4,'*5.334 No Distant','len'},
				{16.503,240/160/4*7,'*0.762 200% Hallway','len'},
				{16.503+240/160/4*7,240/160/4,'*5.334 No Hallway','len'},
				{19.503,240/160/4*7,'*0.762 200% Distant','len'},
				{19.503+240/160/4*7,240/160/4,'*5.334 No Distant','len'},
				{22.503,240/160/4*3,'*0.764 86% Hallway','len'},
				{22.503+240/160/4*3,240/160/4,'*2.2934 No Hallway','len'},

				{24.003,240/160*3,'*2 C128,*0.334 50% Stealth,*0.334 50% Dark','len'},

				{25.503,240/160*2,'*10000 No Centered,*10000 50% Stealth,*10000 50% Dark','len'},

				{25.503,240/160-0.050,'*0.375 Stealth,*0.375 Dark','len'},
				{27.003,240/160,'*0.375 Stealth,*0.375 Dark','len'},

				{25.503,240/160/16-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16,240/160/16-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16*2,240/160/16-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16*3,240/160/16-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16*4,240/160/8-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16*6,240/160/16-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16*7,240/160/8-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16*9,240/160/16-0.050,'*2.5 200% Centered','len'},
				{25.503+240/160/16*10,240/160/8*3-0.050,'*2.5 200% Centered','len'},

				{27.003,240/160/16-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16,240/160/16-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16*2,240/160/16-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16*3,240/160/16-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16*4,240/160/8-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16*6,240/160/16-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16*7,240/160/8-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16*9,240/160/16-0.050,'*2.5 200% Centered','len'},
				{27.003+240/160/16*10,240/160/8*3-0.050,'*2.5 200% Centered','len'},

				{28.503,240/160/4,'*1.334 No Stealth,*1.334 No Dark','len'},

				{28.503,240/160*16,'-75% Expand','len'},

				{28.503,240/160*4,'*8.3734 314% Dizzy','len'},
				{28.503+240/160*4,240/160*4,'*16.7467 -314% Dizzy','len'},
				{28.503+240/160*8,240/160*4,'*16.7467 314% Dizzy','len'},
				{28.503+240/160*12,240/160*4,'*16.7467 -314% Dizzy','len'},

				{52.128,240/160/4,'*8.3734 No Dizzy','len'},

				{33.003,240/160*26+240/160/4,'*10000 No Stealth,*10000 No Flip,*10000 No Invert','len'},

				{33.003,240/160/16,'*10000 50% Stealth','len',1},
				{33.003+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{33.003+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{33.003+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},
				{33.003+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{33.003+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},

				{33.565,240/160/16,'*10000 50% Stealth','len',2},
				{33.565+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{33.565+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{33.565+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},
				{33.565+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{33.565+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},

				{34.128,240/160/16,'*10000 50% Stealth','len',1},
				{34.128+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{34.128+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{34.128+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},

				{6+33.003,240/160/16,'*10000 50% Stealth','len',2},
				{6+33.003+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{6+33.003+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{6+33.003+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},
				{6+33.003+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{6+33.003+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},

				{6+33.565,240/160/16,'*10000 50% Stealth','len',1},
				{6+33.565+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{6+33.565+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{6+33.565+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},
				{6+33.565+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{6+33.565+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},

				{6+34.128,240/160/16,'*10000 50% Stealth','len',2},
				{6+34.128+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{6+34.128+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{6+34.128+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},

				{12+33.003,240/160/16,'*10000 50% Stealth','len',1},
				{12+33.003+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{12+33.003+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{12+33.003+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},
				{12+33.003+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{12+33.003+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},

				{12+33.565,240/160/16,'*10000 50% Stealth','len',2},
				{12+33.565+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{12+33.565+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{12+33.565+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},
				{12+33.565+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{12+33.565+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},

				{12+34.128,240/160/16,'*10000 50% Stealth','len',1},
				{12+34.128+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{12+34.128+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{12+34.128+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},

				{18+33.003,240/160/16,'*10000 50% Stealth','len',2},
				{18+33.003+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{18+33.003+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{18+33.003+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},
				{18+33.003+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{18+33.003+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},

				{18+33.565,240/160/16,'*10000 50% Stealth','len',1},
				{18+33.565+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{18+33.565+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{18+33.565+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},
				{18+33.565+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{18+33.565+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},

				{18+34.128,240/160/16,'*10000 50% Stealth','len',2},
				{18+34.128+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{18+34.128+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{18+34.128+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},

				{52.128,240/160*7+240/160/2,'*4 0.75x,*2 No Expand,*2.667 Dark','len'},

				{58.503,240/160*3,'*0.2319 Drunk,*0.2319 Tipsy','len'},
				{58.503+240/160*3-240/160/8,240/160/4,'*3 No Drunk,*3 No Tipsy','len'},

				{52.690,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2,240/160/4,'*10000 -500% Beat','len'},
				{52.690+240/160/2*2,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2*3,240/160/4,'*10000 -500% Beat','len'},
				{52.690+240/160/2*4,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2*5,240/160/4,'*10000 -500% Beat','len'},
				{52.690+240/160/2*6,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2*7,240/160/4,'*10000 -500% Beat','len'},
				{52.690+240/160/2*8,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2*9,240/160/4,'*10000 -500% Beat','len'},
				{52.690+240/160/2*10,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2*11,240/160/4,'*10000 -500% Beat','len'},
				{52.690+240/160/2*12,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2*13,240/160/4,'*10000 -500% Beat','len'},
				{52.690+240/160/2*14,240/160/4,'*10000 500% Beat','len'},
				{52.690+240/160/2*15,240/160/4,'*10000 -500% Beat','len'},

				{63.190,75.753,'*0.1905 25% Hallway,*1.143 150% Mini,*10000 0.034125x,*10000 -1000% Reverse,*10000 95.45% Centered,*12.1905 1600% Bumpy,*0.762 Boost,*3.0477 400% Sudden,*0.762 -95% SuddenOffset','end'},

				{63.378,75.753,'*0.25 0.11375x,*0.889 Drunk','end'},

				{75.753,240/160/4*3,'*5 2.5x,*2.667 No Drunk,*0.667 No Hallway,*4 No Mini,*2.667 No Centered,*10.667 No Sudden,*42.667 No Bumpy,*26.667 No Reverse','len'},

				{75.753,240/160/2*5,'*4 C128,*0.667 50% Stealth,*0.667 50% Dark','len'},

				{76.503,240/160*2,'*10000 No Centered,*10000 50% Stealth,*10000 50% Dark','len'},

				{76.503,240/160-0.050,'*0.375 Stealth,*0.375 Dark','len'},
				{78.003,240/160,'*0.375 Stealth,*0.375 Dark','len'},

				{76.503,240/160/16-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16,240/160/16-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*2,240/160/16-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*3,240/160/16-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*4,240/160/8-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*6,240/160/16-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*7,240/160/8-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*9,240/160/16-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*10,240/160/8-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*12,240/160/8-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*14,240/160/16-0.050,'*2.5 200% Centered','len'},
				{76.503+240/160/16*15,240/160/16-0.050,'*2.5 200% Centered','len'},

				{78.003,240/160/16-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16,240/160/16-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16*2,240/160/16-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16*3,240/160/16-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16*4,240/160/8-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16*6,240/160/16-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16*7,240/160/8-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16*9,240/160/16-0.050,'*2.5 200% Centered','len'},
				{78.003+240/160/16*10,240/160/8*3-0.050,'*2.5 200% Centered','len'},

				{79.503,240/160/4,'*1.334 No Stealth,*1.334 No Dark','len'},

				{79.503,240/160/4*7,'*0.762 200% Distant','len'},
				{79.503+240/160/4*7,240/160/4,'*5.334 No Distant','len'},
				{82.503,240/160/4*7,'*0.762 200% Hallway','len'},
				{82.503+240/160/4*7,240/160/4,'*5.334 No Hallway','len'},
				{85.503,240/160/4*7,'*0.762 200% Distant','len'},
				{85.503+240/160/4*7,240/160/4,'*5.334 No Distant','len'},
				{88.503,240/160/4*3,'*0.764 86% Hallway','len'},
				{88.503+240/160/4*3,240/160/4,'*2.2934 No Hallway','len'},

				{91.503,240/160/4*7,'*0.762 200% Incoming','len'},
				{91.503+240/160/4*7,240/160/4,'*5.334 No Incoming','len'},
				{94.503,240/160/4*7,'*0.762 200% Space','len'},
				{94.503+240/160/4*7,240/160/4,'*5.334 No Space','len'},
				{97.503,240/160/4*7,'*0.762 200% Incoming','len'},
				{97.503+240/160/4*7,240/160/4,'*5.334 No Incoming','len'},
				{100.503,240/160/4*3,'*0.764 86% Space','len'},
				{100.503+240/160/4*3,240/160/4,'*2.2934 No Space','len'},

				{79.315,240/160*7,'*10000 200% Beat,*8 150% Bumpy','len'},

				{91.315,240/160*7,'*10000 200% Beat,*8 150% Bumpy','len'},

				{103.503,240/160*16,'-75% Expand','len'},

				{103.503,240/160*4,'*8.3734 314% Dizzy','len'},
				{103.503+240/160*4,240/160*4,'*16.7467 -314% Dizzy','len'},

				{108.003,240/160*26+240/160/4,'*10000 No Stealth,*10000 No Flip,*10000 No Invert','len'},

				{108.003,240/160/16,'*10000 50% Stealth','len',1},
				{108.003+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{108.003+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{108.003+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},
				{108.003+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{108.003+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},

				{108.565,240/160/16,'*10000 50% Stealth','len',2},
				{108.565+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{108.565+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{108.565+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},
				{108.565+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{108.565+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},

				{109.128,240/160/16,'*10000 50% Stealth','len',1},
				{109.128+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{109.128+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{109.128+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},

				{6+108.003,240/160/16,'*10000 50% Stealth','len',2},
				{6+108.003+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{6+108.003+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{6+108.003+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},
				{6+108.003+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{6+108.003+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},

				{6+108.565,240/160/16,'*10000 50% Stealth','len',1},
				{6+108.565+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},
				{6+108.565+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{6+108.565+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',1},
				{6+108.565+240/160/16*4,240/160/16,'*10000 95% Stealth,*10000 Invert','len',1},
				{6+108.565+240/160/16*5,240/160/16,'*10000 75% Stealth,*10000 Flip','len',1},

				{6+109.128,240/160/16,'*10000 50% Stealth','len',2},
				{6+109.128+240/160/16,240/160/16,'*10000 75% Stealth,*10000 Flip','len',2},
				{6+109.128+240/160/16*2,240/160/16,'*10000 95% Stealth,*10000 Invert','len',2},
				{6+109.128+240/160/16*3,240/160/16,'*10000 75% Stealth,*10000 Flip,*10000 -100% Invert','len',2},

				}
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					if v then
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						local d = SCREEN_CENTER_X-160
						if i == 2 then d = SCREEN_CENTER_X+160 end
						v:x(d);
					end
				end
			end
			
			if beat >= 34 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:decelerate(240/135/16*3);
						v:rotationy(720);
						v:decelerate(240/135/16*3);
						v:rotationy(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat > 64 and beat < 96 then
				for i,v in pairs(prefix_plr) do
					if v then
						--v:x(SCREEN_CENTER_X+(math.sin(beat*math.pi/2)*auxvar:getaux()))
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (0.009 - 0.073) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		SkewTwitchMessageCommand="finishtweening;aux,0;linear,9.6;aux,1.5;linear,1.6;aux,0"
	/>
	
</children></ActorFrame>