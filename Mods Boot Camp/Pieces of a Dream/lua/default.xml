<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,GAMESTATE:GetCurrentSong():MusicLengthSeconds()"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
					{9.071,'SpinStutter'},
					{18.576,'SpinStutter'},
					{28.081,'SpinStutter'},
					{37.586,'SpinStutter'},
					{56.596,'SpinStutter'},
					{75.606,'SpinStutter'},
					{104.121,'SpinStutter'},
					{105.160,'FadeWave'},
					{116.002,'SpinStutter'},
					
					
				};
				
				
				prefix_mods = {
				
				{0,200,'1.5x,-999999% Cover,*10000 No Beat','end'},
				
				{0,8.923,'1x,*10000 -100% HiddenOffset,*10000 Hidden','end'},
				{5.358,8.923,'*0.8 200% HiddenOffset','end'},
				{8.923,10.111,'*8 No Hidden,*8 1.5x','end'},
				
				{10.111,17.240,'*0.4 -300% Mini,*0.175 0x','end'},
				{14.715,17.091,'*10000 Beat','end'},
				{17.240,19.000,'*4 No Mini,*1.5 1.5x','end'},
				
				{19.319,28.824,'*4 Hidden,*4 Sudden,*10000 -120% HiddenOffset,*10000 -120% SuddenOffset','end'},
				{28.824,37.438,'*4 200% Hidden,*4 200% Sudden,*10000 -85% HiddenOffset,*10000 -130% SuddenOffset','end'},
				
				{19.616,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*1,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*2,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*3,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*4,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*5,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				
				{20.210,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*1,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*2,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*3,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*4,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*5,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				
				{26.745,28.824,'*0.75 -100% Stealth','end'},
				{28.824,30.000,'*4 No Stealth','end'},
				
				{19.616+240/202*8,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*8+240/202*1,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*8+240/202*2,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*8+240/202*3,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*8+240/202*4,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				{19.616+240/202*8+240/202*5,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',1},
				
				{20.210+240/202*8,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*8+240/202*1,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*8+240/202*2,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*8+240/202*3,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*8+240/202*4,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				{20.210+240/202*8+240/202*5,240/202 - 240/202/16,'*3 200% HiddenOffset,*3 200% SuddenOffset','len',2},
				
				{36.250,38.329,'*0.75 -100% Stealth,*10000 Hidden,*10000 Sudden','end'},
				{38.329,39.000,'*4 No Stealth,*10000 No Hidden,*10000 No Sudden','end'},
				
				{38.626,47.982,'*8 200% Hidden,*10000 12% HiddenOffset,*8 Dark','end',1},
				{38.626,47.982,'*8 200% Sudden,*10000 -12% SuddenOffset','end',2},
				
				{38.477,240/202/2,'*10000 800% Beat','len',1},
				{38.477,240/202/2,'*10000 -800% Beat','len',2},
				
				{40.854,240/202/2,'*10000 800% Beat','len',1},
				{40.854,240/202/2,'*10000 -800% Beat','len',2},
				
				{43.230,240/202/2,'*10000 800% Beat','len',1},
				{43.230,240/202/2,'*10000 -800% Beat','len',2},
				
				{45.606,240/202/2,'*10000 800% Beat','len',1},
				{45.606,240/202/2,'*10000 -800% Beat','len',2},
				
				{47.982,49.000,'*4 No Hidden,*4 No Sudden','end'},
				
				{48.131,52.883,'*16 400% Drunk','end'},
				
				{52.883,53.477,'*4 200% Mini,*8 No Drunk','end'},
				{53.477,54.368,'*32 No Mini','end'},
				{53.477,0.050,'*10000 200% Mini','len'},
				{53.576,0.050,'*10000 200% Mini','len'},
				{53.675,0.050,'*10000 200% Mini','len'},
				{53.774,0.050,'*10000 200% Mini','len'},
				{53.873,0.050,'*10000 200% Mini','len'},
				{53.972,0.050,'*10000 200% Mini','len'},
				
				{54.071,56.448,'*12 No Drunk,1x','end'},
				{54.071,54.220,'*64 2000% Drunk','end'},
				{55.259,56.299,'*2 Stealth','end'},
				{56.299,57.000,'*8 No Stealth','end'},
				
				{57.339,74.269,'*5 150% Mini,*15 -450% Flip,*1.667 -50% Centered,*8 Sudden,*10000 20% SuddenOffset,*4 3.75x','end',1},
				{57.339,74.269,'*10 -300% Mini,*8 Dark,*16 400% Hidden,*10000 150% HiddenOffset,*5 -150% Centered,*4 0.75x','end',2},
				
				{66.844,74.269,'*8 No Sudden,*8 Hidden,*10000 -20% HiddenOffset,*8 Dark,*8 100% Centered','end',1},
				{66.844,74.269,'*16 No Hidden,*16 400% Sudden,*10000 25% SuddenOffset,*8 No Dark,*8 -25% Centered','end',2},
				
				{74.269,76.000,'*2.5 No Mini,*7.5 No Flip,*2.5 No Centered,No Sudden,*4 1.5x','end',1},
				{74.269,76.000,'*5 No Mini,*2 No Dark,*4 No Hidden,*0.625 No Centered,*4 1.5x','end',2},
				
				{76.349,102.784,'*2 200% Wave,*2 Stealth,*2 -200% Hidden,*2 -200% Sudden,*10000 30% HiddenOffset,*10000 -10% SuddenOffset','end'},
				{94.467,103.972,'*10000 500% Invert,Dark','end'},
				{95.656,102.784,'*2 No Stealth,*4 200% Hidden,*4 200% Sudden','end',1},
				{102.784,104.121,'*2 No Stealth,*2 No Hidden,*2 No Sudden,*2 No Wave','end'},
				{103.972,105.000,'*10000 No Invert','end'},
				
				{104.863,112.289,'*8 200% Wave,*8 200% Hidden,*8 200% Sudden,*10000 55% HiddenOffset,*10000 10% SuddenOffset,*4 1.75x,25% Distant','end'},
				{111.101,115.000,'*1 -200% HiddenOffset,*1 200% SuddenOffset,*1.5 No Wave','end'},
				{112.289,115.000,'*8 No Hidden,*8 No Sudden,Overhead','end'},
				
				{111.695,999,'*1.5 100.01% Reverse,*8 0x','end',1},
				
				{112.289,200.000,'*1.5 0x','end'},
				{113.180,240/202/4,'*4.5 1.5x','len',1},
				{114.368,240/202/4,'*4.5 1.5x','len',2},
				{115.556,240/202/4,'*4.5 1.5x','len',1},
				
				
				
				{111.101,112.190,'*64 -1000% Drunk','end'},
				{111.101,240/202/12,'*32 1000% Drunk','len'},
				{111.299,240/202/12,'*64 1000% Drunk','len'},
				{111.497,240/202/12,'*64 1000% Drunk','len'},
				{111.695,240/202/12,'*64 1000% Drunk','len'},
				{111.893,240/202/12,'*64 1000% Drunk','len'},
				{112.091,240/202/12,'*64 1000% Drunk','len'},
				{112.190,240/202/4,'*32 No Drunk','len'},
				
				--[[
				{111.992,999,'*4 Hidden,*4 Sudden,*10000 -280% HiddenOffset,*10000 -120% SuddenOffset,*8 Dark,*0 No Reverse','end'},
				{112.289+240/202*0,240/202 - 240/202/16,'*5 200% HiddenOffset,*5 200% SuddenOffset','len'},
				{112.289+240/202*1,240/202 - 240/202/16,'*5 200% HiddenOffset,*5 200% SuddenOffset,*10000 100.01% Reverse','len'},
				{112.289+240/202*2,240/202 - 240/202/16,'*5 200% HiddenOffset,*5 200% SuddenOffset,*10000 No Reverse','len'},
				]]
				
				}
				
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:rotationx(0);							
						v:rotationy(0);
						v:rotationz(0);
						v:x(SCREEN_CENTER_X+160*multi);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
						v:GetChild('Judgment'):stopeffect();
						
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
			end
			
			if beat >= 129 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/202/16);
						v:skewx(multi*1.5);
						v:x(SCREEN_CENTER_X-100*multi);
						
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						
						v:GetChild('Judgment'):x(multi*300);
						v:GetChild('Combo'):x(multi*300);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 137 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/202/16);
						v:skewx(multi*-1.5);
						v:x(SCREEN_CENTER_X+100*multi);
						
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 145 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/202/16);
						v:skewx(multi*1.5);
						v:x(SCREEN_CENTER_X-100*multi);
						
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						
						v:GetChild('Judgment'):x(multi*300);
						v:GetChild('Combo'):x(multi*300);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 153 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/202/16);
						v:skewx(multi*-1.5);
						v:x(SCREEN_CENTER_X+100*multi);
						
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			
			if beat >= 155.500 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/202/16);
						v:skewx(multi*1.5);
						v:x(SCREEN_CENTER_X-100*multi);
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						v:GetChild('Judgment'):x(multi*300);
						v:GetChild('Combo'):x(multi*300);
						
						v:sleep(240/202/16*3);
						v:GetChild('Judgment'):sleep(240/202/16*3);
						v:GetChild('Combo'):sleep(240/202/16*3);
						
						v:linear(240/202/16);
						v:skewx(multi*-1.5);
						v:x(SCREEN_CENTER_X+100*multi);
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
						
						v:sleep(240/202/16*2);
						v:GetChild('Judgment'):sleep(240/202/16*2);
						v:GetChild('Combo'):sleep(240/202/16*2);
						
						v:linear(240/202/16);
						v:skewx(multi*1.5);
						v:x(SCREEN_CENTER_X-100*multi);
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						v:GetChild('Judgment'):x(multi*300);
						v:GetChild('Combo'):x(multi*300);
						
						v:sleep(240/202/16*2);
						v:GetChild('Judgment'):sleep(240/202/16*2);
						v:GetChild('Combo'):sleep(240/202/16*2);
						
						v:linear(240/202/16);
						v:skewx(multi*-1.5);
						v:x(SCREEN_CENTER_X+100*multi);
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						v:GetChild('Judgment'):x(0);
						v:GetChild('Combo'):x(0);
						
						v:sleep(240/202/16*2);
						v:GetChild('Judgment'):sleep(240/202/16*2);
						v:GetChild('Combo'):sleep(240/202/16*2);
						
						v:linear(240/202/16);
						v:skewx(multi*1.5);
						v:x(SCREEN_CENTER_X-100*multi);
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						v:GetChild('Judgment'):x(multi*300);
						v:GetChild('Combo'):x(multi*300);
						
						v:sleep(240/202/16*2);
						v:GetChild('Judgment'):sleep(240/202/16*2);
						v:GetChild('Combo'):sleep(240/202/16*2);
						
						v:linear(240/202/16);
						v:skewx(0);
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):linear(240/202/16);
						v:GetChild('Combo'):linear(240/202/16);
						v:GetChild('Judgment'):x(multi*160);
						v:GetChild('Combo'):x(multi*160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			
			if beat >= 316 and fgcurcommand == 6 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X+multi*320);
						v:GetChild('Judgment'):x(multi*-160);
						v:GetChild('Combo'):x(multi*-160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 348 and fgcurcommand == 7 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat > 352 and beat < 999 then
				GAMESTATE:ApplyGameCommand('mod,*10000 '.. math.sin(beat*math.pi*2)*auxvar:getaux()*1500 .. '% Bumpy');
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.580 - -0.576) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		FadeWaveMessageCommand="finishtweening;aux,0;linear,240/202*4;aux,1;linear,240/202;aux,0"
		SpinStutterMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:rotationz(0);
					v:linear(240/202/16);
					v:rotationz(90*multi);
					v:sleep(240/202/16);
					v:linear(240/202/16);
					v:rotationz(180*multi);
					v:sleep(240/202/16);
					v:linear(240/202/16);
					v:rotationz(270*multi);
					v:sleep(240/202/16);
					v:linear(240/202/16);
					v:rotationz(360*multi);
				end
			end
		end"
		SplitStealthMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					if i == 1 then v:sleep(240/202/12); end
					for j = 1,3 do
						v:addx(multi*50);
						v:sleep(240/202/6);
					end
					for j = 1,3 do
						v:addx(multi*-50);
						v:sleep(240/202/6);
					end
				end
			end
		end"
	/>
	
</children></ActorFrame>