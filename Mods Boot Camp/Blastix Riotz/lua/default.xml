<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,GAMESTATE:GetCurrentSong():MusicLengthSeconds()"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				prefix_inc = 0;
				prefix_lastxp1 = SCREEN_CENTER_X;
				prefix_lastxp2 = SCREEN_CENTER_X;
				
				prefix_curmessage = 1;
				
				--[[
				TeleportB2P1
				TeleportB3P1
				TeleportB4P1
				TeleportB2P2
				TeleportB3P2
				TeleportB4P2
				]]
				
				
				prefix_messages = {
				
				{1.895,'KickBack'},
				{2.247,'KickBack'},
				{3.770,'KickBack'},
				{4.122,'KickBack'},
				{5.645,'KickBack'},
				{5.997,'KickBack'},
				{7.286,'ResetFades'},
				
				{7.520,'Buildup'},
				{8.457,'Buildup'},
				{9.395,'Buildup'},
				{10.332,'BuildupShort'},
				{11.269,'Buildup'},
				{12.207,'Buildup'},
				{13.144,'Buildup'},
				
				{14.081,'Stasis'},
				
				{15.019,'Blas'},
				
				{19.238,'FeelTheBeat'},
				
				{30.957,'TeleportB4P1'},
				{31.191,'TeleportB3P2'},
				{31.367,'TeleportB3P1'},
				{31.543,'TeleportB3P2'},
				{31.719,'TeleportB3P1'},
				{31.894,'TeleportB2P2'},
				{32.012,'TeleportB2P1'},
				{32.129,'TeleportB3P2'},
				{32.305,'TeleportB3P1'},
				{32.480,'TeleportB3P2'},
				{32.656,'TeleportReset'},
				
				{30.957+240/256*4,'TeleportB4P2'},
				{31.191+240/256*4,'TeleportB3P1'},
				{31.367+240/256*4,'TeleportB3P2'},
				{31.543+240/256*4,'TeleportB3P1'},
				{31.719+240/256*4,'TeleportB3P2'},
				{31.894+240/256*4,'TeleportB2P1'},
				{32.012+240/256*4,'TeleportB2P2'},
				{32.129+240/256*4,'TeleportB3P1'},
				{32.305+240/256*4,'TeleportB3P2'},
				{32.480+240/256*4,'TeleportB2P1'},
				{32.656+240/256*4,'TeleportReset'},
				
				{38.456,'JerkAroundPt1'},
				{40.331,'JerkAroundPt2'},
				{42.206,'JerkAroundPt3'},
				
				
				{45.957,'GabberH5P1'},
				{46.309,'GabberH5P2'},
				{47.012,'GabberH5P1'},
				{47.364,'GabberH5P2'},
				{47.715,'GabberH7P1'},
				{48.184,'GabberH5P2'},
				
				{45.957+3.75,'GabberH5P2'},
				{46.309+3.75,'GabberH5P1'},
				{47.012+3.75,'GabberH5P2'},
				{47.364+3.75,'GabberH5P1'},
				{47.715+3.75,'GabberH7P2'},
				{48.184+3.75,'GabberH5P1'},
				
				{45.957+7.5,'GabberH5P1'},
				{46.309+7.5,'GabberH5P2'},
				{47.012+7.5,'GabberH5P1'},
				{47.364+7.5,'GabberH5P2'},
				{47.715+7.5,'GabberH7P1'},
				{48.184+7.5,'GabberH5P2'},
				
				{45.957+11.25,'GabberH5P2'},
				{46.309+11.25,'GabberH5P1'},
				{47.012+11.25,'GabberH5P2'},
				{47.364+11.25,'GabberH5P1'},
				
				{59.082,'Blas'},
				
				{60.018,'DrivenDrift'},
				{61.893,'DrivenDrift'},
				{63.768,'DrivenDrift'},
				{65.643,'DrivenDrift'},
				{67.518,'DrivenDrift'},
				{69.393,'DrivenDrift'},
				{71.268,'DrivenDrift'},

				{82.518,'ScreenSwitchPt1'},
				{83.456,'ScreenSwitchPt2'},
				{84.393,'ScreenSwitchPt1'},
				{85.331,'ScreenSwitchPt2'},
				{86.268,'ScreenSwitchPt3'},
				{88.143,'ScreenSwitchPt4'},
				
				{89.081,'Stasis'},
				
				{90.019,'Blas'},
				
				{94.355,'Okay'},
				
				{98.456,'GrowlSwitch'},
				
				{101.855,'Okay'},
				
				{104.081,'VibOn'},
				{104.784,'VibOff'},
				{105.019,'VibOn'},
				{105.722,'VibOff'},
				{105.956,'VibOn'},
				{106.894,'VibOff'},
				
				{106.894,'BlasShort'},
				
				{114.394,'KickBack'},
				{117.206,'KickBack'},
				{117.558,'KickBack'},
				{119.081,'KickBack'},
				{119.433,'KickBack'},
				{120.956,'KickBack'},
				{121.308,'KickBack'},
				{122.597,'ResetFades'},
				
				{122.831,'Buildup'},
				{123.769,'Buildup'},
				{124.941,'Blas'},
				
				};
				
				
				prefix_mods = {
				
				{0,200,'1.5x,-999999% Cover,*10000 No Beat','end'},
				
				{0.000,13.144,'*10000 C256','end'},
				{7.286,7.520,'*64 C5000','end'},
				{7.520,8.457,'*64 C256','end'},
				{7.403,14.081,'*10000 800% Beat','end'},
				{10.683,11.152,'*10000 No Beat','end'},
				
				{10.800,240/256/8,'*64 150% Mini','len'},
				{10.918,240/256/8,'*32 112% Mini','len'},
				{10.976,240/256/8,'*32 75% Mini','len'},
				{11.093,240/256/8,'*32 37% Mini','len'},
				{11.152,240/256/8,'*32 No Mini','len'},
				
				{15.019,15.500,'*8 Stealth,*8 Dark','end'},
				{15.253,15.956,'*10000 No Tornado,*10000 No Bumpy,*10000 No Mini,*10000 No Dizzy,*10000 No Boost,*10000 No Invert,*10000 Overhead,*10000 1.5x,*10000 C256,*2 No Stealth,*2 No Dark','end'},
				{15.721,26.269,'*2 1.5x','end'},
				
				
				{15.956,27.206,'*12 No Brake,*15 No Drunk','end'},
				{15.956,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*1,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*2,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*3,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*4,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*5,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*6,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*7,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*8,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*9,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*10,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*11,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*12,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*13,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*14,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*15,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*16,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*17,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*18,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*19,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*20,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*21,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*22,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*23,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*24,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*25,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{15.956+240/256/8*26,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{15.956+240/256/8*27,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				
				{19.706+240/256/8*0,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{19.706+240/256/8*1,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{19.706+240/256/8*2,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{19.706+240/256/8*3,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{19.706+240/256/8*4,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{19.706+240/256/8*5,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{19.706+240/256/8*6,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{19.706+240/256/8*7,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{19.706+240/256/8*8,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{19.706+240/256/8*9,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{19.706+240/256/8*10,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{19.706+240/256/8*11,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{19.706+240/256/8*12,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{19.706+240/256/8*13,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				
				{21.347,240/256/4,'*16 Mini,*16 -100% Flip,*192 1200% Bumpy,*8 50% Stealth','len'},
				{21.581,240/256/8,'*32 No Mini,*32 No Flip,*256 No Bumpy,*16 No Stealth','len'},
				{21.699,240/256/4,'*24 Mini,*24 -100% Flip,*288 1200% Bumpy,*12 50% Stealth','len'},
				{21.933,240/256/4,'*48 No Mini,*48 No Flip,*576 No Bumpy,*24 No Stealth','len'},
				
				{23.691+240/256/8*0,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{23.691+240/256/8*1,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{23.691+240/256/8*2,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{23.691+240/256/8*3,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{23.691+240/256/8*4,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{23.691+240/256/8*5,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{23.691+240/256/8*6,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{23.691+240/256/8*7,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{23.691+240/256/8*8,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{23.691+240/256/8*9,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{23.691+240/256/8*10,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				
				{25.449+240/256/8*0,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{25.449+240/256/8*1,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{25.449+240/256/8*2,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{25.449+240/256/8*3,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{25.449+240/256/8*4,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				{25.449+240/256/8*5,0.050,'*10000 Brake,*10000 125% Drunk','len'},
				{25.449+240/256/8*6,0.050,'*10000 Brake,*10000 -125% Drunk','len'},
				
				
				{23.340,24.000,'*24 No Flip,*24 No Invert','end'},
				
				{24.980,240/256/4,'*32 -250% Mini,*9.6 75% Flip,*16 1x','len'},
				{25.214,240/256/4,'*32 No Mini,*9.6 No Flip,*16 1.5x','len'},
				
				{26.387,26.739,'*8.5333 Reverse','end'},
				{26.739,27.500,'*8.5333 No Reverse','end'},
				
				{27.206,240/256*2,'*128 No Bumpy,*4 1.5x,*50 No Dizzy,*8 No Flip','len'},
				{27.206,240/256/4,'*128 1500% Bumpy,*4 1x,*8 35% Flip,*50 628% Dizzy','len'},
				{27.675,240/256/4,'*128 1500% Bumpy,*4 1x,*4 25% Flip, *50 628% Dizzy','len'},
				{28.144,240/256/4,'*128 1500% Bumpy,*4 1x,*8 35% Flip,*50 628% Dizzy','len'},
				
				{29.082,38.456,'*0.6 Mini,2.25x','end'},
				
				{30.723,31.500,'*24 No Flip,*24 No Invert','end'},
				
				{30.956,36.581,'Blind','end'},
				
				{32.831+240/256/8*0,240/256/8,'*2 10000% Drunk','len'},
				{32.831+240/256/8*1,240/256/8,'*4 -10000% Drunk','len'},
				{32.831+240/256/8*2,240/256/8,'*4 10000% Drunk','len'},
				{32.831+240/256/8*3,240/256/8,'*4 -10000% Drunk','len'},
				{32.831+240/256/8*4,240/256/8,'*8 10000% Drunk','len'},
				{32.831+240/256/8*5,240/256/8,'*16 -10000% Drunk','len'},
				{32.831+240/256/8*6,240/256/8,'*16 10000% Drunk','len'},
				{32.831+240/256/8*7,240/256/8,'*16 -10000% Drunk','len'},
				{32.831+240/256/8*8,240/256/8,'*32 10000% Drunk','len'},
				{32.831+240/256/8*9,240/256/8,'*64 -10000% Drunk','len'},
				{32.831+240/256/8*10,240/256/8,'*64 10000% Drunk','len'},
				{32.831+240/256/8*11,240/256/8,'*64 -10000% Drunk','len'},
				{32.831+240/256/8*12,240/256/8,'*128 10000% Drunk','len'},
				{32.831+240/256/8*13,240/256/8,'*256 -10000% Drunk','len'},
				{32.831+240/256/8*14,240/256/2,'*256 No Drunk','len'},
				
				{36.581+240/256/8*0,240/256/8,'*2 10000% Drunk','len'},
				{36.581+240/256/8*1,240/256/8,'*4 -10000% Drunk','len'},
				{36.581+240/256/8*2,240/256/8,'*4 10000% Drunk','len'},
				{36.581+240/256/8*3,240/256/8,'*4 -10000% Drunk','len'},
				{36.581+240/256/8*4,240/256/8,'*8 10000% Drunk','len'},
				{36.581+240/256/8*5,240/256/8,'*16 -10000% Drunk','len'},
				{36.581+240/256/8*6,240/256/8,'*16 10000% Drunk','len'},
				{36.581+240/256/8*7,240/256/8,'*16 -10000% Drunk','len'},
				{36.581+240/256/8*8,240/256/8,'*32 10000% Drunk','len'},
				{36.581+240/256/8*9,240/256/8,'*64 -10000% Drunk','len'},
				{36.581+240/256/8*10,240/256/8,'*64 10000% Drunk','len'},
				{36.581+240/256/8*11,240/256/8,'*64 -10000% Drunk','len'},
				{36.581+240/256/8*12,240/256/8,'*128 10000% Drunk','len'},
				{36.581+240/256/8*13,240/256/8,'*256 -10000% Drunk','len'},
				{36.581+240/256/8*14,240/256/2,'*256 No Drunk','len'},
				
				{36.581,39.456,'*0.6 No Mini,*0.5 1.5x','end'},
				
				{43.145,240/256/12,'*18 150% Drunk','len'},
				{43.145+240/256/12*1,240/256/12,'*36 -150% Drunk','len'},
				{43.145+240/256/12*2,240/256/12,'*36 150% Drunk','len'},
				{43.145+240/256/12*3,240/256/12,'*36 -150% Drunk','len'},
				{43.145+240/256/12*4,240/256/12,'*36 150% Drunk','len'},
				{43.145+240/256/12*5,240/256/12,'*36 -150% Drunk','len'},
				{43.145+240/256/12*6,240/256/12,'*36 150% Drunk','len'},
				{43.145+240/256/12*7,240/256/12,'*36 -150% Drunk','len'},
				{43.145+240/256/12*8,240/256/12,'*36 150% Drunk','len'},
				{43.145+240/256/12*9,240/256/12,'*36 -150% Drunk','len'},
				{43.145+240/256/12*10,240/256/12,'*36 150% Drunk','len'},
				{43.145+240/256/12*11,240/256/12,'*20 No Drunk','len'},
				
				{43.145,240/256,'*1.125 Mini,2x','len'},
				{44.082,240/256,'*1.125 No Mini,1.5x','len'},
				
				{45.020,46.500,'*32 No Drunk,*32 No Tipsy','end'},
				{45.020,240/256/12,'*64 400% Drunk,*64 400% Tipsy','len'},
				{45.372,240/256/12,'*64 -400% Drunk,*64 -400% Tipsy','len'},
				{45.723,240/256/12,'*64 400% Drunk,*64 400% Tipsy','len'},
				
				{45.722,75.018,'*10000 500% Invert','end'},
				{52.284,53.456,'*10000 No Invert','end'},
				
				{53.223,53.456,'*24 No Flip,*24 No Invert','end'},
				
				{59.081,73.143,'0.5x','end'},
				
				{60.018,73.143,'400% Centered,*0.6 Stealth,*0.6 Dark,*0 Reverse','end'},
				{61.893,0.050,'*10000 No Centered,*10000 100.01% Reverse','len'},
				{61.893,240/256/8,'*16 No Stealth,*16 No Dark','len'},
				{63.768,0.050,'*10000 No Centered,*10000 No Reverse','len'},
				{63.768,240/256/8,'*16 No Stealth,*16 No Dark','len'},
				{65.643,0.050,'*10000 No Centered,*10000 100.01% Reverse','len'},
				{65.643,240/256/8,'*16 No Stealth,*16 No Dark','len'},
				{67.518,0.050,'*10000 No Centered,*10000 No Reverse','len'},
				{67.518,240/256/8,'*16 No Stealth,*16 No Dark','len'},
				{69.393,0.050,'*10000 No Centered,*10000 100.01% Reverse','len'},
				{69.393,240/256/8,'*16 No Stealth,*16 No Dark','len'},
				{71.268,0.050,'*10000 No Centered,*10000 No Reverse','len'},
				{71.268,240/256/8,'*16 No Stealth,*16 No Dark','len'},
				{73.143,75.018,'No Centered,*0.5 No Reverse','end'},
				
				--{60.018,75.018,'*10000 500% Invert','end'},
				{75.018,80.000,'*10000 No Invert','end'},
				
				{75.018,81.112,'*32 Mini,*8 2.5x,*8 Boost','end'},
				{75.018,240/256/8*3,'*32 150% Drunk,*32 150% Tipsy','len'},
				{75.370,240/256/8*13,'*32 -150% Drunk,*32 -150% Tipsy','len'},
				{75.018+240/256*2,240/256/8*3,'*32 150% Drunk,*32 150% Tipsy','len'},
				{75.370+240/256*2,240/256/8*13,'*32 -150% Drunk,*32 -150% Tipsy','len'},
				{75.018+240/256*4,240/256/8*3,'*32 150% Drunk,*32 150% Tipsy','len'},
				{75.370+240/256*4,240/256/8*13,'*32 -150% Drunk,*32 -150% Tipsy','len'},
				{75.018+240/256*6,240/256/8*3,'*32 150% Drunk,*32 150% Tipsy','len'},
				{75.370+240/256*6,240/256/8*13,'*32 No Drunk,*32 No Tipsy,*8 No Boost','len'},
				
				{81.112,82.518,'*16 No Mini','end'},
				{81.112,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*1,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*2,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*3,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*4,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*5,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*6,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*7,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*8,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*9,0.050,'*10000 200% Mini','len'},
				{81.112+240/256/8*10,0.050,'*10000 200% Mini','len'},
				
				{81.112,88.143,'1.75x','end'},
				
				{82.518,89.081,'Blind','end'},
				
				{90.018,90.500,'*8 Stealth,*8 Dark','end'},
				{90.253,90.956,'*10000 No Tornado,*10000 No Bumpy,*10000 No Mini,*10000 No Dizzy,*10000 No Boost,*10000 No Invert,*10000 Overhead,*10000 1.5x,*10000 C256,*2 No Stealth,*2 No Dark','end'},
				
				
				
				{96.581,98.456,'*10000 0.1x,*10000 C3840,*8 5000% Wave,*4 5000% Bumpy,*1 5000% Drunk','end'},
				{98.222,98.691,'*64 No Wave,*32 No Bumpy,*8 No Drunk','end'},
				{98.456,98.691,'*10000 1.5x,*10000 C256','end'},
				
				{98.223,99.000,'*24 No Flip,*24 No Invert','end'},
				
				{100.097,101.000,'*10000 No Dizzy,*10000 No Stealth','end'},
				{100.097,240/256/4,'*10000 1256% Dizzy,*1000 60% Stealth','len'},
				
				{101.269,102.206,'*16 No Mini,*8 No Tipsy,*8 No Drunk,*1.6 No Flip','end'},
				{101.269,0.050,'*10000 -200% Mini,*10000 100% Tipsy,*10000 100% Drunk,*10000 20% Flip','len'},
				{101.445,0.050,'*10000 -200% Mini,*10000 -100% Tipsy,*10000 -100% Drunk,*10000 20% Flip','len'},
				{101.620,0.050,'*10000 -200% Mini,*10000 100% Tipsy,*10000 100% Drunk,*10000 20% Flip','len'},
				
				{102.206,103.613,'*4.2667 600% Reverse','end'},
				{102.441,240/256/2,'*4.2667 Flip','len'},
				{102.909,240/256/2,'*4.2667 No Flip,*4.2667 Invert','len'},
				{103.378,240/256/2,'*4.2667 No Flip,*4.2667 No Invert','len'},
				{103.613,240/256/2,'*4.2667 No Flip,*4.2667 No Invert,*10000 No Reverse','len'},
				
				{104.081,240/256,'*0.3 20% Reverse,*0.3 20% Flip,*1.5 -100% Mini','len'},
				{105.019,240/256,'*0.3 40% Reverse,*0.3 40% Flip,*1.5 -200% Mini','len'},
				{105.956,107.363,'*0.45 No Reverse,*0.45 No Flip,*3 Mini','end'},
				{107.363,107.831,'*2.2 No Mini','end'},
				
				--{107.363,130.000,'*2 2x,*2 Wave','end'},
				
				{110.644,111.582,'*24 No Flip,*24 No Invert,*10000 No Dizzy,*10000 No Stealth,*3 No Reverse','end'},
				{110.644,240/256/8,'*10000 1256% Dizzy,*1000 60% Stealth','len'},
				{110.878,240/256/8,'*10000 1256% Dizzy,*1000 60% Stealth','len'},
				{111.113,240/256/6,'*3 50% Reverse','len'},
				
				{115.332,116.000,'*24 No Flip,*24 No Invert','end'},
				
				{121.894,999,'*10000 1.5x,*10000 C256','end'},
				{122.597,122.831,'*64 C5000','end'},
				{122.831,999,'*64 C256','end'},
				{122.714,124.589,'*10000 800% Beat','end'},
				
				
				
				}
				
				
				
				prefix_boostbrake = {
				
					{90.956,999,'*12 Brake,*12 No Boost','end'},
					{91.191,999,'*12 No Brake,*12 Boost','end'},
					{91.308,999,'*12 Brake,*12 No Boost','end'},
					{91.425,999,'*12 No Brake,*12 Boost','end'},
					{91.484,999,'*12 Brake,*12 No Boost','end'},
					{91.542,999,'*12 No Brake,*12 Boost','end'},
					{91.659,999,'*12 Brake,*12 No Boost','end'},
					{91.777,999,'*12 No Brake,*12 Boost','end'},
					{91.835,999,'*12 Brake,*12 No Boost','end'},
					{91.894,999,'*12 No Brake,*12 Boost','end'},
					{92.011,999,'*12 Brake,*12 No Boost','end'},
					{92.070,999,'*12 No Brake,*12 Boost','end'},
					{92.128,999,'*12 Brake,*12 No Boost','end'},
					{92.245,999,'*12 No Brake,*12 Boost','end'},
					{92.304,999,'*12 Brake,*12 No Boost','end'},
					{92.363,999,'*12 No Brake,*12 Boost','end'},
					{92.480,999,'*12 Brake,*12 No Boost','end'},
					{92.538,999,'*12 No Brake,*12 Boost','end'},
					{92.597,999,'*12 Brake,*12 No Boost','end'},
					{92.655,999,'*12 No Brake,*12 Boost','end'},
					{92.714,999,'*12 Brake,*12 No Boost','end'},
					{92.773,999,'*12 No Brake,*12 Boost','end'},
					{92.831,999,'*12 Brake,*12 No Boost','end'},
					{92.948,999,'*12 No Brake,*12 Boost','end'},
					{93.007,999,'*12 Brake,*12 No Boost','end'},
					{93.066,999,'*12 No Brake,*12 Boost','end'},
					{93.183,999,'*12 Brake,*12 No Boost','end'},
					{93.300,999,'*12 No Brake,*12 Boost','end'},
					{93.359,999,'*12 Brake,*12 No Boost','end'},
					{93.417,999,'*12 No Brake,*12 Boost','end'},
					{93.534,999,'*12 Brake,*12 No Boost','end'},
					{93.652,999,'*12 No Brake,*12 Boost','end'},
					{93.710,999,'*12 Brake,*12 No Boost','end'},
					{93.769,999,'*12 No Brake,*12 Boost','end'},
					{93.886,999,'*12 Brake,*12 No Boost','end'},
					{93.945,999,'*12 No Brake,*12 Boost','end'},
					{94.003,999,'*12 Brake,*12 No Boost','end'},
					{94.120,999,'*12 No Brake,*12 Boost','end'},
					{94.179,999,'*12 Brake,*12 No Boost','end'},
					{94.238,999,'*12 No Brake,*12 Boost','end'},
					{94.355,999,'*12 Brake,*12 No Boost','end'},
					{94.413,999,'*12 No Brake,*12 Boost','end'},
					{94.472,999,'*12 Brake,*12 No Boost','end'},
					{94.706,999,'*12 No Brake,*12 Boost','end'},
					{94.941,999,'*12 Brake,*12 No Boost','end'},
					{95.058,999,'*12 No Brake,*12 Boost','end'},
					{95.175,999,'*12 Brake,*12 No Boost','end'},
					{95.234,999,'*12 No Brake,*12 Boost','end'},
					{95.292,999,'*12 Brake,*12 No Boost','end'},
					{95.409,999,'*12 No Brake,*12 Boost','end'},
					{95.527,999,'*12 Brake,*12 No Boost','end'},
					{95.585,999,'*12 No Brake,*12 Boost','end'},
					{95.644,999,'*12 Brake,*12 No Boost','end'},
					{95.761,999,'*12 No Brake,*12 Boost','end'},
					{95.820,999,'*12 Brake,*12 No Boost','end'},
					{95.878,999,'*12 No Brake,*12 Boost','end'},
					{95.995,999,'*12 Brake,*12 No Boost','end'},
					{96.054,999,'*12 No Brake,*12 Boost','end'},
					{96.113,999,'*12 Brake,*12 No Boost','end'},
					{96.230,999,'*12 No Brake,*12 Boost','end'},
					{96.347,999,'*12 No Brake,*12 No Boost','end'},
					{98.691,999,'*12 No Brake,*12 Boost','end'},
					{98.808,999,'*12 Brake,*12 No Boost','end'},
					{98.925,999,'*12 No Brake,*12 Boost','end'},
					{98.984,999,'*12 Brake,*12 No Boost','end'},
					{99.042,999,'*12 No Brake,*12 Boost','end'},
					{99.159,999,'*12 Brake,*12 No Boost','end'},
					{99.277,999,'*12 No Brake,*12 Boost','end'},
					{99.335,999,'*12 Brake,*12 No Boost','end'},
					{99.394,999,'*12 No Brake,*12 Boost','end'},
					{99.511,999,'*12 Brake,*12 No Boost','end'},
					{99.570,999,'*12 No Brake,*12 Boost','end'},
					{99.628,999,'*12 Brake,*12 No Boost','end'},
					{99.745,999,'*12 No Brake,*12 Boost','end'},
					{99.804,999,'*12 Brake,*12 No Boost','end'},
					{99.863,999,'*12 No Brake,*12 Boost','end'},
					{99.980,999,'*12 Brake,*12 No Boost','end'},
					{100.038,999,'*12 No Brake,*12 Boost','end'},
					{100.097,999,'*12 Brake,*12 No Boost','end'},
					{100.331,999,'*12 No Brake,*12 Boost','end'},
					{100.448,999,'*12 Brake,*12 No Boost','end'},
					{100.507,999,'*12 No Brake,*12 Boost','end'},
					{100.556,999,'*12 Brake,*12 No Boost','end'},
					{100.683,999,'*12 No Brake,*12 Boost','end'},
					{100.800,999,'*12 Brake,*12 No Boost','end'},
					{100.878,999,'*12 No Brake,*12 Boost','end'},
					{100.956,999,'*12 Brake,*12 No Boost','end'},
					{101.034,999,'*12 No Brake,*12 Boost','end'},
					{101.113,999,'*12 Brake,*12 No Boost','end'},
					{101.191,999,'*12 No Brake,*12 Boost','end'},
					{101.269,102.000,'*12 No Brake,*12 No Boost','end'}
				
				}
				
				
				
				for i,v in pairs(prefix_boostbrake) do
					if i < table.getn(prefix_boostbrake) then
						prefix_boostbrake[i][2] = prefix_boostbrake[i+1][1];
					end
					
					table.insert(prefix_mods,v);
				end
				
				
				
				local inc = 0;
				
				for i = 22.637,23.400,240/256/16 do
					local s = '';
					if math.mod(inc,4) == 0 then s = '*24 Invert,*24 No Flip';
				elseif math.mod(inc,4) == 1 then s = '*24 No Invert,*24 Flip';
				elseif math.mod(inc,4) == 2 then s = '*24 -100% Invert,*24 Flip';
				elseif math.mod(inc,4) == 3 then s = '*24 No Invert,*24 No Flip';
					end
					
					table.insert(prefix_mods,{i,240/256/16,s,'len'});
					inc = inc + 1;
				end
				
				inc = 0;
				for i = 29.082,30.700,240/256/16 do
					local s = '';
					if math.mod(inc,4) == 0 then s = '*24 Invert,*24 No Flip';
				elseif math.mod(inc,4) == 1 then s = '*24 No Invert,*24 Flip';
				elseif math.mod(inc,4) == 2 then s = '*24 -100% Invert,*24 Flip';
				elseif math.mod(inc,4) == 3 then s = '*24 No Invert,*24 No Flip';
					end
					
					table.insert(prefix_mods,{i,240/256/16,s,'len'});
					inc = inc + 1;
				end
				
				inc = 0;
				for i = 44.082,45.000,240/256/16 do
					local s = '';
					if math.mod(inc,4) == 0 then s = '*24 Invert,*24 No Flip';
				elseif math.mod(inc,4) == 1 then s = '*24 No Invert,*24 Flip';
				elseif math.mod(inc,4) == 2 then s = '*24 -100% Invert,*24 Flip';
				elseif math.mod(inc,4) == 3 then s = '*24 No Invert,*24 No Flip';
					end
					
					table.insert(prefix_mods,{i,240/256/16,s,'len'});
					inc = inc + 1;
				end
				
				inc = 0;
				for i = 52.520,53.250,240/256/16 do
					local s = '';
					if math.mod(inc,4) == 0 then s = '*24 Invert,*24 No Flip';
				elseif math.mod(inc,4) == 1 then s = '*24 No Invert,*24 Flip';
				elseif math.mod(inc,4) == 2 then s = '*24 -100% Invert,*24 Flip';
				elseif math.mod(inc,4) == 3 then s = '*24 No Invert,*24 No Flip';
					end
					
					table.insert(prefix_mods,{i,240/256/16,s,'len'});
					inc = inc + 1;
				end
				
				inc = 0;
				for i = 97.520,98.250,240/256/16 do
					local s = '';
					if math.mod(inc,4) == 0 then s = '*24 Invert,*24 No Flip';
				elseif math.mod(inc,4) == 1 then s = '*24 No Invert,*24 Flip';
				elseif math.mod(inc,4) == 2 then s = '*24 -100% Invert,*24 Flip';
				elseif math.mod(inc,4) == 3 then s = '*24 No Invert,*24 No Flip';
					end
					
					table.insert(prefix_mods,{i,240/256/16,s,'len'});
					inc = inc + 1;
				end
				
				inc = 0;
				for i = 107.832,110.600,240/256/16 do
					local s = '';
					if math.mod(inc,4) == 0 then s = '*24 Invert,*24 No Flip,*24 No Tornado';
				elseif math.mod(inc,4) == 1 then s = '*24 No Invert,*24 Flip,*24 -100% Tornado';
				elseif math.mod(inc,4) == 2 then s = '*24 -100% Invert,*24 Flip,*24 No Tornado';
				elseif math.mod(inc,4) == 3 then s = '*24 No Invert,*24 No Flip,*24 No Tornado';
					end
					
					table.insert(prefix_mods,{i,240/256/16,s,'len'});
					inc = inc + 1;
				end
				
				inc = 0;
				for i = 111.582,115.332,240/256/16 do
					local s = '';
					if math.mod(inc,4) == 0 then s = '*24 Invert,*24 No Flip,*24 No Tornado';
				elseif math.mod(inc,4) == 1 then s = '*24 No Invert,*24 Flip,*24 -100% Tornado';
				elseif math.mod(inc,4) == 2 then s = '*24 -100% Invert,*24 Flip,*24 No Tornado';
				elseif math.mod(inc,4) == 3 then s = '*24 No Invert,*24 No Flip,*24 No Tornado';
					end
					
					table.insert(prefix_mods,{i,240/256/16,s,'len'});
					inc = inc + 1;
				end
				
				
				
				
				
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall');
			prefix_inc = prefix_inc + 1;
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:rotationx(0);							
						v:rotationy(0);
						v:rotationz(0);
						v:x(SCREEN_CENTER_X+160*multi);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);						
						v:GetChild('Judgment'):basezoomx(1);
						v:GetChild('Judgment'):basezoomy(1);
						v:GetChild('Judgment'):stopeffect();
						
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
					end
				end
			end
			
			if beat >= 85 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(0.1171875);
						v:x(SCREEN_CENTER_X-multi*160);
						v:sleep(0.1171875*2);
						v:linear(0.1171875);
						v:x(SCREEN_CENTER_X+multi*160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			if beat >= 97 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/256/4*7);
						v:GetChild('Judgment'):linear(240/256/4*7);
						v:GetChild('Combo'):linear(240/256/4*7);
						
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(multi*160);
						v:GetChild('Combo'):x(multi*160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 143 and fgcurcommand == 3 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:zoom(0);
						v:linear(240/256/16);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/16);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/16);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/16);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:decelerate(240/256/4);
						v:zoom(1);
						v:sleep(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 161 and fgcurcommand == 4 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:bounce();
						v:effectmagnitude(0,-200,0);
						v:effectperiod(1);
						v:effectclock('bgm');
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 165 and fgcurcommand == 5 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:stopeffect();
						
						v:sleep(240/256/4*3);
						v:GetChild('Judgment'):sleep(240/256/4*3);
						v:GetChild('Combo'):sleep(240/256/4*3);
						
						v:x(SCREEN_CENTER_X+multi*320);
						v:GetChild('Judgment'):x(multi*-160);
						v:GetChild('Combo'):x(multi*-160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			
			if beat >= 181 and fgcurcommand == 6 then
				SCREENMAN:GetTopScreen():linear(240/256);
				SCREENMAN:GetTopScreen():skewx(0.75);
				SCREENMAN:GetTopScreen():rotationz(-25);
				SCREENMAN:GetTopScreen():zoom(1.25);
				SCREENMAN:GetTopScreen():x(-350);
				SCREENMAN:GetTopScreen():y(150);
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 196 and fgcurcommand == 7 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(multi*160);
						v:GetChild('Combo'):x(multi*160);
						
						v:sleep(240/256/4*5);
						v:GetChild('Judgment'):sleep(240/256/4*5);
						v:GetChild('Combo'):sleep(240/256/4*5);
						
						v:x(SCREEN_CENTER_X+multi*320);
						v:GetChild('Judgment'):x(multi*-160);
						v:GetChild('Combo'):x(multi*-160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 213 and fgcurcommand == 8 then
				SCREENMAN:GetTopScreen():linear(240/256);
				SCREENMAN:GetTopScreen():skewx(-0.75);
				SCREENMAN:GetTopScreen():rotationz(25);
				SCREENMAN:GetTopScreen():zoom(1.25);
				SCREENMAN:GetTopScreen():x(300);
				SCREENMAN:GetTopScreen():y(-100);
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 223 and fgcurcommand == 9 then
				SCREENMAN:GetTopScreen():linear(240/256/2);
				SCREENMAN:GetTopScreen():skewx(0);
				SCREENMAN:GetTopScreen():rotationz(0);
				SCREENMAN:GetTopScreen():x(0);
				SCREENMAN:GetTopScreen():y(0);
				SCREENMAN:GetTopScreen():zoom(1);
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 285 and fgcurcommand == 10 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/256*2);
						v:skewx(0);
						v:rotationz(0);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 293 and fgcurcommand == 11 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(multi*160);
						v:GetChild('Combo'):x(multi*160);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat >= 32 and beat < 40.5 then
				for i,v in pairs(prefix_plr) do
					if v then
						--v:x(SCREEN_CENTER_X+(math.sin(beat*math.pi/2)*auxvar:getaux()))
						v:vibrate();
						v:effectmagnitude(auxvar:getaux()/2,auxvar:getaux()/2,0);
					end
				end
				
				if beat >= 38 then
					GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*10 ..'% Bumpy');
				end
			end
			
			if beat > 105 and beat < 130 then
				local multi2 = 1; if math.mod(prefix_inc,2) == 0 then multi2 = -1; end
				for i,v in pairs(prefix_plr) do
					if v then
						--v:vibrate();
						if i == 1 then
							--v:effectmagnitude(0,0,auxvar:getaux()*5);
							v:x(prefix_lastxp1+auxvar:getaux()*multi2);
							GAMESTATE:ApplyGameCommand('mod,*10000 '.. math.min(100,auxvar:getaux()*1.5) ..'% Stealth,*10000 '.. math.min(100,auxvar:getaux()*1.5) ..'% Dark',1);
						else
							--v:effectmagnitude(0,0,500 - auxvar:getaux()*5);
							if beat < 129 then
								v:x(prefix_lastxp2 + (100 - auxvar:getaux())*multi2);
							else
								v:x(prefix_lastxp2+auxvar:getaux()*multi2);
							end
							GAMESTATE:ApplyGameCommand('mod,*10000 '.. math.min(100,150 - auxvar:getaux()*1.5) ..'% Stealth,*10000 '.. math.min(100,150 - auxvar:getaux()*1.5) ..'% Dark',2);
						end
					end
				end
			end
			
			if beat >= 490 and beat < 493 then
				for i,v in pairs(prefix_plr) do
					if v then
						--v:x(SCREEN_CENTER_X+(math.sin(beat*math.pi/2)*auxvar:getaux()))
						v:vibrate();
						v:effectmagnitude(auxvar:getaux()/2,auxvar:getaux()/2,0);
					end
				end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()*10 ..'% Bumpy');
			end
			
			
			------------------------------
			-- TIME SPECIFIC STUFF (?!) --
			------------------------------
			if prefix_time > 14.081 and prefix_time < 15.253 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:stopeffect();
					end
				end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()..'% Tornado,*10000 '..auxvar:getaux()*4 ..'% Dizzy,*10000 '..auxvar:getaux()/5 ..'% Mini,*10000 '..auxvar:getaux()*3.5 ..'% Bumpy,*10000 '..auxvar:getaux()/5 ..'% Distant,*10000 '..auxvar:getaux()/4 ..'% Invert');
			end
			
			if prefix_time > 89.081 and prefix_time < 90.253 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:stopeffect();
					end
				end
				GAMESTATE:ApplyGameCommand('mod,*10000 '..auxvar:getaux()..'% Tornado,*10000 '..auxvar:getaux()*4 ..'% Dizzy,*10000 '..auxvar:getaux()/5 ..'% Mini,*10000 '..auxvar:getaux()*3.5 ..'% Bumpy,*10000 '..auxvar:getaux()/5 ..'% Distant,*10000 '..auxvar:getaux()/4 ..'% Invert');
			end
			
			
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.008 - 0.001) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		
		DrivenDriftMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:finishtweening();
					v:rotationz(0);
					v:linear(240/256*2);
					v:rotationz((math.random()*5+5)*-multi);
				end
			end
		end"
		
		StasisMessageCommand="finishtweening;aux,0;decelerate,240/256/4*3.5;aux,500;sleep,1"
		BuildupMessageCommand="finishtweening;aux,0;linear,240/256/8;aux,100;sleep,240/256/4*3;linear,240/256/8;aux,0"
		BuildupShortMessageCommand="finishtweening;aux,0;linear,240/256/8;aux,100;sleep,240/256/4;linear,240/256/8;aux,0"
		
		TeleportB2P1MessageCommand="finishtweening;playcommand,MoveP2;aux,0;linear,240/256/16*2;aux,100;"
		TeleportB2P2MessageCommand="finishtweening;playcommand,MoveP1;aux,100;linear,240/256/16*2;aux,0;"
		
		TeleportB3P1MessageCommand="finishtweening;playcommand,MoveP2;aux,0;linear,240/256/16*3;aux,100;"
		TeleportB3P2MessageCommand="finishtweening;playcommand,MoveP1;aux,100;linear,240/256/16*3;aux,0;"
		
		TeleportB4P1MessageCommand="finishtweening;playcommand,MoveP2;aux,0;linear,240/256/16*4;aux,100;"
		TeleportB4P2MessageCommand="finishtweening;playcommand,MoveP1;aux,100;linear,240/256/16*4;aux,0;"
		
		TeleportResetMessageCommand="finishtweening;playcommand,ResetPlayfields;aux,100;linear,240/256/16*4;aux,0;"
		
		FeelTheBeatMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:linear(240/256/4);
					v:addy(500);
					v:sleep(0);
					v:addy(-1000);
					v:linear(240/256/4);
					v:addy(500);
				end
			end
		end"
		
		OkayMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:linear(240/256/8);
					v:addy(500);
					v:sleep(0);
					v:addy(-1000);
					v:linear(240/256/8);
					v:addy(500);
				end
			end
		end"
		
		VibOnMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:vibrate();
					v:effectmagnitude(25,25,0);
				end
			end
		end"
		
		VibOffMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:stopeffect();
				end
			end
		end"
		
		JerkAroundPt1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X);
				end
			end
		end"
		
		JerkAroundPt2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					
					v:decelerate(240/256/12);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/12);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/12);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/12);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/12);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/12);
					v:x(SCREEN_CENTER_X);
				end
			end
		end"
		
		JerkAroundPt3MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/8);
					v:x(SCREEN_CENTER_X-160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X+160);
					v:decelerate(240/256/16);
					v:x(SCREEN_CENTER_X);
				end
			end
		end"
		
		GrowlSwitchMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if i == 2 then multi = 1; end
				if v then
					v:linear(240/256/8);
					v:x(SCREEN_CENTER_X-160*multi);
					v:linear(240/256/8);
					v:x(SCREEN_CENTER_X+160*multi);
				end
			end
		end"
		
		MoveP1Command="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						prefix_lastxp1 = math.random(SCREEN_LEFT+50,SCREEN_CENTER_X-50);
						v:rotationz(math.random(0,25));
						v:zoom(1 + math.random()/2);
					end
				end
			end
		end"
		
		MoveP2Command="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						prefix_lastxp2 = math.random(SCREEN_CENTER_X+50,SCREEN_RIGHT-50);
						v:rotationz(math.random(-25,0));
						v:zoom(1 + math.random()/2);
					end
				end
			end
		end"
		
		ResetPlayfieldsCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					prefix_lastxp1 = SCREEN_CENTER_X;
					prefix_lastxp2 = SCREEN_CENTER_X;
					v:rotationz(0);
					v:zoom(1);
				end
			end
		end"
		
		GabberH5P1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					else
						v:sleep(240/256/16);
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					end
				end
			end
		end"
		GabberH5P2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					else
						v:sleep(240/256/16);
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					end
				end
			end
		end"
		
		GabberH7P1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					else
						v:sleep(240/256/16);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					end
				end
			end
		end"
		
		GabberH7P2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 2 then
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					else
						v:sleep(240/256/16);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
						v:sleep(0);
						
						v:zoom(0);
						v:linear(240/256/8);
						v:zoom(1);
					end
				end
			end
		end"
		
		ScreenSwitchPt1MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						v:decelerate(240/256/16*2);
						v:addx(-SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(-SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(-SCREEN_HEIGHT);
					else
						v:x(SCREEN_CENTER_X+SCREEN_WIDTH);
						v:y(SCREEN_CENTER_Y);
						v:decelerate(240/256/16*2);
						v:addx(-SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y+SCREEN_HEIGHT);
						v:decelerate(240/256/16*2);
						v:addy(-SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(-SCREEN_HEIGHT);
					end
				end
			end
		end"
		ScreenSwitchPt2MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addx(-SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(-SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(SCREEN_HEIGHT);
					else
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:y(SCREEN_CENTER_Y);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addx(-SCREEN_WIDTH);
						v:sleep(240/256/16);
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y-SCREEN_HEIGHT);
						v:decelerate(240/256/16*2);
						v:addy(SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(-SCREEN_HEIGHT);
						v:sleep(240/256/16);
						v:decelerate(240/256/16*2);
						v:addy(SCREEN_HEIGHT);
					end
				end
			end
		end"
		
		ScreenSwitchPt3MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
					else
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:y(SCREEN_CENTER_Y);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:x(SCREEN_CENTER_X-SCREEN_WIDTH);
						v:decelerate(240/256/16*3);
						v:addx(SCREEN_WIDTH);
						v:sleep(0);
						v:decelerate(240/256/16*2);
						v:addx(SCREEN_WIDTH);
					end
				end
			end
		end"
		
		
		
		ScreenSwitchPt4MessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				if v then
					if i == 1 then
						v:x(SCREEN_CENTER_X);
						v:y(SCREEN_CENTER_Y);
						
						v:linear(240/256/16);
						v:addx(-SCREEN_WIDTH);
						
						for j = 1,7 do
							v:sleep(0);
							v:x(SCREEN_CENTER_X+SCREEN_WIDTH);
							v:linear(240/256/8);
							v:addx(-SCREEN_WIDTH*2);
						end
						
						v:sleep(0);
						v:x(SCREEN_CENTER_X+SCREEN_WIDTH);
						v:linear(240/256/16);
						v:x(SCREEN_CENTER_X-160);
					else
						v:x(SCREEN_CENTER_X+SCREEN_WIDTH);
						v:y(SCREEN_CENTER_Y);
						
						for j = 1,7 do
							v:sleep(0);
							v:x(SCREEN_CENTER_X+SCREEN_WIDTH);
							v:linear(240/256/8);
							v:addx(-SCREEN_WIDTH*2);
						end
						
						v:sleep(0);
						v:x(SCREEN_CENTER_X+SCREEN_WIDTH);
						v:linear(240/256/16);
						v:x(SCREEN_CENTER_X+160);
					end
					v:GetChild('Judgment'):x(0);
					v:GetChild('Combo'):x(0);
				end
			end
		end"
		
		
		
	/>
	
	<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;hidden,1" BlasMessageCommand="hidden,0;sleep,240/256/4;queuemessage,Tix" BlasShortMessageCommand="hidden,0;sleep,240/256/4;queuemessage,TixShort" TixShortMessageCommand="hidden,1;" TixMessageCommand="hidden,1;" ><children>
		<Layer File="characters/blas" OnCommand="vibrate;diffuse,#FF0000FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/blas" OnCommand="vibrate;diffuse,#00FF00FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/blas" OnCommand="vibrate;diffuse,#0000FFFF;effectmagnitude,20,20,0;blend,add" />
	</children></ActorFrame>
	
	<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;hidden,1" TixMessageCommand="hidden,0;sleep,240/256/4;queuemessage,Ri" TixShortMessageCommand="hidden,0;sleep,240/256/4;queuecommand,Done" DoneCommand="hidden,1" RiMessageCommand="hidden,1;" ><children>
		<Layer File="characters/tix" OnCommand="vibrate;diffuse,#FF0000FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/tix" OnCommand="vibrate;diffuse,#00FF00FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/tix" OnCommand="vibrate;diffuse,#0000FFFF;effectmagnitude,20,20,0;blend,add" />
	</children></ActorFrame>
	
	<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;hidden,1" RiMessageCommand="hidden,0;sleep,240/256/4;queuemessage,Otz" OtzMessageCommand="hidden,1;" ><children>
		<Layer File="characters/ri" OnCommand="vibrate;diffuse,#FF0000FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/ri" OnCommand="vibrate;diffuse,#00FF00FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/ri" OnCommand="vibrate;diffuse,#0000FFFF;effectmagnitude,20,20,0;blend,add" />
	</children></ActorFrame>
	
	<ActorFrame OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;zoom,2;hidden,1" OtzMessageCommand="hidden,0;sleep,240/256/4;queuecommand,Done" DoneCommand="hidden,1;" ><children>
		<Layer File="characters/otz" OnCommand="vibrate;diffuse,#FF0000FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/otz" OnCommand="vibrate;diffuse,#00FF00FF;effectmagnitude,20,20,0;blend,add" />
		<Layer File="characters/otz" OnCommand="vibrate;diffuse,#0000FFFF;effectmagnitude,20,20,0;blend,add" />
	</children></ActorFrame>
	
	
	
	<Layer
		Type="Quad"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_TOP;vertalign,bottom;zoomto,SCREEN_WIDTH,SCREEN_HEIGHT*2;diffuse,#000000;fadebottom,0.25;linear,7;addy,1000"
		KickBackMessageCommand="stoptweening;diffusealpha,1;linear,0.1;addy,-100;linear,7;addy,1000"
		ResetFadesMessageCommand="stoptweening;accelerate,0.2;y,SCREEN_TOP;sleep,0.1;diffusealpha,0"
	/>
	<Layer
		Type="Quad"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_BOTTOM;vertalign,top;zoomto,SCREEN_WIDTH,SCREEN_HEIGHT*2;diffuse,#000000;fadetop,0.25;linear,7;addy,-1000"
		KickBackMessageCommand="stoptweening;diffusealpha,1;linear,0.1;addy,100;linear,7;addy,-1000"
		ResetFadesMessageCommand="stoptweening;accelerate,0.2;y,SCREEN_BOTTOM;sleep,0.1;diffusealpha,0"
	/>
	
</children></ActorFrame>