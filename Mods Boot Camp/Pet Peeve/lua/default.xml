<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,GAMESTATE:GetCurrentSong():MusicLengthSeconds()"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
				
				};
				
				
				local inc = 2;
				for i = 0,26 do
					local pn = math.mod(inc,2) + 1;
					table.insert(prefix_messages,{14.146+240/140/4*i,'P'..pn..'Vib'});
					inc = inc + 1;
				end
				
				inc = 2;
				for i = 0,26 do
					local pn = math.mod(inc,2) + 1;
					table.insert(prefix_messages,{27.861+240/140/4*i,'P'..pn..'Vib'});
					inc = inc + 1;
				end
				
				
				
				inc = 0;
				for i = 0,15 do
					table.insert(prefix_messages,{75.861+240/140/8*i,'Rockin'});
				end
				
				inc = 0;
				for i = 0,15 do
					table.insert(prefix_messages,{79.289+240/140/16*i,'RockinShort'});
				end
				
				inc = 2;
				for i = 0,55 do
					local pn = math.mod(inc,2) + 1;
					if i ~= 30 and i ~= 31 then table.insert(prefix_messages,{82.718+240/140/4*i,'P'..pn..'Vib'}); end
					inc = inc + 1;
				end
				
				
				
				prefix_inc = 1;
				
				
				
				prefix_mods = {
				
				{0,200,'2.5x,-999999% Cover,*10000 No Beat','end'},
				
				{0.432,14.146,'*16 No Flip','end'},
				{0.432+240/140/8*3*0,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*1,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*2,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*3,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*4,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*5,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*6,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*7,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*8,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*9,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*10,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*11,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*12,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*13,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*14,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*15,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*16,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*17,240/140/16*3,'*16 -100% Flip','len'},
				{0.432+240/140/8*3*18,240/140/16*3,'*16 -100% Flip','len'},
				
				{7.503,7.825,'*10000 80% Stealth','end'},
				{7.825,8.146,'*10000 No Stealth','end'},
				{8.146,8.468,'*10000 80% Stealth','end'},
				{8.468,8.896,'*10000 No Stealth','end'},
				{8.896,9.218,'*10000 80% Stealth','end'},
				{9.218,9.646,'*10000 No Stealth','end'},
				{9.646,10.075,'*10000 80% Stealth','end'},
				{10.075,10.718,'*10000 No Stealth','end'},
				
				{12.218,240/140/8,'*4 30% Hallway','len'},
				{12.218+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{12.218+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{12.218+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{12.218+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{12.218+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{12.218+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{13.718,240/140/8,'*24 200% Distant','len'},
				{13.932,15.000,'*8 Overhead','end'},
				
				{27.861,240/140/8,'*4 30% Hallway','len'},
				{27.861+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{27.861+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{27.861+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{27.861+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{27.861+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{27.861+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{27.861+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{27.861+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{27.861+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{27.861+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{27.861+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{27.861+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{27.861+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{27.861+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{31.289,240/140/8,'*4 30% Hallway','len'},
				{31.289+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{31.289+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{31.289+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{31.289+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{31.289+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{31.289+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{31.289+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{31.289+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{31.289+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{31.289+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{31.289+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{31.289+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{31.289+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{31.289+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{34.718,240/140/8,'*4 30% Hallway','len'},
				{34.718+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{34.718+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{34.718+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{34.718+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{34.718+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{34.718+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{34.718+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{34.718+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{34.718+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{34.718+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{34.718+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{34.718+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{34.718+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{34.718+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{38.146,240/140/8,'*4 30% Hallway','len'},
				{38.146+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{38.146+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{38.146+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{38.146+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{38.146+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{38.146+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{38.146+240/140/8*7,240/140/4,'*8 Overhead','len'},
				
				
				{26.146,39.861,'*0.58333 100.01% Reverse,*10000 628% Dizzy,3x','end'},
				{27.861,39.861,'*10000 No Dizzy','end'},
				{39.861,41.575,'*0.58333 No Reverse,*10000 628% Dizzy,3x','end'},
				{41.575,51.861,'*10000 No Dizzy','end'},
				
				
				{41.575,240/140/8,'*4 30% Hallway','len'},
				{41.575+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{41.575+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{41.575+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{41.575+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{41.575+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{41.575+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{41.575+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{41.575+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{41.575+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{41.575+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{41.575+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{41.575+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{41.575+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{41.575+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{45.003,240/140/8,'*4 30% Hallway','len'},
				{45.003+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{45.003+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{45.003+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{45.003+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{45.003+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{45.003+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{45.003+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{45.003+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{45.003+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{45.003+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{45.003+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{45.003+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{45.003+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{45.003+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{48.432,240/140/8,'*4 30% Hallway','len'},
				{48.432+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{48.432+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{48.432+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{48.432+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{48.432+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{48.432+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{48.432+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{48.432+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{48.432+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{48.432+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{48.432+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{48.432+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{48.432+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{48.432+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{51.861,240/140/8,'*4 30% Hallway','len'},
				{51.861+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{51.861+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{51.861+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{51.861+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{51.861+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				
				{41.575,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{41.575+240/140/12*1,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{41.575+240/140/12*2,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{41.575+240/140/12*3,240/140/12,'*32 -75% Flip,*32 -75% Invert','len'},
				{41.575+240/140/12*4,240/140/12,'*32 -37% Flip,*32 -37% Invert','len'},
				{41.575+240/140/12*5,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{41.575+240/140/12*6,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{41.575+240/140/12*7,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{41.575+240/140/12*8,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{41.575+240/140/12*9,240/140/12,'*32 -75% Flip,*32 -75% Invert','len'},
				{41.575+240/140/12*10,240/140/12,'*32 -37% Flip,*32 -37% Invert','len'},
				{41.575+240/140/12*11,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{41.575+240/140/12*12,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{41.575+240/140/12*13,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{41.575+240/140/12*14,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{41.575+240/140/12*15,240/140/12,'*32 -75% Flip,*32 -75% Invert','len'},
				{41.575+240/140/12*16,240/140/12,'*32 -37% Flip,*32 -37% Invert','len'},
				{41.575+240/140/12*17,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{41.575+240/140/12*18,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{41.575+240/140/12*19,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{41.575+240/140/12*20,240/140/12,'*32 No Flip,*32 No Invert','len'},
				
				{45.003,48.432,'*16 No Flip','end'},
				{45.003+240/140/8*3*0,240/140/16*3,'*16 -100% Flip','len'},
				{45.003+240/140/8*3*1,240/140/16*3,'*16 -100% Flip','len'},
				{45.003+240/140/8*3*2,240/140/16*3,'*16 -100% Flip','len'},
				{45.003+240/140/8*3*3,240/140/16*3,'*16 -100% Flip','len'},
				{45.003+240/140/8*3*4,240/140/16*3,'*16 -100% Flip','len'},
				
				{48.432,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{48.432+240/140/12*1,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{48.432+240/140/12*2,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{48.432+240/140/12*3,240/140/12,'*32 -75% Flip,*32 -75% Invert','len'},
				{48.432+240/140/12*4,240/140/12,'*32 -37% Flip,*32 -37% Invert','len'},
				{48.432+240/140/12*5,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{48.432+240/140/12*6,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{48.432+240/140/12*7,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{48.432+240/140/12*8,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{48.432+240/140/12*9,240/140/12,'*32 -75% Flip,*32 -75% Invert','len'},
				{48.432+240/140/12*10,240/140/12,'*32 -37% Flip,*32 -37% Invert','len'},
				{48.432+240/140/12*11,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{48.432+240/140/12*12,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{48.432+240/140/12*13,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{48.432+240/140/12*14,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{48.432+240/140/12*15,240/140/12,'*32 -75% Flip,*32 -75% Invert','len'},
				{48.432+240/140/12*16,240/140/12,'*32 -37% Flip,*32 -37% Invert','len'},
				{48.432+240/140/12*17,240/140/12,'*32 No Flip,*32 No Invert','len'},
				{48.432+240/140/12*18,240/140/12,'*32 -150% Flip,*32 150% Invert','len'},
				{48.432+240/140/12*19,240/140/12,'*32 -75% Flip,*32 75% Invert','len'},
				{48.432+240/140/12*20,240/140/12,'*32 No Flip,*32 No Invert','len'},
				
				{51.861,55.289,'*16 No Flip','end'},
				{51.861+240/140/8*3*0,240/140/16*3,'*16 -100% Flip','len'},
				{51.861+240/140/8*3*1,240/140/16*3,'*16 -100% Flip','len'},
				{51.861+240/140/8*3*2,240/140/16*3,'*16 -100% Flip','len'},
				
				{53.146,240/140/8,'*24 200% Distant','len'},
				{53.361,55.000,'*8 Overhead','end'},
				
				{53.575,81.003,'*0.58333 100.01% Reverse,*10000 628% Dizzy','end'},
				{55.289,81.003,'*10000 No Dizzy','end'},
				
				{54.432,69.003,'*10000 Flip,*10000 Dark','end',2},
				{54.432,56.789,'*10000 90% Stealth','end',2},
				{56.789,60.218,'*1.5 90% Stealth','end',1},
				{56.789,60.218,'*1.5 No Stealth','end',2},
				{60.218,63.646,'*1.5 No Stealth','end',1},
				{60.218,63.646,'*1.5 90% Stealth','end',2},
				{63.646,65.361,'*1.5 90% Stealth','end',1},
				{63.646,65.361,'*1.5 No Stealth','end',2},
				{65.361,67.075,'*1.5 No Stealth','end',1},
				{65.361,67.075,'*1.5 90% Stealth','end',2},
				{67.075,67.932,'*1.5 90% Stealth','end',1},
				{67.075,67.932,'*1.5 No Stealth','end',2},
				{67.932,69.003,'*1.5 No Stealth','end',1},
				{67.932,69.003,'*1.5 Stealth','end',2},
				{69.003,70.000,'*10000 No Flip,*10000 No Stealth','end',2},
				
				{54.646,999,'*8 No Bumpy','end'},
				{54.646,240/140/8*3,'*8 1000% Bumpy','len'},
				{58.075,240/140/8*3,'*8 1000% Bumpy','len'},
				{61.503,240/140/8*3,'*8 1000% Bumpy','len'},
				{63.218,240/140/8*3,'*8 1000% Bumpy','len'},
				{64.932,240/140/8*3,'*8 1000% Bumpy','len'},
				{66.646,240/140/8*3,'*8 1000% Bumpy','len'},
				{68.361,240/140/8*3,'*8 1000% Bumpy','len'},
				
				{69.003,75.861,'*48 No Drunk','end'},
				{69.003,240/140/24,'*48 500% Drunk','len'},
				{69.003+240/140/8,240/140/24,'*48 -500% Drunk','len'},
				{70.718,240/140/24,'*48 500% Drunk','len'},
				{70.718+240/140/8,240/140/24,'*48 -500% Drunk','len'},
				{72.432,240/140/24,'*48 500% Drunk','len'},
				{72.432+240/140/8,240/140/24,'*48 -500% Drunk','len'},
				{74.146,240/140/24,'*48 500% Drunk','len'},
				{74.146+240/140/8,240/140/24,'*48 -500% Drunk','len'},
				
				{69.432,240/140/16*3,'*8 120% Mini','len'},
				{69.432+240/140/16*3,240/140/8,'*4 90% Mini','len'},
				{69.432+240/140/16*5,240/140/8,'*4 60% Mini','len'},
				{69.432+240/140/16*7,240/140/8,'*4 30% Mini','len'},
				{69.432+240/140/16*9,240/140/8,'*4 No Mini','len'},
				{71.146,240/140/16*3,'*8 120% Mini','len'},
				{71.146+240/140/16*3,240/140/8,'*4 90% Mini','len'},
				{71.146+240/140/16*5,240/140/8,'*4 60% Mini','len'},
				{71.146+240/140/16*7,240/140/8,'*4 30% Mini','len'},
				{71.146+240/140/16*9,240/140/8,'*4 No Mini','len'},
				{72.861,240/140/16*3,'*8 120% Mini','len'},
				{72.861+240/140/16*3,240/140/8,'*4 90% Mini','len'},
				{72.861+240/140/16*5,240/140/8,'*4 60% Mini','len'},
				{72.861+240/140/16*7,240/140/8,'*4 30% Mini','len'},
				{72.861+240/140/16*9,240/140/8,'*4 No Mini','len'},
				{74.575,240/140/16*3,'*8 120% Mini','len'},
				{74.575+240/140/16*3,240/140/8,'*4 90% Mini','len'},
				{74.575+240/140/16*5,240/140/8,'*4 60% Mini','len'},
				{74.575+240/140/16*7,240/140/8,'*4 30% Mini','len'},
				{74.575+240/140/16*9,240/140/8,'*4 No Mini','len'},
				
				{75.861,82.718,'Blind','end'},
				
				{75.861,81.003,'*0.5 -300% Mini,*0.25 0x','end'},
				{81.003,82.718,'*3 No Mini,*1.2 2.5x','end'},
				
				{96.432,999,'*16 No Flip','end'},
				{96.432+240/140/8*3*0,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*1,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*2,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*3,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*4,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*5,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*6,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*7,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*8,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*9,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*10,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*11,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*12,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*13,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*14,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*15,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*16,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*17,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*18,240/140/16*3,'*16 -100% Flip','len'},
				{96.432+240/140/8*3*19,240/140/16*3,'*16 -100% Flip','len'},
				
				{96.432,240/140/8,'*4 30% Hallway','len'},
				{96.432+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{96.432+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{96.432+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{96.432+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{96.432+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{96.432+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{96.432+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{96.432+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{96.432+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{96.432+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{96.432+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{96.432+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{96.432+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{96.432+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{99.861,240/140/8,'*4 30% Hallway','len'},
				{99.861+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{99.861+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{99.861+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{99.861+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{99.861+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{99.861+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{99.861+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{99.861+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{99.861+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{99.861+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{99.861+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{99.861+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{99.861+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{99.861+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{103.289,240/140/8,'*4 30% Hallway','len'},
				{103.289+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{103.289+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{103.289+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{103.289+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{103.289+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{103.289+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{103.289+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{103.289+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{103.289+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{103.289+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{103.289+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{103.289+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{103.289+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{103.289+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{106.718,240/140/8,'*4 30% Hallway','len'},
				{106.718+240/140/8*1,240/140/8,'*4 60% Hallway','len'},
				{106.718+240/140/8*2,240/140/8,'*4 90% Hallway','len'},
				{106.718+240/140/8*3,240/140/8,'*4 120% Hallway','len'},
				{106.718+240/140/8*4,240/140/8,'*4 150% Hallway','len'},
				{106.718+240/140/8*5,240/140/8,'*4 180% Hallway','len'},
				{106.718+240/140/8*6,240/140/8,'*4 210% Hallway','len'},
				{106.718+240/140/8*7,240/140/4,'*16 210% Distant','len'},
				{106.718+240/140/8*9,240/140/8,'*4 180% Distant','len'},
				{106.718+240/140/8*10,240/140/8,'*4 150% Distant','len'},
				{106.718+240/140/8*11,240/140/8,'*4 120% Distant','len'},
				{106.718+240/140/8*12,240/140/8,'*4 90% Distant','len'},
				{106.718+240/140/8*13,240/140/8,'*4 60% Distant','len'},
				{106.718+240/140/8*14,240/140/8,'*4 30% Distant','len'},
				{106.718+240/140/8*15,240/140/8,'*4 Overhead','len'},
				
				{108.432,110.146,'*0.58333 Reverse,*10000 628% Dizzy','end'},
				{110.146,120.000,'*10000 No Dizzy','end'},
				{110.146,120.000,'*0.5 No Reverse','end'},
				{112.075,120.000,'Stealth,Dark','end'},
				{113.039,999,'*4 10000% Reverse,10000% Split','end'},
				
				{108.432,41.575,'*0.58333 No Reverse,*10000 628% Dizzy','end'},
				
				}
				
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:rotationx(0);							
						v:rotationy(0);
						v:rotationz(0);
						v:x(SCREEN_CENTER_X+160*multi);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
						v:GetChild('Judgment'):stopeffect();
						
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						v:x(SCREEN_CENTER_X);
						v:GetChild('Judgment'):x(160*multi);
						v:GetChild('Combo'):x(160*multi);
					end
				end
			end
			
			if beat >= 188 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/140/2);
						v:rotationz(1440*multi);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat > 32 and beat < 96 or
				beat > 192 and beat < 999 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:vibrate();
						
						v:effectmagnitude(_G['auxvar'..i]:getaux(),0,0);
						v:x(SCREEN_CENTER_X+multi*_G['auxvar'..i]:getaux());
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (-0.424 - -0.775) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar1 = self; self:hidden(1) end"
		P1VibMessageCommand="finishtweening;aux,100;linear,240/140/2;aux,0"
		RockinMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				if v then
					v:finishtweening();
					v:zoom(0);
					v:x(SCREEN_CENTER_X+prefix_inc*multi*20);
					v:rotationz(prefix_inc*multi*5);
					v:decelerate(240/140/8);
					v:zoom(1);
					v:x(SCREEN_CENTER_X);
					v:rotationz(0);
				end
			end
			
			prefix_inc = prefix_inc + 1;
		end"
		
		RockinShortMessageCommand="%function()
			for i,v in pairs(prefix_plr) do
				local multi = -1; if math.mod(prefix_inc,2) == 0 then multi = 1; end
				if v then
					v:finishtweening();
					v:zoom(0);
					v:x(SCREEN_CENTER_X+prefix_inc*multi*20);
					v:rotationz(prefix_inc*multi*5);
					v:decelerate(240/140/16);
					v:zoom(1);
					v:x(SCREEN_CENTER_X);
					v:rotationz(0);
				end
			end
			
			prefix_inc = prefix_inc + 1;
		end"
	/>
	
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar2 = self; self:hidden(1) end"
		P2VibMessageCommand="finishtweening;aux,100;linear,240/140/2;aux,0"
	/>
	
</children></ActorFrame>