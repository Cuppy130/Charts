<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,GAMESTATE:GetCurrentSong():MusicLengthSeconds()"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				
				prefix_messages = {
				--{25.612,'SkewTwitch'},
				};
				
				
				prefix_mods = {
				
				{0,200,'1.5x,-999999% Cover,*10000 No Beat','end'},
				
				{0.000,9.498,'*10000 150% Wave','end'},
				{9.498,10.716,'*1.2 No Wave','end'},
				
				{5.843,6.757,'*2 150% Mini','end'},
				{6.757,10.716,'*0.35 No Mini','end'},
				
				{10.716,14.371,'*0.35 0.25x,*0.75 -400% Mini,*0.075 40% Flip','end'},
				
				{10.564,240/197/4,'*10000 400% Beat','len'},
				{11.782,240/197/4,'*10000 -400% Beat','len'},
				{13.001,240/197/4,'*10000 400% Beat','len'},
				{13.610,240/197/4,'*10000 -400% Beat','len'},
				{14.219,240/197/4,'*10000 400% Beat','len'},
				
				{14.371,15.285,'*8 0.25x,*8 No Mini,*0.8 No Flip','end'},
				
				{14.752,15.590,'*16 No Stealth','end'},
				{15.057,240/140/16,'*16 Stealth','len'},
				{15.209,240/140/16,'*16 Stealth','len'},
				
				{15.285,15.590,'*10000 1x','end'},
				
				{15.590,25.336,'*0.5 1x','end'},
				{14.980,33.864,'50% Drunk,50% Bumpy','end'},
				
				{14.980,16.960,'*10000 90% Hidden,*10000 -95% HiddenOffset','end'},
				{16.960,18.026,'*10000 90% Hidden,*4 200% HiddenOffset','end'},
				{18.026,19.854,'*10000 90% Stealth,*10000 -90% Hidden,*10000 -95% HiddenOffset','end'},
				{19.854,23.204,'*10000 90% Stealth,*4 200% HiddenOffset,*10000 -90% Hidden','end'},
				{23.204,24.270,'*10000 No Stealth,*10000 Hidden,*10000 -50% HiddenOffset','end'},
				
				{24.270,24.650,'*5 200% HiddenOffset,*4 Dark,*4 Hidden','end'},
				{24.650,24.727,'*10000 100.01% Reverse,*2 No Dark,*10000 -95% SuddenOffset,*10000 No Stealth,*10000 Sudden,*10000 No Hidden','end'},
				{24.727,25.336,'*10000 100.01% Reverse,*2 No Dark,*10000 Sudden,*4 200% SuddenOffset,*10000 No Stealth','end'},
				
				{23.204,25.336,'*0.5 0.5x','end'},
				{25.336,34.473,'*2 1x','end'},
				{25.336,33.864,'*10000 100.01% Reverse','end'},
				
				{25.945,26.706,'*10000 90% Hidden,*10000 -95% HiddenOffset','end'},
				{26.706,28.991,'*10000 90% Hidden,*4 200% HiddenOffset','end'},
				{28.991,30.361,'*10000 90% Stealth,*10000 -90% Hidden,*10000 -95% HiddenOffset','end'},
				{30.361,32.645,'*10000 90% Stealth,*4 200% HiddenOffset,*10000 -90% Hidden','end'},
				{32.645,34.321,'*1.5 Dark,*10000 Stealth,*10000 No Hidden','end'},
				
				{33.864,34.321,'*10000 No Stealth,*10000 -100% SuddenOffset,*10000 Sudden','end'},
				{34.321,36.300,'*4 800% SuddenOffset,*10000 Sudden','end'},
				{33.864,35.000,'*10000 No Reverse','end'},
				
				{34.473,49.092,'*2 2x,*2 125% Hallway,*1.5 Boost','end'},
				
				{36.300,39.194,'*10000 90% Hidden,*10000 -95% HiddenOffset,*10000 No Sudden','end'},
				{39.194,41.173,'*10000 90% Hidden,*6 400% HiddenOffset','end'},
				{41.173,43.914,'*10000 90% Stealth,*10000 -90% Hidden,*10000 -95% HiddenOffset','end'},
				{43.914,46.046,'*10000 90% Stealth,*4 400% HiddenOffset,*10000 -90% Hidden','end'},
				{46.046,48.940,'*10000 No Stealth,*10000 90% Hidden,*10000 -95% HiddenOffset','end'},
				{48.940,52.138,'*10000 90% Hidden,*6 400% HiddenOffset','end'},
				{52.138,52.747,'*10000 90% Stealth,*10000 -90% Hidden,*10000 -95% HiddenOffset','end'},
				{52.747,63.102,'*10000 90% Stealth,*4 400% HiddenOffset,*10000 -90% Hidden','end'},
				{63.102,64.321,'*10000 No Stealth,*10000 90% Hidden,*10000 -95% HiddenOffset','end'},
				{64.321,67.975,'*10000 90% Hidden,*3 400% HiddenOffset','end'},
				{67.975,69.194,'*10000 90% Stealth,*10000 -90% Hidden,*10000 -95% HiddenOffset','end'},
				{69.194,73.153,'*10000 90% Stealth,*3 400% HiddenOffset,*10000 -90% Hidden','end'},
				{72.848,74.067,'*10000 No Stealth,*10000 No Hidden','end'},
				
				{48.331,49.092,'*2 300% Hallway','end'},
				{49.092,49.397,'*16 200% Distant,*8 1x,*2 No Boost','end'},
				{49.397,49.701,'*8 Overhead,*8 1x','end'},
				{49.701,50.920,'*8 1.75x,*8 25% Mini','end'},
				{50.920,51.986,'*8 2.5x,*8 50% Mini','end'},
				{51.986,52.595,'*8 3.25x,*8 75% Mini','end'},
				{52.595,53.204,'*8 4x,*8 Mini','end'},
				
				{53.204,56.402,'*1.5 2x,*1.5 Boost,150% Distant,*0.33 50% Drunk,*0.33 50% Bumpy','end'},
				{56.402,69.194,'*0.5 3x,*1.5 Boost,150% Distant,*0.33 50% Drunk,*0.33 50% Bumpy,*0.4 Mini','end'},
				{69.194,75.285,'*0.5 2x,*1.5 Boost,*3.5 150% Hallway,*0.33 50% Drunk,*1.1 No Mini,*0.55 No Bumpy','end'},
				
				{74.067,75.285,'Stealth,Dark','end'},
				{75.285,75.894,'*10000 1.5x,*10000 No Boost,*10000 Overhead,*10000 No Drunk,*10000 No Bumpy,*10000 No Mini,*10000 100.01% Reverse,*4 No Stealth,*4 No Dark','end'},
				
				{75.285,999,'*10000 100.01% Reverse','end'},
				{76.503,86.249,'*0.15 50% Mini,*0.4 Wave','end'},
				
				{86.249,999,'*0.1 No Mini,No Wave,*10000 1.5x,*10000 C197,*0.1 Drunk','end'},
				{91.123,999,'*0.2 -250% Mini,*0.02 25% Flip','end'},
				
				}
				
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:rotationx(0);							
						v:rotationy(0);
						v:rotationz(0);
						v:x(SCREEN_CENTER_X+160*multi);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
						v:GetChild('Judgment'):stopeffect();
						
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
					end
				end
			end
			
			if beat >= 162 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					if v then
						v:linear(0.600);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat > 64 and beat < 96 then
				for i,v in pairs(prefix_plr) do
					if v then
						--v:x(SCREEN_CENTER_X+(math.sin(beat*math.pi/2)*auxvar:getaux()))
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (0.250 - 0.013) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		SkewTwitchMessageCommand="finishtweening;aux,0;linear,9.6;aux,1.5;linear,1.6;aux,0"
	/>
	
</children></ActorFrame>