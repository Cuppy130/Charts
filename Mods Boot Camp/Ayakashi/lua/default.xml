<ActorFrame><children>

	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="sleep,GAMESTATE:GetCurrentSong():MusicLengthSeconds()"
	/>
	
	<Layer
		Type="Quad"
		InitCommand="hidden,1"
		OnCommand="%function(self)
				fgcurcommand = 1;
				checked = false;
				prefix_time = 0;
				
				prefix_curmessage = 1;
				
				-- '-50% Flip,No Invert'
				-- '150% Flip,No Invert'
				-- '-200% Invert,150% Flip'
				-- '200% Invert,-50% Flip'
				
				prefix_messages = {
				--{25.612,'SkewTwitch'},
				};
				
				
				prefix_mods = {
				
				{0,200,'2.25x,-999999% Cover,-50% Flip,*10000 No Beat','end'},
				{0,0.500,'*10000 -50% Flip','end'},
				{13.726,20.583,'*0.25 200% Wave','end',1},
				{13.726,20.583,'*0.25 -200% Wave','end',2},
				{13.726,20.583,'*16 95% Stealth','end',1},
				{20.583,21.000,'*16 No Stealth','end',1},
				{20.583,24.012,'*16 95% Stealth','end',2},
				{20.583,25.726,'*0.35 No Wave','end'},
				{24.012,240/140/4,'*8 69% Stealth','len',2},
				{24.441,240/140/4,'*8 47% Stealth','len',2},
				{24.869,240/140/4,'*8 24% Stealth','len',2},
				{25.298,240/140/4,'*8 No Stealth','len',2},
				
				{13.726+240/140*8,20.583+240/140*8,'*16 95% Stealth,*16 95% Dark','end',1},
				{20.583+240/140*8,21.000+240/140*8,'*16 No Stealth,*16 No Dark','end',1},
				{20.583+240/140*8,24.012+240/140*8,'*16 95% Stealth,*16 95% Dark','end',2},
				{20.583+240/140*8,25.726+240/140*8,'*0.35 No Wave','end'},
				{24.012+240/140*8,240/140/4,'*8 69% Stealth,*8 84% Dark,*4 ','len',2},
				{24.441+240/140*8,240/140/4,'*8 47% Stealth,*8 73% Dark','len',2},
				{24.869+240/140*8,240/140/4,'*8 24% Stealth,*8 62% Dark','len',2},
				{25.298+240/140*8,240/140/4,'*8 No Stealth,*8 50% Dark','len',2},
				
				{27.441,34.298,'*0.2 200% Drunk,*0.2 200% Wave,*0.2 200% Bumpy','end',1},
				{27.441,34.298,'*0.2 -200% Drunk,*0.2 -200% Wave,*0.2 -200% Bumpy','end',2},
				
				{34.298,39.441,'*0.3 No Drunk,*0.3 No Wave,*0.3 No Bumpy','end'},
				
				{54.441,66.441,'*2 100% Bumpy','end',1},
				{54.441,66.441,'*2 -100% Bumpy','end',2},
				{66.441,68,'*2 No Bumpy','end'},
				
				{75.441,87.441,'*4 3x','end'},
				{75.869,240/140/4,'*2 0x','len',1},
				{75.869,240/140/4,'*2 8x','len',2},
				{75.869+240/140*1,240/140/4,'*2 8x','len',1},
				{75.869+240/140*1,240/140/4,'*2 0x','len',2},
				{75.869+240/140*2,240/140/4,'*2 0x','len',1},
				{75.869+240/140*2,240/140/4,'*2 8x','len',2},
				{75.869+240/140*3,240/140/4,'*2 8x','len',1},
				{75.869+240/140*3,240/140/4,'*2 0x','len',2},
				{75.869+240/140*4,240/140/4,'*2 0x','len',1},
				{75.869+240/140*4,240/140/4,'*2 8x','len',2},
				{75.869+240/140*5,240/140/4,'*2 8x','len',1},
				{75.869+240/140*5,240/140/4,'*2 0x','len',2},
				{75.869+240/140*6,240/140/4,'*2 0x','len',1},
				{75.869+240/140*6,240/140/4,'*2 8x','len',2},
				
				{87.441,89.155,'2.25x','end'},
				{89.155,102.869,'*4 2.25x','end'},
				{89.583,240/140/4,'*2 0x','len',1},
				{89.583,240/140/4,'*2 8x','len',2},
				{89.583+240/140*1,240/140/4,'*2 8x','len',1},
				{89.583+240/140*1,240/140/4,'*2 0x','len',2},
				{89.583+240/140*2,240/140/4,'*2 0x','len',1},
				{89.583+240/140*2,240/140/4,'*2 8x','len',2},
				{89.583+240/140*3,240/140/4,'*2 8x','len',1},
				{89.583+240/140*3,240/140/4,'*2 0x','len',2},
				{89.583+240/140*4,240/140/4,'*2 0x','len',1},
				{89.583+240/140*4,240/140/4,'*2 8x','len',2},
				{89.583+240/140*5,240/140/4,'*2 8x','len',1},
				{89.583+240/140*5,240/140/4,'*2 0x','len',2},
				{89.583+240/140*6,240/140/4,'*2 0x','len',1},
				{89.583+240/140*6,240/140/4,'*2 8x','len',2},
				
				{108.012,116.369,'*4 2.25x','end'},
				{108.441,240/140/4,'*2 0x','len',1},
				{108.441,240/140/4,'*2 8x','len',2},
				{108.441+240/140*1,240/140/4,'*2 8x','len',1},
				{108.441+240/140*1,240/140/4,'*2 0x','len',2},
				{108.441+240/140*2,240/140/4,'*2 0x','len',1},
				{108.441+240/140*2,240/140/4,'*2 8x','len',2},
				{108.441+240/140*3,240/140/4,'*2 8x','len',1},
				{108.441+240/140*3,240/140/4,'*2 0x','len',2},
				
				{116.369,120,'*16 100x','end'},
				
				--------------
				-- PLAYER 1 --
				--------------
				{69.655,240/140/4,'*10000 1600% Beat','len',1},
				{71.369,240/140/4,'*10000 1600% Beat','len',1},
				{73.083,240/140/4,'*10000 1600% Beat','len',1},
				{74.798,240/140/4,'*10000 1600% Beat','len',1},
				{103.941,240/140/4,'*10000 1600% Beat','len',1},
				{105.655,240/140/4,'*10000 1600% Beat','len',1},
				{107.369,240/140/4,'*10000 1600% Beat','len',1},
				{110.798,240/140/4,'*10000 1600% Beat','len',1},
				{112.512,240/140/4,'*10000 1600% Beat','len',1},
				{114.226,240/140/4,'*10000 1600% Beat','len',1},
				{115.941,240/140/4,'*10000 1600% Beat','len',1},
				
				{6.869,240/140/4,'*16 90% Stealth,*16 150% Flip','len',1},
				{6.869+240/140/4*1,240/140/4,'*16 No Stealth,*16 -50% Flip','len',1},
				{6.869+240/140/4*2,240/140/4,'*16 95% Stealth,*16 -200% Invert,*16 150% Flip','len',1},
				{6.869+240/140/4*3,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',1},
				{6.869+240/140/4*4,240/140/4,'*16 95% Stealth,*16 -50% Flip,*16 200% Invert','len',1},
				{6.869+240/140/4*5,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',1},
				{6.869+240/140/4*6,240/140/4,'*16 95% Stealth,*16 150% Flip','len',1},
				{6.869+240/140/4*7,240/140/4,'*16 No Stealth,*16 -50% Flip','len',1},
				{6.869+240/140/4*8,240/140/4,'*16 95% Stealth,*16 -200% Invert,*16 150% Flip','len',1},
				{6.869+240/140/4*9,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',1},
				{6.869+240/140/4*10,240/140/4,'*16 95% Stealth,*16 -50% Flip,*16 200% Invert','len',1},
				{6.869+240/140/4*11,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',1},
				
				{41.155,41.798,'*8 150% Flip','end',1},
				{41.798,42.441,'*8 -50% Flip,*8 200% Invert','end',1},
				{42.441,43.083,'*8 -50% Flip,*8 No Invert','end',1},
				{43.083,43.512,'*8 150% Flip,*8 -200% Invert','end',1},
				{43.512,44.155,'*8 150% Flip,*8 No Invert','end',1},
				{44.155,44.583,'*8 -50% Flip,*8 No Invert','end',1},
				{44.583,45.226,'*8 -50% Flip,*8 200% Invert','end',1},
				{45.226,45.869,'*8 150% Flip,*16 -200% Invert','end',1},
				{45.869,46.512,'*8 -50% Flip,*8 No Invert','end',1},
				{46.512,46.941,'*8 -50% Flip,*8 200% Invert','end',1},
				{46.941,47.583,'*8 150% Flip,*8 No Invert','end',1},
				{47.583,48.012,'*8 -50% Flip,*8 No Invert','end',1},
				{48.012,48.655,'*8 150% Flip,*8 -200% Invert','end',1},
				{48.655,49.298,'*8 150% Flip,*8 No Invert','end',1},
				{49.298,49.941,'*8 -50% Flip,*8 No Invert','end',1},
				{49.941,50.369,'*8 -50% Flip,*8 200% Invert','end',1},
				{50.369,51.012,'*8 150% Flip,*16 -200% Invert','end',1},
				{51.012,51.441,'*8 150% Flip,*8 No Invert','end',1},
				{51.441,52.083,'*8 -50% Flip,*8 200% Invert','end',1},
				{52.083,52.726,'*8 150% Flip,*8 No Invert','end',1},
				{52.726,53.155,'*8 -50% Flip,*8 No Invert','end',1},
				
				{240/140*8+41.583,240/140*8+42.226,'*8 150% Flip,*8 -200% Invert','end',1},
				{240/140*8+42.226,240/140*8+42.655,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*8+42.655,240/140*8+43.298,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*8+43.298,240/140*8+43.726,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*8+43.726,240/140*8+44.369,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*8+44.369,240/140*8+45.012,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*8+45.012,240/140*8+45.655,'*8 150% Flip,*16 -200% Invert','end',1},
				{240/140*8+45.655,240/140*8+46.083,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*8+46.083,240/140*8+46.726,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*8+46.726,240/140*8+47.155,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*8+47.155,240/140*8+47.798,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*8+47.798,240/140*8+48.441,'*8 150% Flip,*8 -200% Invert','end',1},
				{240/140*8+48.441,240/140*8+49.083,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*8+49.083,240/140*8+49.512,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*8+49.512,240/140*8+50.155,'*8 150% Flip,*8 -200% Invert','end',1},
				{240/140*8+50.155,240/140*8+50.583,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*8+50.583,240/140*8+51.226,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*8+51.226,240/140*8+51.869,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*8+51.869,240/140*8+52.512,'*8 150% Flip,*16 -200% Invert','end',1},
				{240/140*8+52.512,240/140*8+52.941,'*8 -50% Flip,*8 No Invert','end',1},
				
				{240/140*28+41.155,240/140*28+41.798,'*8 150% Flip','end',1},
				{240/140*28+41.798,240/140*28+42.441,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*28+42.441,240/140*28+43.083,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*28+43.083,240/140*28+43.512,'*8 150% Flip,*8 -200% Invert','end',1},
				{240/140*28+43.512,240/140*28+44.155,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*28+44.155,240/140*28+44.583,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*28+44.583,240/140*28+45.226,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*28+45.226,240/140*28+45.869,'*8 150% Flip,*16 -200% Invert','end',1},
				{240/140*28+45.869,240/140*28+46.512,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*28+46.512,240/140*28+46.941,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*28+46.941,240/140*28+47.583,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*28+47.583,240/140*28+48.012,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*28+48.012,240/140*28+48.655,'*8 150% Flip,*8 -200% Invert','end',1},
				{240/140*28+48.655,240/140*28+49.298,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*28+49.298,240/140*28+49.941,'*8 -50% Flip,*8 No Invert','end',1},
				{240/140*28+49.941,240/140*28+50.369,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*28+50.369,240/140*28+51.012,'*8 150% Flip,*16 -200% Invert','end',1},
				{240/140*28+51.012,240/140*28+51.441,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*28+51.441,240/140*28+52.083,'*8 -50% Flip,*8 200% Invert','end',1},
				{240/140*28+52.083,240/140*28+52.726,'*8 150% Flip,*8 No Invert','end',1},
				{240/140*28+52.726,240/140*28+53.155,'*8 -50% Flip,*8 No Invert','end',1},
				
				-- snare gallops, start with normal orientation --
				{12.012,240/140/4,'*16 -200% Invert,*16 150% Flip','len',1},
				{12.012+240/140/4*1,240/140/4,'*16 No Invert,*16 -50% Flip','len',1},
				{12.012+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',1},
				{12.012+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',1},
				{25.726,240/140/4,'*16 150% Flip','len',1},
				{25.726+240/140/4*1,240/140/4,'*16 -50% Flip','len',1},
				{25.726+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',1},
				{25.726+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',1},
				{39.441,240/140/4,'*16 200% Invert','len',1},
				{39.441+240/140/4*1,240/140/4,'*16 No Invert','len',1},
				{39.441+240/140/4*2,240/140/4,'*16 150% Flip','len',1},
				{39.441+240/140/4*3,240/140/16*3,'*16 -50% Flip','len',1},
				{53.155,240/140/4,'*16 -200% Invert,*16 150% Flip','len',1},
				{53.155+240/140/4*1,240/140/4,'*16 No Invert,*16 -50% Flip','len',1},
				{53.155+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',1},
				{53.155+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',1},
				{66.869,240/140/4,'*16 150% Flip','len',1},
				{66.869+240/140/4*1,240/140/4,'*16 -50% Flip','len',1},
				{66.869+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',1},
				{66.869+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',1},
				{87.441,240/140/4,'*16 200% Invert','len',1},
				{87.441+240/140/4*1,240/140/4,'*16 No Invert','len',1},
				{87.441+240/140/4*2,240/140/4,'*16 150% Flip','len',1},
				{87.441+240/140/4*3,240/140/16*3,'*16 -50% Flip','len',1},
				{101.155,240/140/4,'*16 -200% Invert,*16 150% Flip','len',1},
				{101.155+240/140/4*1,240/140/4,'*16 No Invert,*16 -50% Flip','len',1},
				{101.155+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',1},
				{101.155+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',1},
				
				-- EHH, EHH jumps --
				{68.583,240/140/16*3,'*16 150% Flip','len',1},
				{68.583+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{68.583+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',1},
				{68.583+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{68.583+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{70.298,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{70.298+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{70.298+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{70.298+240/140/16*3*3,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',1},
				{70.298+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{72.012,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{72.012+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{72.012+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{72.012+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',1},
				{72.012+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{73.726,240/140/16*3,'*16 150% Flip','len',1},
				{73.726+240/140/16*3*1,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{73.726+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',1},
				{73.726+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{73.726+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{102.869,240/140/16*3,'*16 150% Flip','len',1},
				{102.869+240/140/16*3*1,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{102.869+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',1},
				{102.869+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{102.869+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{104.583,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{104.583+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{104.583+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{104.583+240/140/16*3*3,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',1},
				{104.583+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{106.298,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{106.298+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{106.298+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{106.298+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',1},
				{106.298+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{41.143+68.583,240/140/16*3,'*16 150% Flip','len',1},
				{41.143+68.583+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{41.143+68.583+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',1},
				{41.143+68.583+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{41.143+68.583+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{41.143+70.298,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{41.143+70.298+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{41.143+70.298+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{41.143+70.298+240/140/16*3*3,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',1},
				{41.143+70.298+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{41.143+72.012,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',1},
				{41.143+72.012+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{41.143+72.012+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{41.143+72.012+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',1},
				{41.143+72.012+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				{41.143+73.726,240/140/16*3,'*16 150% Flip','len',1},
				{41.143+73.726+240/140/16*3*1,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',1},
				{41.143+73.726+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',1},
				{41.143+73.726+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',1},
				{41.143+73.726+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',1},
				
				
				
				
				--------------
				-- PLAYER 2 --
				--------------
				{69.655,240/140/4,'*10000 -1600% Beat','len',2},
				{71.369,240/140/4,'*10000 -1600% Beat','len',2},
				{73.083,240/140/4,'*10000 -1600% Beat','len',2},
				{74.798,240/140/4,'*10000 -1600% Beat','len',2},
				{103.941,240/140/4,'*10000 -1600% Beat','len',2},
				{105.655,240/140/4,'*10000 -1600% Beat','len',2},
				{107.369,240/140/4,'*10000 -1600% Beat','len',2},
				{110.798,240/140/4,'*10000 -1600% Beat','len',2},
				{112.512,240/140/4,'*10000 -1600% Beat','len',2},
				{114.226,240/140/4,'*10000 -1600% Beat','len',2},
				{115.941,240/140/4,'*10000 -1600% Beat','len',2},
				
				{6.869+240/140/4*0,240/140/4,'*16 No Stealth,*16 -50% Flip','len',2},
				{6.869+240/140/4*1,240/140/4,'*16 95% Stealth,*16 -200% Invert,*16 150% Flip','len',2},
				{6.869+240/140/4*2,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',2},
				{6.869+240/140/4*3,240/140/4,'*16 95% Stealth,*16 -50% Flip,*16 200% Invert','len',2},
				{6.869+240/140/4*4,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',2},
				{6.869+240/140/4*5,240/140/4,'*16 95% Stealth,*16 150% Flip','len',2},
				{6.869+240/140/4*6,240/140/4,'*16 No Stealth,*16 -50% Flip','len',2},
				{6.869+240/140/4*7,240/140/4,'*16 95% Stealth,*16 -200% Invert,*16 150% Flip','len',2},
				{6.869+240/140/4*8,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',2},
				{6.869+240/140/4*9,240/140/4,'*16 95% Stealth,*16 -50% Flip,*16 200% Invert','len',2},
				{6.869+240/140/4*10,240/140/4,'*16 No Stealth,*16 -50% Flip,*16 No Invert','len',2},
				
				
				
				{41.583,42.226,'*8 150% Flip,*8 -200% Invert','end',2},
				{42.226,42.655,'*8 150% Flip,*8 No Invert','end',2},
				{42.655,43.298,'*8 -50% Flip,*8 200% Invert','end',2},
				{43.298,43.726,'*8 -50% Flip,*8 No Invert','end',2},
				{43.726,44.369,'*8 150% Flip,*8 No Invert','end',2},
				{44.369,45.012,'*8 -50% Flip,*8 200% Invert','end',2},
				{45.012,45.655,'*8 150% Flip,*16 -200% Invert','end',2},
				{45.655,46.083,'*8 150% Flip,*8 No Invert','end',2},
				{46.083,46.726,'*8 -50% Flip,*8 200% Invert','end',2},
				{46.726,47.155,'*8 150% Flip,*8 No Invert','end',2},
				{47.155,47.798,'*8 -50% Flip,*8 No Invert','end',2},
				{47.798,48.441,'*8 150% Flip,*8 -200% Invert','end',2},
				{48.441,49.083,'*8 150% Flip,*8 No Invert','end',2},
				{49.083,49.512,'*8 -50% Flip,*8 No Invert','end',2},
				{49.512,50.155,'*8 150% Flip,*8 -200% Invert','end',2},
				{50.155,50.583,'*8 150% Flip,*8 No Invert','end',2},
				{50.583,51.226,'*8 -50% Flip,*8 No Invert','end',2},
				{51.226,51.869,'*8 -50% Flip,*8 200% Invert','end',2},
				{51.869,52.512,'*8 150% Flip,*16 -200% Invert','end',2},
				{52.512,52.941,'*8 -50% Flip,*8 No Invert','end',2},
				
				{240/140*8+41.155,240/140*8+41.798,'*8 150% Flip','end',2},
				{240/140*8+41.798,240/140*8+42.441,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*8+42.441,240/140*8+43.083,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*8+43.083,240/140*8+43.512,'*8 150% Flip,*8 -200% Invert','end',2},
				{240/140*8+43.512,240/140*8+44.155,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*8+44.155,240/140*8+44.583,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*8+44.583,240/140*8+45.226,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*8+45.226,240/140*8+45.869,'*8 150% Flip,*16 -200% Invert','end',2},
				{240/140*8+45.869,240/140*8+46.512,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*8+46.512,240/140*8+46.941,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*8+46.941,240/140*8+47.583,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*8+47.583,240/140*8+48.012,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*8+48.012,240/140*8+48.655,'*8 150% Flip,*8 -200% Invert','end',2},
				{240/140*8+48.655,240/140*8+49.298,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*8+49.298,240/140*8+49.941,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*8+49.941,240/140*8+50.369,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*8+50.369,240/140*8+51.012,'*8 150% Flip,*16 -200% Invert','end',2},
				{240/140*8+51.012,240/140*8+51.441,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*8+51.441,240/140*8+52.083,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*8+52.083,240/140*8+52.726,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*8+52.726,240/140*8+53.155,'*8 -50% Flip,*8 No Invert','end',2},
				
				{240/140*28+41.583,240/140*28+42.226,'*8 150% Flip,*8 -200% Invert','end',2},
				{240/140*28+42.226,240/140*28+42.655,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*28+42.655,240/140*28+43.298,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*28+43.298,240/140*28+43.726,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*28+43.726,240/140*28+44.369,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*28+44.369,240/140*28+45.012,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*28+45.012,240/140*28+45.655,'*8 150% Flip,*16 -200% Invert','end',2},
				{240/140*28+45.655,240/140*28+46.083,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*28+46.083,240/140*28+46.726,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*28+46.726,240/140*28+47.155,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*28+47.155,240/140*28+47.798,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*28+47.798,240/140*28+48.441,'*8 150% Flip,*8 -200% Invert','end',2},
				{240/140*28+48.441,240/140*28+49.083,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*28+49.083,240/140*28+49.512,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*28+49.512,240/140*28+50.155,'*8 150% Flip,*8 -200% Invert','end',2},
				{240/140*28+50.155,240/140*28+50.583,'*8 150% Flip,*8 No Invert','end',2},
				{240/140*28+50.583,240/140*28+51.226,'*8 -50% Flip,*8 No Invert','end',2},
				{240/140*28+51.226,240/140*28+51.869,'*8 -50% Flip,*8 200% Invert','end',2},
				{240/140*28+51.869,240/140*28+52.512,'*8 150% Flip,*16 -200% Invert','end',2},
				{240/140*28+52.512,240/140*28+52.941,'*8 -50% Flip,*8 No Invert','end',2},
				
				
				
				-- snare gallops, start with normal orientation --
				{12.119,240/140/4,'*16 -200% Invert,*16 150% Flip','len',2},
				{12.119+240/140/4*1,240/140/4,'*16 No Invert,*16 -50% Flip','len',2},
				{12.119+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',2},
				{12.119+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',2},
				{25.833,240/140/4,'*16 150% Flip','len',2},
				{25.833+240/140/4*1,240/140/4,'*16 -50% Flip','len',2},
				{25.833+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',2},
				{25.833+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',2},
				{39.548,240/140/4,'*16 200% Invert','len',2},
				{39.548+240/140/4*1,240/140/4,'*16 No Invert','len',2},
				{39.548+240/140/4*2,240/140/4,'*16 150% Flip','len',2},
				{39.548+240/140/4*3,240/140/16*3,'*16 -50% Flip','len',2},
				{53.262,240/140/4,'*16 -200% Invert,*16 150% Flip','len',2},
				{53.262+240/140/4*1,240/140/4,'*16 No Invert,*16 -50% Flip','len',2},
				{53.262+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',2},
				{53.262+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',2},
				{66.976,240/140/4,'*16 150% Flip','len',2},
				{66.976+240/140/4*1,240/140/4,'*16 -50% Flip','len',2},
				{66.976+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',2},
				{66.976+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',2},
				{87.548,240/140/4,'*16 200% Invert','len',2},
				{87.548+240/140/4*1,240/140/4,'*16 No Invert','len',2},
				{87.548+240/140/4*2,240/140/4,'*16 150% Flip','len',2},
				{87.548+240/140/4*3,240/140/16*3,'*16 -50% Flip','len',2},
				{101.262,240/140/4,'*16 -200% Invert,*16 150% Flip','len',2},
				{101.262+240/140/4*1,240/140/4,'*16 No Invert,*16 -50% Flip','len',2},
				{101.262+240/140/4*2,240/140/4,'*16 200% Invert,*16 -50% Flip','len',2},
				{101.262+240/140/4*3,240/140/16*3,'*16 No Invert,*16 -50% Flip','len',2},
				
				-- EHH, EHH jumps --
				{68.583,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{68.583+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{68.583+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{68.583+240/140/16*3*3,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',2},
				{68.583+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{70.298,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{70.298+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{70.298+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{70.298+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',2},
				{70.298+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{72.012,240/140/16*3,'*16 150% Flip','len',2},
				{72.012+240/140/16*3*1,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{72.012+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',2},
				{72.012+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{72.012+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{73.726,240/140/16*3,'*16 150% Flip','len',2},
				{73.726+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{73.726+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',2},
				{73.726+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{73.726+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{102.869,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{102.869+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{102.869+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{102.869+240/140/16*3*3,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',2},
				{102.869+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{104.583,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{104.583+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{104.583+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{104.583+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',2},
				{104.583+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{106.298,240/140/16*3,'*16 150% Flip','len',2},
				{106.298+240/140/16*3*1,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{106.298+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',2},
				{106.298+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{106.298+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{41.143+68.583,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{41.143+68.583+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{41.143+68.583+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{41.143+68.583+240/140/16*3*3,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',2},
				{41.143+68.583+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{41.143+70.298,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{41.143+70.298+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{41.143+70.298+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{41.143+70.298+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',2},
				{41.143+70.298+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{41.143+72.012,240/140/16*3,'*16 150% Flip','len',2},
				{41.143+72.012+240/140/16*3*1,240/140/16*3,'*16 -50% Flip,*16 200% Invert','len',2},
				{41.143+72.012+240/140/16*3*2,240/140/16*3,'*16 150% Flip,*32 -200% Invert','len',2},
				{41.143+72.012+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{41.143+72.012+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				{41.143+73.726,240/140/16*3,'*16 150% Flip','len',2},
				{41.143+73.726+240/140/16*3*1,240/140/16*3,'*16 150% Flip,*16 -200% Invert','len',2},
				{41.143+73.726+240/140/16*3*2,240/140/16*3,'*16 -50% Flip,*32 200% Invert','len',2},
				{41.143+73.726+240/140/16*3*3,240/140/16*3,'*16 150% Flip,*16 No Invert','len',2},
				{41.143+73.726+240/140/16*3*4,240/140/4,'*10000 -50% Flip,*10000 No Invert','len',2},
				
				
				
				}
				
				
				
				prefix_plr = {};
				
				self:queuecommand('Update');
			end"
		
		UpdateCommand="%function(self)
		
			local beat = GAMESTATE:GetSongBeat();
			
			-----------------------
			-- Player mod resets --
			-----------------------
			GAMESTATE:ApplyGameCommand('mod,clearall')
			
			--------------------------------------------------------------------------------------------
			-- Mod reader code originally coded by Taronuke, remade to support end times and lengths. --
			--------------------------------------------------------------------------------------------
			for i,v in pairs(prefix_mods) do
				if prefix_time >=v[1] then
					if (v[4] == 'len' and prefix_time <=v[1]+v[2]) or (v[4] == 'end' and prefix_time <=v[2]) then
						if table.getn(v) == 5 then
							GAMESTATE:ApplyGameCommand('mod,'..v[3],v[5]);
						else
							GAMESTATE:ApplyGameCommand('mod,'..v[3]);
						end
					end
				end
			end
			
			
			
			if beat >= 0 and not checked then
				
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP1'));
				table.insert(prefix_plr,SCREENMAN:GetTopScreen():GetChild('PlayerP2'));
				checked = true;
				
				SCREENMAN:GetTopScreen():GetChild('Overlay'):hidden(1);
				SCREENMAN:GetTopScreen():GetChild('Underlay'):hidden(1);
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:rotationx(0);							
						v:rotationy(0);
						v:rotationz(0);
						v:x(SCREEN_CENTER_X+160*multi);
						v:y(SCREEN_CENTER_Y);
						v:zoomx(1);
						v:zoomy(1);
						v:GetChild('Judgment'):stopeffect();
						
						SCREENMAN:GetTopScreen():GetChild('ScoreP'..i):hidden(1);
						SCREENMAN:GetTopScreen():GetChild('LifeP'..i):hidden(1);
						
						v:x(SCREEN_CENTER_X+32*multi);
						v:GetChild('Judgment'):x(32*multi*4);
						v:GetChild('Judgment'):bob();
						v:GetChild('Judgment'):effectmagnitude(0,-175,0);
						v:GetChild('Judgment'):effectperiod(100000);
						v:GetChild('Judgment'):effectoffset(25000);
						v:GetChild('Combo'):hidden(1);
					end
				end
			end
			
			
			
			if beat >= 32 and fgcurcommand == 1 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/140/16);
						v:zoom(0.5);
						v:addx(multi*-16);
						v:linear(240/140*4 - 240/140/16);
						v:zoom(1);
						v:addx(multi*16);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			if beat >= 176 and fgcurcommand == 2 then
				for i,v in pairs(prefix_plr) do
					local multi = -1; if i == 2 then multi = 1; end
					if v then
						v:linear(240/140/16);
						v:zoom(0.5);
						v:addx(multi*-16);
						v:linear(240/140*7 - 240/140/16);
						v:zoom(1);
						v:addx(multi*16);
					end
				end
				fgcurcommand = fgcurcommand + 1;
			end
			
			
			
			
			
			-------------------------
			-- BEAT SPECIFIC STUFF --
			-------------------------
			if beat > 64 and beat < 96 then
				for i,v in pairs(prefix_plr) do
					if v then
						--v:x(SCREEN_CENTER_X+(math.sin(beat*math.pi/2)*auxvar:getaux()))
					end
				end
			end
			
			--------------------------------------------------------------
			-- Message reader to make specific values of the actor aux. --
			--------------------------------------------------------------
			if prefix_curmessage <= table.getn(prefix_messages) then
				if prefix_time >= prefix_messages[prefix_curmessage][1] then
					MESSAGEMAN:Broadcast(prefix_messages[prefix_curmessage][2]);
					prefix_curmessage = prefix_curmessage + 1;
				end
			end
			
			self:queuecommand('Update2');
			
		end"


		Update2Command="%function(self)
		self:sleep(0.02);
		self:queuecommand('Update');
		end"

	/>
	
	<BitmapText
		Font="Common Normal"
		Text="test"
		OnCommand="x,SCREEN_CENTER_X;y,SCREEN_CENTER_Y;effectclock,music;playcommand,SetTime;hidden,1"
		SetTimeCommand="%function(self) self:settext(self:GetSecsIntoEffect()); prefix_time = PREFSMAN:GetPreference('GlobalOffsetSeconds') - (0.004 - 0.000) + tonumber(self:GetText()); self:sleep(0.02); self:queuecommand('SetTime'); end"
	/>
	
	<!-- Aux actor, VERY IMPORTANT -->
	<Layer
		Type="Quad"
		OnCommand=""
		InitCommand="%function(self) auxvar = self; self:hidden(1) end"
		SkewTwitchMessageCommand="finishtweening;aux,0;linear,9.6;aux,1.5;linear,1.6;aux,0"
	/>
	
</children></ActorFrame>